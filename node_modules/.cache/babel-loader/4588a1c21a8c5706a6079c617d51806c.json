{"ast":null,"code":"import { compose, castArray } from '@react-pdf/fns';\nimport parse$1 from 'postcss-value-parser/lib/parse';\nimport parseUnit from 'postcss-value-parser/lib/unit';\nimport hlsToHex from 'hsl-to-hex';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\nimport matchMedia from 'media-engine';\nvar flexDefaults = [1, 1, 0];\n\nvar expandFlex = function expandFlex(key, value) {\n  var matches = (\"\" + value).split(' ');\n  var flexGrow = matches[0] || flexDefaults[0];\n  var flexShrink = matches[1] || flexDefaults[1];\n  var flexBasis = matches[2] || flexDefaults[2];\n  return {\n    flexGrow: flexGrow,\n    flexShrink: flexShrink,\n    flexBasis: flexBasis\n  };\n};\n/* eslint-disable no-plusplus */\n\n\nvar BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\n\nvar logError = function logError(style, value) {\n  console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + ' '.repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\n\nvar expandBoxModel = function expandBoxModel(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      expandsTo = _ref.expandsTo,\n      _ref$maxValues = _ref.maxValues,\n      maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues,\n      _ref$autoSupported = _ref.autoSupported,\n      autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n\n  return function (model, value) {\n    var _ref2;\n\n    var nodes = parse$1(\"\" + value);\n    var parts = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i]; // value contains `calc`, `url` or other css function\n      // `,`, `/` or strings that unsupported by margin and padding\n\n      if (node.type === 'function' || node.type === 'string' || node.type === 'div') {\n        logError(model, value);\n        return {};\n      }\n\n      if (node.type === 'word') {\n        if (node.value === 'auto' && autoSupported) {\n          parts.push(node.value);\n        } else {\n          var result = parseUnit(node.value); // when unit isn't specified this condition is true\n\n          if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n            parts.push(node.value);\n          } else {\n            logError(model, value);\n            return {};\n          }\n        }\n      }\n    } // checks that we have enough parsed values\n\n\n    if (parts.length > maxValues) {\n      logError(model, value);\n      return {};\n    }\n\n    var first = parts[0];\n\n    if (expandsTo) {\n      var second = parts[1] || parts[0];\n      var third = parts[2] || parts[0];\n      var fourth = parts[3] || parts[1] || parts[0];\n      return expandsTo({\n        first: first,\n        second: second,\n        third: third,\n        fourth: fourth\n      });\n    }\n\n    return _ref2 = {}, _ref2[model] = first, _ref2;\n  };\n};\n\nvar processMargin = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n        second = _ref.second,\n        third = _ref.third,\n        fourth = _ref.fourth;\n    return {\n      marginTop: first,\n      marginRight: second,\n      marginBottom: third,\n      marginLeft: fourth\n    };\n  },\n  maxValues: 4,\n  autoSupported: true\n});\nvar processMarginVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n        second = _ref2.second;\n    return {\n      marginTop: first,\n      marginBottom: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n        second = _ref3.second;\n    return {\n      marginRight: first,\n      marginLeft: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginSingle = expandBoxModel({\n  autoSupported: true\n});\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\n\nvar matchBorderShorthand = function matchBorderShorthand(value) {\n  return value.match(BORDER_SHORTHAND_REGEX) || [];\n};\n\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar processPadding = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n        second = _ref.second,\n        third = _ref.third,\n        fourth = _ref.fourth;\n    return {\n      paddingTop: first,\n      paddingRight: second,\n      paddingBottom: third,\n      paddingLeft: fourth\n    };\n  },\n  maxValues: 4\n});\nvar processPaddingVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n        second = _ref2.second;\n    return {\n      paddingTop: first,\n      paddingBottom: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n        second = _ref3.second;\n    return {\n      paddingRight: first,\n      paddingLeft: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingSingle = expandBoxModel();\n\nvar expandObjectPosition = function expandObjectPosition(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    objectPositionX: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    objectPositionY: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\n\nvar Y_AXIS_SHORTHANDS = {\n  top: true,\n  bottom: true\n};\n\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n  if (Y_AXIS_SHORTHANDS[a]) return 1;\n  if (Y_AXIS_SHORTHANDS[b]) return -1;\n  return 0;\n};\n\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n  if (!values || values.length === 0) return ['center', 'center'];\n  var pair = values.length === 1 ? [values[0], 'center'] : values;\n  return pair.sort(sortTransformOriginPair);\n}; // Transforms shorthand transformOrigin values\n\n\nvar expandTransformOrigin = function expandTransformOrigin(key, value) {\n  var match = (\"\" + value).split(' ');\n  var pair = getTransformOriginPair(match);\n  return {\n    transformOriginX: pair[0],\n    transformOriginY: pair[1]\n  };\n};\n\nvar shorthands = {\n  flex: expandFlex,\n  margin: processMargin,\n  marginHorizontal: processMarginHorizontal,\n  marginVertical: processMarginVertical,\n  marginTop: processMarginSingle,\n  marginRight: processMarginSingle,\n  marginBottom: processMarginSingle,\n  marginLeft: processMarginSingle,\n  padding: processPadding,\n  paddingHorizontal: processPaddingHorizontal,\n  paddingVertical: processPaddingVertical,\n  paddingTop: processPaddingSingle,\n  paddingRight: processPaddingSingle,\n  paddingBottom: processPaddingSingle,\n  paddingLeft: processPaddingSingle,\n  border: expandBorders,\n  borderTop: expandBorders,\n  borderRight: expandBorders,\n  borderBottom: expandBorders,\n  borderLeft: expandBorders,\n  borderColor: expandBorders,\n  borderRadius: expandBorders,\n  borderStyle: expandBorders,\n  borderWidth: expandBorders,\n  objectPosition: expandObjectPosition,\n  transformOrigin: expandTransformOrigin\n};\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\n\nvar expandStyle = function expandStyle(key, value) {\n  var _ref;\n\n  return shorthands[key] ? shorthands[key](key, value) : (_ref = {}, _ref[key] = value, _ref);\n};\n/**\n * Expand the shorthand properties.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\n\n\nvar expand = function expand(style) {\n  if (!style) return style;\n  var propsArray = Object.keys(style);\n  var resolvedStyle = {};\n\n  for (var i = 0; i < propsArray.length; i += 1) {\n    var key = propsArray[i];\n    var value = style[key];\n    var extended = expandStyle(key, value);\n    var keys = Object.keys(extended);\n\n    for (var j = 0; j < keys.length; j += 1) {\n      var propName = keys[j];\n      var propValue = extended[propName];\n      resolvedStyle[propName] = propValue;\n    }\n  }\n\n  return resolvedStyle;\n};\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\n\n\nvar compact = function compact(array) {\n  return array.filter(Boolean);\n};\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\n\n\nvar mergeStyles = function mergeStyles(styles) {\n  return styles.reduce(function (acc, style) {\n    var s = Array.isArray(style) ? flatten(style) : style;\n    Object.keys(s).forEach(function (key) {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n    return acc;\n  }, {});\n};\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\n\n\nvar flatten = compose(mergeStyles, compact, castArray);\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\n\nvar parseValue = function parseValue(value) {\n  var match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n  return match ? {\n    value: parseFloat(match[1], 10),\n    unit: match[2] || 'pt'\n  } : {\n    value: value,\n    unit: undefined\n  };\n};\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar transformUnit = function transformUnit(container, value) {\n  var scalar = parseValue(value);\n  var dpi = container.dpi || 72;\n  var mmFactor = 1 / 25.4 * dpi;\n  var cmFactor = 1 / 2.54 * dpi;\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * dpi;\n\n    case 'mm':\n      return scalar.value * mmFactor;\n\n    case 'cm':\n      return scalar.value * cmFactor;\n\n    case 'vh':\n      return scalar.value * (container.height / 100);\n\n    case 'vw':\n      return scalar.value * (container.width / 100);\n\n    default:\n      return scalar.value;\n  }\n};\n\nvar isRgb = function isRgb(value) {\n  return /rgba?/g.test(value);\n};\n\nvar isHsl = function isHsl(value) {\n  return /hsla?/g.test(value);\n};\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar parseRgb = function parseRgb(value) {\n  var rgb = colorString.get.rgb(value);\n  return colorString.to.hex(rgb);\n};\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar parseHsl = function parseHsl(value) {\n  var hsl = colorString.get.hsl(value).map(Math.round);\n  var hex = hlsToHex.apply(void 0, hsl);\n  return hex.toUpperCase();\n};\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar transformColor = function transformColor(value) {\n  if (isRgb(value)) return parseRgb(value);\n  if (isHsl(value)) return parseHsl(value);\n  return value;\n};\n\nvar parse = function parse(transformString) {\n  var transforms = transformString.trim().split(/\\) |\\)/); // Handle \"initial\", \"inherit\", \"unset\".\n\n  if (transforms.length === 1) {\n    return [[transforms[0], true]];\n  }\n\n  var parsed = [];\n\n  for (var i = 0; i < transforms.length; i += 1) {\n    var transform = transforms[i];\n\n    if (transform) {\n      var _transform$split = transform.split('('),\n          name = _transform$split[0],\n          rawValue = _transform$split[1];\n\n      var splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n      var value = rawValue.split(splitChar).map(function (val) {\n        return val.trim();\n      });\n      parsed.push({\n        operation: name,\n        value: value\n      });\n    }\n  }\n\n  return parsed;\n};\n\nvar parseAngle = function parseAngle(value) {\n  var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n\n  var _unitsRegexp$exec = unitsRegexp.exec(value),\n      angle = _unitsRegexp$exec[1],\n      unit = _unitsRegexp$exec[2];\n\n  var number = Number.parseFloat(angle);\n  return unit === 'rad' ? number * 180 / Math.PI : number;\n};\n\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n  var operation = _ref.operation,\n      value = _ref.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var _value$map = value.map(function (num) {\n          return Number.parseFloat(num);\n        }),\n            scaleX = _value$map[0],\n            _value$map$ = _value$map[1],\n            scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n\n        return {\n          operation: 'scale',\n          value: [scaleX, scaleY]\n        };\n      }\n\n    case 'scaleX':\n      {\n        return {\n          operation: 'scale',\n          value: [Number.parseFloat(value), 1]\n        };\n      }\n\n    case 'scaleY':\n      {\n        return {\n          operation: 'scale',\n          value: [1, Number.parseFloat(value)]\n        };\n      }\n\n    case 'rotate':\n      {\n        return {\n          operation: 'rotate',\n          value: [parseAngle(value)]\n        };\n      }\n\n    case 'translate':\n      {\n        return {\n          operation: 'translate',\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n\n    case 'translateX':\n      {\n        return {\n          operation: 'translate',\n          value: [Number.parseFloat(value), 0]\n        };\n      }\n\n    case 'translateY':\n      {\n        return {\n          operation: 'translate',\n          value: [0, Number.parseFloat(value)]\n        };\n      }\n\n    case 'skew':\n      {\n        return {\n          operation: 'skew',\n          value: value.map(parseAngle)\n        };\n      }\n\n    case 'skewX':\n      {\n        return {\n          operation: 'skew',\n          value: [parseAngle(value), 0]\n        };\n      }\n\n    case 'skewY':\n      {\n        return {\n          operation: 'skew',\n          value: [0, parseAngle(value)]\n        };\n      }\n\n    default:\n      {\n        return {\n          operation: operation,\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n  }\n};\n\nvar normalize = function normalize(operations) {\n  return operations.map(function (operation) {\n    return normalizeTransformOperation(operation);\n  });\n};\n\nvar processTransform = function processTransform(value) {\n  if (typeof value !== 'string') return value;\n  return normalize(parse(value));\n};\n\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\n\nvar processFontWeight = function processFontWeight(value) {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  var lv = value.toLowerCase();\n  if (FONT_WEIGHTS[lv]) return FONT_WEIGHTS[lv];\n  return value;\n};\n\nvar matchNumber = function matchNumber(value) {\n  return typeof value === 'string' && /^-?\\d*\\.?\\d*$/.test(value);\n};\n\nvar castFloat = function castFloat(value) {\n  if (typeof value !== 'string') return value;\n  if (matchNumber(value)) return parseFloat(value, 10);\n  return value;\n};\n\nvar offsetKeyword = function offsetKeyword(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n\n    case 'right':\n    case 'bottom':\n      return '100%';\n\n    case 'center':\n      return '50%';\n\n    default:\n      return null;\n  }\n};\n\nvar transformObjectPosition = function transformObjectPosition(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar transformTransformOrigin = function transformTransformOrigin(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar handlers = {\n  transform: processTransform,\n  fontWeight: processFontWeight,\n  objectPositionX: transformObjectPosition,\n  objectPositionY: transformObjectPosition,\n  transformOriginX: transformTransformOrigin,\n  transformOriginY: transformTransformOrigin\n};\n\nvar transformStyle = function transformStyle(key, value, container) {\n  var result = handlers[key] ? handlers[key](value) : value;\n  return transformColor(transformUnit(container, castFloat(result)));\n};\n/**\n * Transform styles values\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\n\n\nvar transform = function transform(container) {\n  return function (style) {\n    if (!style) return style;\n    var propsArray = Object.keys(style);\n    var resolvedStyle = {};\n\n    for (var i = 0; i < propsArray.length; i += 1) {\n      var key = propsArray[i];\n      var value = style[key];\n      var transformed = transformStyle(key, value, container);\n      resolvedStyle[key] = transformed;\n    }\n\n    return resolvedStyle;\n  };\n};\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\n\n\nvar resolveMediaQueries = function resolveMediaQueries(container, styles) {\n  return Object.keys(styles).reduce(function (acc, key) {\n    var _extends2;\n\n    if (/@media/.test(key)) {\n      var _matchMedia;\n\n      return _extends({}, acc, matchMedia((_matchMedia = {}, _matchMedia[key] = styles[key], _matchMedia), container));\n    }\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = styles[key], _extends2));\n  }, {});\n};\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\n\n\nvar resolveStyles = function resolveStyles(container, style) {\n  var computeMediaQueries = function computeMediaQueries(value) {\n    return resolveMediaQueries(container, value);\n  };\n\n  return compose(transform(container), expand, computeMediaQueries, flatten)(style);\n}; // Utils exported for SVG processing\n\n\nexport { resolveStyles as default, flatten, processTransform, transformColor };","map":{"version":3,"names":["compose","castArray","parse$1","parseUnit","hlsToHex","colorString","_extends","matchMedia","flexDefaults","expandFlex","key","value","matches","split","flexGrow","flexShrink","flexBasis","BOX_MODEL_UNITS","logError","style","console","error","repeat","length","expandBoxModel","_temp","_ref","expandsTo","_ref$maxValues","maxValues","_ref$autoSupported","autoSupported","model","_ref2","nodes","parts","i","node","type","push","result","includes","unit","first","second","third","fourth","processMargin","marginTop","marginRight","marginBottom","marginLeft","processMarginVertical","processMarginHorizontal","_ref3","processMarginSingle","BORDER_SHORTHAND_REGEX","matchBorderShorthand","match","expandBorders","color","width","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","processPadding","paddingTop","paddingRight","paddingBottom","paddingLeft","processPaddingVertical","processPaddingHorizontal","processPaddingSingle","expandObjectPosition","objectPositionX","objectPositionY","Y_AXIS_SHORTHANDS","top","bottom","sortTransformOriginPair","a","b","getTransformOriginPair","values","pair","sort","expandTransformOrigin","transformOriginX","transformOriginY","shorthands","flex","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderStyle","borderWidth","objectPosition","transformOrigin","expandStyle","expand","propsArray","Object","keys","resolvedStyle","extended","j","propName","propValue","compact","array","filter","Boolean","mergeStyles","styles","reduce","acc","s","Array","isArray","flatten","forEach","undefined","parseValue","exec","parseFloat","transformUnit","container","scalar","dpi","mmFactor","cmFactor","height","isRgb","test","isHsl","parseRgb","rgb","get","to","hex","parseHsl","hsl","map","Math","round","apply","toUpperCase","transformColor","parse","transformString","transforms","trim","parsed","transform","_transform$split","name","rawValue","splitChar","indexOf","val","operation","parseAngle","unitsRegexp","_unitsRegexp$exec","angle","number","Number","PI","normalizeTransformOperation","_value$map","num","scaleX","_value$map$","scaleY","normalize","operations","processTransform","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","processFontWeight","lv","toLowerCase","matchNumber","castFloat","offsetKeyword","transformObjectPosition","transformTransformOrigin","handlers","fontWeight","transformStyle","transformed","resolveMediaQueries","_extends2","_matchMedia","resolveStyles","computeMediaQueries","default"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/node_modules/@react-pdf/stylesheet/lib/index.es.js"],"sourcesContent":["import { compose, castArray } from '@react-pdf/fns';\nimport parse$1 from 'postcss-value-parser/lib/parse';\nimport parseUnit from 'postcss-value-parser/lib/unit';\nimport hlsToHex from 'hsl-to-hex';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\nimport matchMedia from 'media-engine';\n\nvar flexDefaults = [1, 1, 0];\n\nvar expandFlex = function expandFlex(key, value) {\n  var matches = (\"\" + value).split(' ');\n  var flexGrow = matches[0] || flexDefaults[0];\n  var flexShrink = matches[1] || flexDefaults[1];\n  var flexBasis = matches[2] || flexDefaults[2];\n  return {\n    flexGrow: flexGrow,\n    flexShrink: flexShrink,\n    flexBasis: flexBasis\n  };\n};\n\n/* eslint-disable no-plusplus */\nvar BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\n\nvar logError = function logError(style, value) {\n  console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + ' '.repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\n\nvar expandBoxModel = function expandBoxModel(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      expandsTo = _ref.expandsTo,\n      _ref$maxValues = _ref.maxValues,\n      maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues,\n      _ref$autoSupported = _ref.autoSupported,\n      autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n\n  return function (model, value) {\n    var _ref2;\n\n    var nodes = parse$1(\"\" + value);\n    var parts = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i]; // value contains `calc`, `url` or other css function\n      // `,`, `/` or strings that unsupported by margin and padding\n\n      if (node.type === 'function' || node.type === 'string' || node.type === 'div') {\n        logError(model, value);\n        return {};\n      }\n\n      if (node.type === 'word') {\n        if (node.value === 'auto' && autoSupported) {\n          parts.push(node.value);\n        } else {\n          var result = parseUnit(node.value); // when unit isn't specified this condition is true\n\n          if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n            parts.push(node.value);\n          } else {\n            logError(model, value);\n            return {};\n          }\n        }\n      }\n    } // checks that we have enough parsed values\n\n\n    if (parts.length > maxValues) {\n      logError(model, value);\n      return {};\n    }\n\n    var first = parts[0];\n\n    if (expandsTo) {\n      var second = parts[1] || parts[0];\n      var third = parts[2] || parts[0];\n      var fourth = parts[3] || parts[1] || parts[0];\n      return expandsTo({\n        first: first,\n        second: second,\n        third: third,\n        fourth: fourth\n      });\n    }\n\n    return _ref2 = {}, _ref2[model] = first, _ref2;\n  };\n};\n\nvar processMargin = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n        second = _ref.second,\n        third = _ref.third,\n        fourth = _ref.fourth;\n    return {\n      marginTop: first,\n      marginRight: second,\n      marginBottom: third,\n      marginLeft: fourth\n    };\n  },\n  maxValues: 4,\n  autoSupported: true\n});\nvar processMarginVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n        second = _ref2.second;\n    return {\n      marginTop: first,\n      marginBottom: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n        second = _ref3.second;\n    return {\n      marginRight: first,\n      marginLeft: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginSingle = expandBoxModel({\n  autoSupported: true\n});\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\n\nvar matchBorderShorthand = function matchBorderShorthand(value) {\n  return value.match(BORDER_SHORTHAND_REGEX) || [];\n};\n\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar processPadding = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n        second = _ref.second,\n        third = _ref.third,\n        fourth = _ref.fourth;\n    return {\n      paddingTop: first,\n      paddingRight: second,\n      paddingBottom: third,\n      paddingLeft: fourth\n    };\n  },\n  maxValues: 4\n});\nvar processPaddingVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n        second = _ref2.second;\n    return {\n      paddingTop: first,\n      paddingBottom: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n        second = _ref3.second;\n    return {\n      paddingRight: first,\n      paddingLeft: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingSingle = expandBoxModel();\n\nvar expandObjectPosition = function expandObjectPosition(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    objectPositionX: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    objectPositionY: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\n\nvar Y_AXIS_SHORTHANDS = {\n  top: true,\n  bottom: true\n};\n\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n  if (Y_AXIS_SHORTHANDS[a]) return 1;\n  if (Y_AXIS_SHORTHANDS[b]) return -1;\n  return 0;\n};\n\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n  if (!values || values.length === 0) return ['center', 'center'];\n  var pair = values.length === 1 ? [values[0], 'center'] : values;\n  return pair.sort(sortTransformOriginPair);\n}; // Transforms shorthand transformOrigin values\n\n\nvar expandTransformOrigin = function expandTransformOrigin(key, value) {\n  var match = (\"\" + value).split(' ');\n  var pair = getTransformOriginPair(match);\n  return {\n    transformOriginX: pair[0],\n    transformOriginY: pair[1]\n  };\n};\n\nvar shorthands = {\n  flex: expandFlex,\n  margin: processMargin,\n  marginHorizontal: processMarginHorizontal,\n  marginVertical: processMarginVertical,\n  marginTop: processMarginSingle,\n  marginRight: processMarginSingle,\n  marginBottom: processMarginSingle,\n  marginLeft: processMarginSingle,\n  padding: processPadding,\n  paddingHorizontal: processPaddingHorizontal,\n  paddingVertical: processPaddingVertical,\n  paddingTop: processPaddingSingle,\n  paddingRight: processPaddingSingle,\n  paddingBottom: processPaddingSingle,\n  paddingLeft: processPaddingSingle,\n  border: expandBorders,\n  borderTop: expandBorders,\n  borderRight: expandBorders,\n  borderBottom: expandBorders,\n  borderLeft: expandBorders,\n  borderColor: expandBorders,\n  borderRadius: expandBorders,\n  borderStyle: expandBorders,\n  borderWidth: expandBorders,\n  objectPosition: expandObjectPosition,\n  transformOrigin: expandTransformOrigin\n};\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\n\nvar expandStyle = function expandStyle(key, value) {\n  var _ref;\n\n  return shorthands[key] ? shorthands[key](key, value) : (_ref = {}, _ref[key] = value, _ref);\n};\n/**\n * Expand the shorthand properties.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\n\n\nvar expand = function expand(style) {\n  if (!style) return style;\n  var propsArray = Object.keys(style);\n  var resolvedStyle = {};\n\n  for (var i = 0; i < propsArray.length; i += 1) {\n    var key = propsArray[i];\n    var value = style[key];\n    var extended = expandStyle(key, value);\n    var keys = Object.keys(extended);\n\n    for (var j = 0; j < keys.length; j += 1) {\n      var propName = keys[j];\n      var propValue = extended[propName];\n      resolvedStyle[propName] = propValue;\n    }\n  }\n\n  return resolvedStyle;\n};\n\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\n\nvar compact = function compact(array) {\n  return array.filter(Boolean);\n};\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\n\n\nvar mergeStyles = function mergeStyles(styles) {\n  return styles.reduce(function (acc, style) {\n    var s = Array.isArray(style) ? flatten(style) : style;\n    Object.keys(s).forEach(function (key) {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n    return acc;\n  }, {});\n};\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\n\n\nvar flatten = compose(mergeStyles, compact, castArray);\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\nvar parseValue = function parseValue(value) {\n  var match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n  return match ? {\n    value: parseFloat(match[1], 10),\n    unit: match[2] || 'pt'\n  } : {\n    value: value,\n    unit: undefined\n  };\n};\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar transformUnit = function transformUnit(container, value) {\n  var scalar = parseValue(value);\n  var dpi = container.dpi || 72;\n  var mmFactor = 1 / 25.4 * dpi;\n  var cmFactor = 1 / 2.54 * dpi;\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * dpi;\n\n    case 'mm':\n      return scalar.value * mmFactor;\n\n    case 'cm':\n      return scalar.value * cmFactor;\n\n    case 'vh':\n      return scalar.value * (container.height / 100);\n\n    case 'vw':\n      return scalar.value * (container.width / 100);\n\n    default:\n      return scalar.value;\n  }\n};\n\nvar isRgb = function isRgb(value) {\n  return /rgba?/g.test(value);\n};\n\nvar isHsl = function isHsl(value) {\n  return /hsla?/g.test(value);\n};\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar parseRgb = function parseRgb(value) {\n  var rgb = colorString.get.rgb(value);\n  return colorString.to.hex(rgb);\n};\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar parseHsl = function parseHsl(value) {\n  var hsl = colorString.get.hsl(value).map(Math.round);\n  var hex = hlsToHex.apply(void 0, hsl);\n  return hex.toUpperCase();\n};\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar transformColor = function transformColor(value) {\n  if (isRgb(value)) return parseRgb(value);\n  if (isHsl(value)) return parseHsl(value);\n  return value;\n};\n\nvar parse = function parse(transformString) {\n  var transforms = transformString.trim().split(/\\) |\\)/); // Handle \"initial\", \"inherit\", \"unset\".\n\n  if (transforms.length === 1) {\n    return [[transforms[0], true]];\n  }\n\n  var parsed = [];\n\n  for (var i = 0; i < transforms.length; i += 1) {\n    var transform = transforms[i];\n\n    if (transform) {\n      var _transform$split = transform.split('('),\n          name = _transform$split[0],\n          rawValue = _transform$split[1];\n\n      var splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n      var value = rawValue.split(splitChar).map(function (val) {\n        return val.trim();\n      });\n      parsed.push({\n        operation: name,\n        value: value\n      });\n    }\n  }\n\n  return parsed;\n};\n\nvar parseAngle = function parseAngle(value) {\n  var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n\n  var _unitsRegexp$exec = unitsRegexp.exec(value),\n      angle = _unitsRegexp$exec[1],\n      unit = _unitsRegexp$exec[2];\n\n  var number = Number.parseFloat(angle);\n  return unit === 'rad' ? number * 180 / Math.PI : number;\n};\n\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n  var operation = _ref.operation,\n      value = _ref.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var _value$map = value.map(function (num) {\n          return Number.parseFloat(num);\n        }),\n            scaleX = _value$map[0],\n            _value$map$ = _value$map[1],\n            scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n\n        return {\n          operation: 'scale',\n          value: [scaleX, scaleY]\n        };\n      }\n\n    case 'scaleX':\n      {\n        return {\n          operation: 'scale',\n          value: [Number.parseFloat(value), 1]\n        };\n      }\n\n    case 'scaleY':\n      {\n        return {\n          operation: 'scale',\n          value: [1, Number.parseFloat(value)]\n        };\n      }\n\n    case 'rotate':\n      {\n        return {\n          operation: 'rotate',\n          value: [parseAngle(value)]\n        };\n      }\n\n    case 'translate':\n      {\n        return {\n          operation: 'translate',\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n\n    case 'translateX':\n      {\n        return {\n          operation: 'translate',\n          value: [Number.parseFloat(value), 0]\n        };\n      }\n\n    case 'translateY':\n      {\n        return {\n          operation: 'translate',\n          value: [0, Number.parseFloat(value)]\n        };\n      }\n\n    case 'skew':\n      {\n        return {\n          operation: 'skew',\n          value: value.map(parseAngle)\n        };\n      }\n\n    case 'skewX':\n      {\n        return {\n          operation: 'skew',\n          value: [parseAngle(value), 0]\n        };\n      }\n\n    case 'skewY':\n      {\n        return {\n          operation: 'skew',\n          value: [0, parseAngle(value)]\n        };\n      }\n\n    default:\n      {\n        return {\n          operation: operation,\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n  }\n};\n\nvar normalize = function normalize(operations) {\n  return operations.map(function (operation) {\n    return normalizeTransformOperation(operation);\n  });\n};\n\nvar processTransform = function processTransform(value) {\n  if (typeof value !== 'string') return value;\n  return normalize(parse(value));\n};\n\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\n\nvar processFontWeight = function processFontWeight(value) {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  var lv = value.toLowerCase();\n  if (FONT_WEIGHTS[lv]) return FONT_WEIGHTS[lv];\n  return value;\n};\n\nvar matchNumber = function matchNumber(value) {\n  return typeof value === 'string' && /^-?\\d*\\.?\\d*$/.test(value);\n};\n\nvar castFloat = function castFloat(value) {\n  if (typeof value !== 'string') return value;\n  if (matchNumber(value)) return parseFloat(value, 10);\n  return value;\n};\n\nvar offsetKeyword = function offsetKeyword(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n\n    case 'right':\n    case 'bottom':\n      return '100%';\n\n    case 'center':\n      return '50%';\n\n    default:\n      return null;\n  }\n};\n\nvar transformObjectPosition = function transformObjectPosition(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar transformTransformOrigin = function transformTransformOrigin(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar handlers = {\n  transform: processTransform,\n  fontWeight: processFontWeight,\n  objectPositionX: transformObjectPosition,\n  objectPositionY: transformObjectPosition,\n  transformOriginX: transformTransformOrigin,\n  transformOriginY: transformTransformOrigin\n};\n\nvar transformStyle = function transformStyle(key, value, container) {\n  var result = handlers[key] ? handlers[key](value) : value;\n  return transformColor(transformUnit(container, castFloat(result)));\n};\n/**\n * Transform styles values\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\n\n\nvar transform = function transform(container) {\n  return function (style) {\n    if (!style) return style;\n    var propsArray = Object.keys(style);\n    var resolvedStyle = {};\n\n    for (var i = 0; i < propsArray.length; i += 1) {\n      var key = propsArray[i];\n      var value = style[key];\n      var transformed = transformStyle(key, value, container);\n      resolvedStyle[key] = transformed;\n    }\n\n    return resolvedStyle;\n  };\n};\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\n\nvar resolveMediaQueries = function resolveMediaQueries(container, styles) {\n  return Object.keys(styles).reduce(function (acc, key) {\n    var _extends2;\n\n    if (/@media/.test(key)) {\n      var _matchMedia;\n\n      return _extends({}, acc, matchMedia((_matchMedia = {}, _matchMedia[key] = styles[key], _matchMedia), container));\n    }\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = styles[key], _extends2));\n  }, {});\n};\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\n\nvar resolveStyles = function resolveStyles(container, style) {\n  var computeMediaQueries = function computeMediaQueries(value) {\n    return resolveMediaQueries(container, value);\n  };\n\n  return compose(transform(container), expand, computeMediaQueries, flatten)(style);\n}; // Utils exported for SVG processing\n\nexport { resolveStyles as default, flatten, processTransform, transformColor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}