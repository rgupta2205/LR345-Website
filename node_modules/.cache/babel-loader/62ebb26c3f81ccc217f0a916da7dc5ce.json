{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul Gupta\\\\git\\\\lockerroom345website\\\\lockerroom345website\\\\frontend\\\\src\\\\component\\\\Admin\\\\UsersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { getAllUsers, clearErrors, deleteUser } from \"../../actions/userAction\";\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    error: deleteError,\n    isDeleted,\n    message\n  } = useSelector(state => state.profile);\n\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(message);\n      history.push(\"/admin/users\");\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n\n    dispatch(getAllUsers());\n  }, [dispatch, alert, error, deleteError, history, isDeleted, message]);\n  const columns = [//{ field: \"id\", headerName: \"User ID\", minWidth: 180, flex: 0.8 },\n  {\n    field: \"email\",\n    headerName: \"Login ID\",\n    minWidth: 200,\n    flex: 0.1\n  }, {\n    field: \"name\",\n    headerName: \"Name\",\n    minWidth: 150,\n    flex: 0.1\n  }, {\n    field: \"role\",\n    headerName: \"Role\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.1,\n    cellClassName: params => {\n      return (params.getValue(params.id, \"role\") === \"admin\" ? \"greenColor\" : \"\") || (params.getValue(params.id, \"role\") === \"user\" ? \"redColor\" : \"\") || (params.getValue(params.id, \"role\") === \"volunteer\" ? \"blueColor\" : \"\");\n    }\n  }, {\n    field: \"actions\",\n    flex: 0.1,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/admin/user/${params.getValue(params.id, \"id\")}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteUserHandler(params.getValue(params.id, \"id\")),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const rows = [];\n  users && users.forEach(item => {\n    rows.push({\n      id: item._id,\n      role: item.role,\n      email: item.email,\n      name: item.name\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `ALL USERS - Admin`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"productListHeading\",\n          children: \"ALL USERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 10,\n          disableSelectionOnClick: true,\n          className: \"productListTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersList, \"VP6nChBeliZC8XcWRg8ufKgcJzk=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","Link","useAlert","Button","MetaData","EditIcon","DeleteIcon","SideBar","getAllUsers","clearErrors","deleteUser","DELETE_USER_RESET","UsersList","history","dispatch","alert","error","users","state","allUsers","deleteError","isDeleted","message","profile","deleteUserHandler","id","success","push","type","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","sortable","renderCell","rows","forEach","item","_id","role","email","name"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/src/component/Admin/UsersList.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./productList.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { getAllUsers, clearErrors, deleteUser } from \"../../actions/userAction\";\r\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\r\n\r\nconst UsersList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const { error, users } = useSelector((state) => state.allUsers);\r\n\r\n  const {\r\n    error: deleteError,\r\n    isDeleted,\r\n    message,\r\n  } = useSelector((state) => state.profile);\r\n\r\n  const deleteUserHandler = (id) => {\r\n    dispatch(deleteUser(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success(message);\r\n      history.push(\"/admin/users\");\r\n      dispatch({ type: DELETE_USER_RESET });\r\n    }\r\n\r\n    dispatch(getAllUsers());\r\n  }, [dispatch, alert, error, deleteError, history, isDeleted, message]);\r\n\r\n  const columns = [\r\n    //{ field: \"id\", headerName: \"User ID\", minWidth: 180, flex: 0.8 },\r\n\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Login ID\",\r\n      minWidth: 200,\r\n      flex: 0.1,\r\n    },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      minWidth: 150,\r\n      flex: 0.1,\r\n    },\r\n\r\n    {\r\n      field: \"role\",\r\n      headerName: \"Role\",\r\n      type: \"number\",\r\n      minWidth: 150,\r\n      flex: 0.1,\r\n      cellClassName: (params) => {\r\n        return ( params.getValue(params.id, \"role\") === \"admin\" ? \"greenColor\" : \"\" ) || \r\n        (params.getValue(params.id, \"role\") === \"user\" ? \"redColor\" : \"\") || \r\n        (params.getValue(params.id, \"role\") === \"volunteer\" ? \"blueColor\" : \"\");\r\n      },\r\n    },\r\n\r\n    {\r\n      field: \"actions\",\r\n      flex: 0.1,\r\n      headerName: \"Actions\",\r\n      minWidth: 150,\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Fragment>\r\n            <Link to={`/admin/user/${params.getValue(params.id, \"id\")}`}>\r\n              {/* <EditIcon /> */}\r\n              <span>Edit</span>\r\n            </Link>\r\n\r\n            <Button\r\n              onClick={() =>\r\n                deleteUserHandler(params.getValue(params.id, \"id\"))\r\n              }\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = [];\r\n\r\n  users &&\r\n    users.forEach((item) => {\r\n      rows.push({\r\n        id: item._id,\r\n        role: item.role,\r\n        email: item.email,\r\n        name: item.name,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`ALL USERS - Admin`} />\r\n\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"productListContainer\">\r\n          <h1 id=\"productListHeading\">ALL USERS</h1>\r\n\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"productListTable\"\r\n            autoHeight\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}