{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul Gupta\\\\git\\\\lockerroom345website\\\\lockerroom345website\\\\frontend\\\\src\\\\component\\\\Admin\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, updateProduct, getProductDetails } from \"../../actions/productAction\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport SideBar from \"./Sidebar\";\nimport { UPDATE_PRODUCT_RESET } from \"../../constants/productConstants\";\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\nimport HeightIcon from \"@mui/icons-material/Height\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    product\n  } = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error: updateError,\n    isUpdated\n  } = useSelector(state => state.product);\n  const [name, setName] = useState(\"\"); // const [price, setPrice] = useState(0);\n\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [SubCategory, setSubCategory] = useState(\"\");\n  const [ProductSize, setProductSize] = useState(\"\");\n  const [Stock, setStock] = useState(0);\n  const [images, setImages] = useState([]);\n  const [oldImages, setOldImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const categories = [\"FootWears\", \"Clothing\", \"Sports\", \"Miscellaneous\"];\n  const productId = match.params.id;\n  useEffect(() => {\n    //console.log((product.ProductSize).length);\n    //for(let i =0; i< 3; i++){\n    // for (const [key, value] of Object.entries(product.ProductSize[0])) {\n    //   console.log(`${key}: ${value}`);\n    // }\n    //}\n    console.log(\"enter\");\n\n    if (product && product._id !== productId) {\n      console.log(\"entering getProductDetails\");\n      dispatch(getProductDetails(productId));\n    } else {\n      // console.log(\n      //   \"length\",\n      //   product.ProductSize.indexOf((x) => {\n      //     x.size == product.ProductSize.size;\n      //   })\n      // );\n      setName(product.name);\n      setDescription(product.description); // setPrice(product.price);\n\n      setCategory(product.category);\n      setSubCategory(product.SubCategory); // setProductSize(product.ProductSize[0].size);\n      // setProductSize(product.ProductSize[0].size);\n      // setStock(product.ProductSize[0].stock);\n\n      setOldImages(product.images);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"Product Updated Successfully\");\n      history.push(\"/admin/products\");\n      dispatch({\n        type: UPDATE_PRODUCT_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated, productId, product, updateError]);\n\n  const updateProductSubmitHandler = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"name\", name);\n    myForm.set(\"description\", description);\n    myForm.set(\"category\", category);\n    myForm.set(\"SubCategory\", SubCategory);\n    myForm.set(\"ProductSize\", [ProductSize]);\n    myForm.set(\"Stock\", Stock);\n    images.forEach(image => {\n      myForm.append(\"images\", image);\n    });\n    dispatch(updateProduct(productId, myForm));\n  };\n\n  const handlesizeChange = e => {\n    // console.log(e.target.options.selectedIndex);    \n    // //console.log(\"obj\",e.target[e.target.selectedIndex].key );\n    // console.log((product.ProductSize[(e.target.options.selectedIndex)-1]).size);\n    //console.log(\"selectedIndex\",selectedIndex);\n    //console.log(e.target.options[selectedIndex].datasets.key);\n    // for (let node of e.target.children) {\n    //   if (node.value === e.target.value) {\n    //     console.log(node);\n    //     // this.setState({\n    //     //   selected: node.getAttribute('data-id')\n    //     // });\n    //   }\n    // }\n    setProductSize(product.ProductSize[e.target.options.selectedIndex - 1].size);\n    setStock(e.target.value);\n  };\n\n  const updateProductImagesChange = e => {\n    const files = Array.from(e.target.files);\n    setImages([]);\n    setImagesPreview([]);\n    setOldImages([]);\n    files.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview(old => [...old, reader.result]);\n          setImages(old => [...old, reader.result]);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newProductContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"createProductForm\",\n          encType: \"multipart/form-data\",\n          onSubmit: updateProductSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Update Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(SpellcheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Product Name\",\n              required: true,\n              disabled: true,\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(AccountTreeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Category\",\n              required: true,\n              disabled: true,\n              value: product.category // onChange={(e) => setSubCategory(e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FilterAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"SubCategory\",\n              required: true,\n              disabled: true,\n              value: product.SubCategory // onChange={(e) => setSubCategory(e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(HeightIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), product && product.ProductSize && /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"size\",\n              id: \"size\",\n              onChange: e => {\n                handlesizeChange(e);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"selectsize\",\n                children: \"Select Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), product.ProductSize.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.stock,\n                children: item.size\n              }, item.size, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(StorageIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Stock\",\n              required: true,\n              onChange: e => setStock(e.target.value),\n              value: Stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"createProductFormFile\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"avatar\",\n              accept: \"image/*\",\n              onChange: updateProductImagesChange,\n              multiple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"createProductFormImage\",\n            children: oldImages && oldImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.url,\n              alt: \"Old Product Preview\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"createProductFormImage\",\n            children: imagesPreview.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"Product Preview\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"createProductBtn\",\n            type: \"submit\",\n            disabled: loading ? true : false,\n            children: \"Update Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProduct, \"aloPc5EPRpHHsmYpja7+OnY5CDk=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","useSelector","useDispatch","clearErrors","updateProduct","getProductDetails","useAlert","Button","MetaData","AccountTreeIcon","DescriptionIcon","StorageIcon","SpellcheckIcon","AttachMoneyIcon","SideBar","UPDATE_PRODUCT_RESET","FilterAltIcon","HeightIcon","UpdateProduct","history","match","dispatch","alert","error","product","state","productDetails","loading","updateError","isUpdated","name","setName","description","setDescription","category","setCategory","SubCategory","setSubCategory","ProductSize","setProductSize","Stock","setStock","images","setImages","oldImages","setOldImages","imagesPreview","setImagesPreview","categories","productId","params","id","console","log","_id","success","push","type","updateProductSubmitHandler","e","preventDefault","myForm","FormData","set","forEach","image","append","handlesizeChange","target","options","selectedIndex","size","value","updateProductImagesChange","files","Array","from","file","reader","FileReader","onload","readyState","old","result","readAsDataURL","map","item","index","stock","url"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/src/component/Admin/UpdateProduct.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  updateProduct,\r\n  getProductDetails,\r\n} from \"../../actions/productAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { UPDATE_PRODUCT_RESET } from \"../../constants/productConstants\";\r\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\r\nimport HeightIcon from \"@mui/icons-material/Height\";\r\n\r\nconst UpdateProduct = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { error, product } = useSelector((state) => state.productDetails);\r\n\r\n  const {\r\n    loading,\r\n    error: updateError,\r\n    isUpdated,\r\n  } = useSelector((state) => state.product);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  // const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [SubCategory, setSubCategory] = useState(\"\");\r\n  const [ProductSize, setProductSize] = useState(\"\");\r\n  const [Stock, setStock] = useState(0);\r\n  const [images, setImages] = useState([]);\r\n  const [oldImages, setOldImages] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n  const categories = [\"FootWears\", \"Clothing\", \"Sports\", \"Miscellaneous\"];\r\n\r\n  const productId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    //console.log((product.ProductSize).length);\r\n    //for(let i =0; i< 3; i++){\r\n    // for (const [key, value] of Object.entries(product.ProductSize[0])) {\r\n    //   console.log(`${key}: ${value}`);\r\n    // }\r\n    //}\r\n    console.log(\"enter\");\r\n    if (product && product._id !== productId) {\r\n      console.log(\"entering getProductDetails\");\r\n      dispatch(getProductDetails(productId));\r\n    } else {\r\n      // console.log(\r\n      //   \"length\",\r\n      //   product.ProductSize.indexOf((x) => {\r\n      //     x.size == product.ProductSize.size;\r\n      //   })\r\n      // );\r\n      setName(product.name);\r\n      setDescription(product.description);\r\n      // setPrice(product.price);\r\n      setCategory(product.category);\r\n      setSubCategory(product.SubCategory);\r\n      // setProductSize(product.ProductSize[0].size);\r\n      // setProductSize(product.ProductSize[0].size);\r\n      // setStock(product.ProductSize[0].stock);\r\n      setOldImages(product.images);\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"Product Updated Successfully\");\r\n      history.push(\"/admin/products\");\r\n      dispatch({ type: UPDATE_PRODUCT_RESET });\r\n    }\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    history,\r\n    isUpdated,\r\n    productId,\r\n    product,\r\n    updateError,\r\n  ]);\r\n\r\n  const updateProductSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"description\", description);\r\n    myForm.set(\"category\", category);\r\n    myForm.set(\"SubCategory\", SubCategory);\r\n    myForm.set(\"ProductSize\", [ProductSize]);\r\n    myForm.set(\"Stock\", Stock);\r\n\r\n    images.forEach((image) => {\r\n      myForm.append(\"images\", image);\r\n    });\r\n    dispatch(updateProduct(productId, myForm));\r\n  };\r\n\r\n  const handlesizeChange = (e) => {\r\n   \r\n    // console.log(e.target.options.selectedIndex);    \r\n    // //console.log(\"obj\",e.target[e.target.selectedIndex].key );\r\n    // console.log((product.ProductSize[(e.target.options.selectedIndex)-1]).size);\r\n    \r\n    //console.log(\"selectedIndex\",selectedIndex);\r\n    //console.log(e.target.options[selectedIndex].datasets.key);\r\n    // for (let node of e.target.children) {\r\n    //   if (node.value === e.target.value) {\r\n    //     console.log(node);\r\n    //     // this.setState({\r\n    //     //   selected: node.getAttribute('data-id')\r\n    //     // });\r\n    //   }\r\n    // }\r\n    setProductSize((product.ProductSize[(e.target.options.selectedIndex)-1]).size);\r\n    setStock(e.target.value);\r\n  };\r\n\r\n  const updateProductImagesChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setImages([]);\r\n    setImagesPreview([]);\r\n    setOldImages([]);\r\n\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImagesPreview((old) => [...old, reader.result]);\r\n          setImages((old) => [...old, reader.result]);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Create Product\" />\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"newProductContainer\">\r\n          <form\r\n            className=\"createProductForm\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={updateProductSubmitHandler}\r\n          >\r\n            <h1>Update Product</h1>\r\n\r\n            <div>\r\n              <SpellcheckIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Product Name\"\r\n                required\r\n                disabled\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            {/* <div>\r\n              <DescriptionIcon />\r\n              <textarea\r\n                placeholder=\"Product Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                cols=\"30\"\r\n                rows=\"1\"\r\n              ></textarea>\r\n            </div> */}\r\n\r\n            <div>\r\n              <AccountTreeIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Category\"\r\n                required\r\n                disabled\r\n                value = {product.category}\r\n                // onChange={(e) => setSubCategory(e.target.value)}\r\n              />\r\n              {/* <select\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                <option value=\"\">Choose Category</option>\r\n                {categories.map((cate) => (\r\n                  <option key={cate} value={cate}>\r\n                    {cate}\r\n                  </option>\r\n                ))}\r\n              </select> */}\r\n            </div>\r\n            <div>\r\n              <FilterAltIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"SubCategory\"\r\n                required\r\n                disabled\r\n                value = {product.SubCategory}\r\n                // onChange={(e) => setSubCategory(e.target.value)}\r\n              />\r\n              {/* <select\r\n                name=\"category\"\r\n                id=\"category\"\r\n                onChange={(e) => {\r\n                  setSubCategory(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"SelectCategory\">Select SubCategory</option>\r\n                <option value=\"Mens sizing\">Mens sizing</option>\r\n                <option value=\"Womens sizing\">Womens sizing</option>\r\n                <option value=\"Boys' sizing\">Boys' sizing</option>\r\n                <option value=\"Girls' sizing\">Girls' sizing</option>\r\n                <option value=\"Toddlers sizing\">Toddlers sizing</option>\r\n              </select> */}\r\n            </div>\r\n\r\n            <div>\r\n              <HeightIcon />\r\n              {/* <input\r\n                type=\"text\"\r\n                placeholder=\"Size\"\r\n                required\r\n                onChange={(e) => setSize(e.target.value)}\r\n              /> */}\r\n              {/* <h1>{JSON.stringify(product.ProductSize)}</h1> */}\r\n              {product && product.ProductSize && (\r\n                <select\r\n                  name=\"size\"\r\n                  id=\"size\"\r\n                  onChange={(e) => {\r\n                    handlesizeChange(e);\r\n                  }}\r\n                >\r\n                  <option value=\"selectsize\">Select Size</option>\r\n                  {/* {Object.keys(product.ProductSize).forEach((x) => {\r\n                    console.log(\r\n                      product.ProductSize[x].size,\r\n                      product.ProductSize[x].stock\r\n                    );\r\n                    <option\r\n                      key={product.ProductSize[x].size}\r\n                      value={product.ProductSize[x].stock}\r\n                    >\r\n                      {product.ProductSize[x].size}\r\n                    </option>;\r\n                  })} */}\r\n                  {product.ProductSize.map((item, index) => (\r\n                    <option key={item.size} value={item.stock}>\r\n                      {item.size}\r\n                    </option>\r\n                  ))}\r\n\r\n                  {/* {                    \r\n                  [...Object.entries(product.ProductSize[0])].map((k, v) => {\r\n                    return <option key={k[1]} value={v[1]}>{k}</option>;\r\n                  })} */}\r\n                </select>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <StorageIcon />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Stock\"\r\n                required\r\n                onChange={(e) => setStock(e.target.value)}\r\n                value={Stock}\r\n              />\r\n            </div>\r\n\r\n            <div id=\"createProductFormFile\">\r\n              <input\r\n                type=\"file\"\r\n                name=\"avatar\"\r\n                accept=\"image/*\"\r\n                onChange={updateProductImagesChange}\r\n                multiple\r\n              />\r\n            </div>\r\n\r\n            <div id=\"createProductFormImage\">\r\n              {oldImages &&\r\n                oldImages.map((image, index) => (\r\n                  <img key={index} src={image.url} alt=\"Old Product Preview\" />\r\n                ))}\r\n            </div>\r\n\r\n            <div id=\"createProductFormImage\">\r\n              {imagesPreview.map((image, index) => (\r\n                <img key={index} src={image} alt=\"Product Preview\" />\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              id=\"createProductBtn\"\r\n              type=\"submit\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update Item\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}