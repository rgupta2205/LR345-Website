{"ast":null,"code":"'use strict';\n\nconst HtmlParser = require('htmlparser2').Parser;\n\nconst DomHandler = require('domhandler').DomHandler;\n\nconst ProcessingInstructions = require('./processing-instructions');\n\nconst IsValidNodeDefinitions = require('./is-valid-node-definitions');\n\nconst utils = require('./utils');\n\nfunction Html2ReactParser(options) {\n  function parseHtmlToTree(html) {\n    options = options || {};\n    options.decodeEntities = true;\n    const handler = new DomHandler();\n    const parser = new HtmlParser(handler, options);\n    parser.parseComplete(html);\n    return handler.dom.filter(function (element) {\n      return element.type !== 'directive';\n    });\n  }\n\n  ;\n\n  function traverseDom(node, isValidNode, processingInstructions, preprocessingInstructions, index) {\n    if (isValidNode(node)) {\n      (preprocessingInstructions || []).forEach(instruction => {\n        if (instruction.shouldPreprocessNode(node)) {\n          instruction.preprocessNode(node, index);\n        }\n      });\n      const processingInstruction = (processingInstructions || []).find(instruction => {\n        return instruction.shouldProcessNode(node);\n      });\n\n      if (processingInstruction != null) {\n        const children = (node.children || []).map((child, i) => {\n          return traverseDom(child, isValidNode, processingInstructions, preprocessingInstructions, i);\n        }).filter(child => {\n          return child != null && child !== false;\n        });\n\n        if (processingInstruction.replaceChildren) {\n          return utils.createElement(node, index, node.data, [processingInstruction.processNode(node, children, index)]);\n        } else {\n          return processingInstruction.processNode(node, children, index);\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  ;\n\n  function parseWithInstructions(html, isValidNode, processingInstructions, preprocessingInstructions) {\n    const domTree = parseHtmlToTree(html);\n    const list = domTree.map(function (domTreeItem, index) {\n      return traverseDom(domTreeItem, isValidNode, processingInstructions, preprocessingInstructions, index);\n    });\n    return list.length <= 1 ? list[0] : list;\n  }\n\n  ;\n\n  function parse(html) {\n    const processingInstructions = new ProcessingInstructions();\n    return parseWithInstructions(html, IsValidNodeDefinitions.alwaysValid, processingInstructions.defaultProcessingInstructions);\n  }\n\n  ;\n  return {\n    parse: parse,\n    parseWithInstructions: parseWithInstructions\n  };\n}\n\n;\nmodule.exports = Html2ReactParser;","map":{"version":3,"names":["HtmlParser","require","Parser","DomHandler","ProcessingInstructions","IsValidNodeDefinitions","utils","Html2ReactParser","options","parseHtmlToTree","html","decodeEntities","handler","parser","parseComplete","dom","filter","element","type","traverseDom","node","isValidNode","processingInstructions","preprocessingInstructions","index","forEach","instruction","shouldPreprocessNode","preprocessNode","processingInstruction","find","shouldProcessNode","children","map","child","i","replaceChildren","createElement","data","processNode","parseWithInstructions","domTree","list","domTreeItem","length","parse","alwaysValid","defaultProcessingInstructions","module","exports"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/node_modules/html-to-react/lib/parser.js"],"sourcesContent":["'use strict';\nconst HtmlParser = require('htmlparser2').Parser;\nconst DomHandler = require('domhandler').DomHandler;\nconst ProcessingInstructions = require('./processing-instructions');\nconst IsValidNodeDefinitions = require('./is-valid-node-definitions');\nconst utils = require('./utils');\n\nfunction Html2ReactParser(options) {\n  function parseHtmlToTree(html) {\n    options = options || {};\n    options.decodeEntities = true;\n    const handler = new DomHandler();\n    const parser = new HtmlParser(handler, options);\n    parser.parseComplete(html);\n    return handler.dom.filter(function (element) {\n      return element.type !== 'directive';\n    });\n  };\n\n  function traverseDom(node, isValidNode, processingInstructions, preprocessingInstructions,\n    index) {\n    if (isValidNode(node)) {\n      (preprocessingInstructions || []).forEach((instruction) => {\n        if (instruction.shouldPreprocessNode(node)) {\n          instruction.preprocessNode(node, index);\n        }\n      });\n\n      const processingInstruction = (processingInstructions || []).find((instruction) => {\n        return instruction.shouldProcessNode(node);\n      });\n      if (processingInstruction != null) {\n        const children = (node.children || []).map((child, i) => {\n          return traverseDom(child, isValidNode, processingInstructions,\n            preprocessingInstructions, i);\n        }).filter((child) => {\n          return child != null && child !== false;\n        });\n\n        if (processingInstruction.replaceChildren) {\n          return utils.createElement(node, index, node.data, [\n            processingInstruction.processNode(node, children, index),\n          ]);\n        } else {\n          return processingInstruction.processNode(node, children, index);\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  function parseWithInstructions(html, isValidNode, processingInstructions,\n      preprocessingInstructions) {\n    const domTree = parseHtmlToTree(html);\n    const list = domTree.map(function (domTreeItem, index) {\n      return traverseDom(domTreeItem, isValidNode, processingInstructions,\n        preprocessingInstructions, index);\n    });\n    return list.length <= 1 ? list[0] : list;\n  };\n\n  function parse(html) {\n    const processingInstructions = new ProcessingInstructions();\n    return parseWithInstructions(html,\n      IsValidNodeDefinitions.alwaysValid,\n      processingInstructions.defaultProcessingInstructions);\n  };\n\n  return {\n    parse: parse,\n    parseWithInstructions: parseWithInstructions,\n  };\n};\n\nmodule.exports = Html2ReactParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}