{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul Gupta\\\\git\\\\lockerroom345website\\\\lockerroom345website\\\\frontend\\\\src\\\\component\\\\Admin\\\\UpdateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport SideBar from \"./Sidebar\";\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\nimport { getUserDetails, updateUser, clearErrors } from \"../../actions/userAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateUser = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    loading,\n    error,\n    user\n  } = useSelector(state => state.userDetails);\n  const {\n    loading: updateLoading,\n    error: updateError,\n    isUpdated\n  } = useSelector(state => state.profile);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const userId = match.params.id;\n  useEffect(() => {\n    if (user && user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"User Updated Successfully\");\n      history.push(\"/admin/users\");\n      dispatch({\n        type: UPDATE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated, updateError, user, userId]);\n\n  const updateUserSubmitHandler = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"role\", role);\n    dispatch(updateUser(userId, myForm));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newProductContainer\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"createProductForm\",\n          onSubmit: updateUserSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Update User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Name\",\n              required: true,\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MailOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email\",\n              required: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: role,\n              onChange: e => setRole(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"createProductBtn\",\n            type: \"submit\",\n            disabled: updateLoading ? true : false || role === \"\" ? true : false,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateUser, \"Pvx72BWHRIF87dXdjyHVXEjWeWk=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n\n_c = UpdateUser;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","useSelector","useDispatch","useAlert","Button","MetaData","MailOutlineIcon","PersonIcon","VerifiedUserIcon","SideBar","UPDATE_USER_RESET","getUserDetails","updateUser","clearErrors","Loader","UpdateUser","history","match","dispatch","alert","loading","error","user","state","userDetails","updateLoading","updateError","isUpdated","profile","name","setName","email","setEmail","role","setRole","userId","params","id","_id","success","push","type","updateUserSubmitHandler","e","preventDefault","myForm","FormData","set","target","value"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/src/component/Admin/UpdateUser.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\r\nimport {\r\n  getUserDetails,\r\n  updateUser,\r\n  clearErrors,\r\n} from \"../../actions/userAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\n\r\nconst UpdateUser = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails);\r\n\r\n  const {\r\n    loading: updateLoading,\r\n    error: updateError,\r\n    isUpdated,\r\n  } = useSelector((state) => state.profile);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const userId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    if (user && user._id !== userId) {\r\n      dispatch(getUserDetails(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setRole(user.role);\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"User Updated Successfully\");\r\n      history.push(\"/admin/users\");\r\n      dispatch({ type: UPDATE_USER_RESET });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated, updateError, user, userId]);\r\n\r\n  const updateUserSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"email\", email);\r\n    myForm.set(\"role\", role);\r\n\r\n    dispatch(updateUser(userId, myForm));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Update User\" />\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"newProductContainer\">\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <form\r\n              className=\"createProductForm\"\r\n              onSubmit={updateUserSubmitHandler}\r\n            >\r\n              <h1>Update User</h1>\r\n\r\n              <div>\r\n                <PersonIcon />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  required\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <MailOutlineIcon />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <VerifiedUserIcon />\r\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                  <option value=\"\">Choose Role</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                  <option value=\"user\">User</option>\r\n                </select>\r\n              </div>\r\n\r\n              <Button\r\n                id=\"createProductBtn\"\r\n                type=\"submit\"\r\n                disabled={\r\n                  updateLoading ? true : false || role === \"\" ? true : false\r\n                }\r\n              >\r\n                Update\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}