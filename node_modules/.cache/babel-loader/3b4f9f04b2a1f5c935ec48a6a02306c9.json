{"ast":null,"code":"const isBigEndian = new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12;\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};","map":{"version":3,"names":["isBigEndian","Uint8Array","Uint32Array","buffer","swap","b","n","m","i","swap32","array","len","length","swap32LE","module","exports"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/node_modules/unicode-properties/node_modules/unicode-trie/swap.js"],"sourcesContent":["const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};\n"],"mappings":"AAAA,MAAMA,WAAW,GAAI,IAAIC,UAAJ,CAAe,IAAIC,WAAJ,CAAgB,CAAC,UAAD,CAAhB,EAA8BC,MAA7C,EAAqD,CAArD,MAA4D,IAAjF;;AAEA,MAAMC,IAAI,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;EACxB,IAAIC,CAAC,GAAGH,CAAC,CAACC,CAAD,CAAT;EACAD,CAAC,CAACC,CAAD,CAAD,GAAOD,CAAC,CAACE,CAAD,CAAR;EACAF,CAAC,CAACE,CAAD,CAAD,GAAOC,CAAP;AACD,CAJD;;AAMA,MAAMC,MAAM,GAAGC,KAAK,IAAI;EACtB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAlB;;EACA,KAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,GAApB,EAAyBH,CAAC,IAAI,CAA9B,EAAiC;IAC/BJ,IAAI,CAACM,KAAD,EAAQF,CAAR,EAAWA,CAAC,GAAG,CAAf,CAAJ;IACAJ,IAAI,CAACM,KAAD,EAAQF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,CAAJ;EACD;AACF,CAND;;AAQA,MAAMK,QAAQ,GAAGH,KAAK,IAAI;EACxB,IAAIV,WAAJ,EAAiB;IACfS,MAAM,CAACC,KAAD,CAAN;EACD;AACF,CAJD;;AAMAI,MAAM,CAACC,OAAP,GAAiB;EACfF,QAAQ,EAAEA;AADK,CAAjB"},"metadata":{},"sourceType":"script"}