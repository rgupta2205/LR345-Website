{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { newProductReducer, newReviewReducer, productDetailsReducer, productReducer, productReviewsReducer, productsReducer, reviewReducer } from \"./reducers/productReducer\";\nimport { allUsersReducer, forgotPasswordReducer, profileReducer, userDetailsReducer, userReducer } from \"./reducers/userReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { allOrdersReducer, myOrdersReducer, newOrderReducer, orderDetailsReducer, orderReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  user: userReducer,\n  profile: profileReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  orderDetails: orderDetailsReducer,\n  newReview: newReviewReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  allOrders: allOrdersReducer,\n  order: orderReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  productReviews: productReviewsReducer,\n  review: reviewReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    shippingInfo: localStorage.getItem(\"shippingInfo\") ? JSON.parse(localStorage.getItem(\"shippingInfo\")) : {}\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","newProductReducer","newReviewReducer","productDetailsReducer","productReducer","productReviewsReducer","productsReducer","reviewReducer","allUsersReducer","forgotPasswordReducer","profileReducer","userDetailsReducer","userReducer","cartReducer","allOrdersReducer","myOrdersReducer","newOrderReducer","orderDetailsReducer","orderReducer","reducer","products","productDetails","user","profile","forgotPassword","cart","newOrder","myOrders","orderDetails","newReview","newProduct","product","allOrders","order","allUsers","userDetails","productReviews","review","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middleware","store"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  newProductReducer,\r\n  newReviewReducer,\r\n  productDetailsReducer,\r\n  productReducer,\r\n  productReviewsReducer,\r\n  productsReducer,\r\n  reviewReducer,\r\n} from \"./reducers/productReducer\";\r\n\r\nimport {\r\n  allUsersReducer,\r\n  forgotPasswordReducer,\r\n  profileReducer,\r\n  userDetailsReducer,\r\n  userReducer,\r\n} from \"./reducers/userReducer\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  allOrdersReducer,\r\n  myOrdersReducer,\r\n  newOrderReducer,\r\n  orderDetailsReducer,\r\n  orderReducer,\r\n} from \"./reducers/orderReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  products: productsReducer,\r\n  productDetails: productDetailsReducer,\r\n  user: userReducer,\r\n  profile: profileReducer,\r\n  forgotPassword: forgotPasswordReducer,\r\n  cart: cartReducer,\r\n  newOrder: newOrderReducer,\r\n  myOrders: myOrdersReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  newReview: newReviewReducer,\r\n  newProduct: newProductReducer,\r\n  product: productReducer,\r\n  allOrders: allOrdersReducer,\r\n  order: orderReducer,\r\n  allUsers: allUsersReducer,\r\n  userDetails: userDetailsReducer,\r\n  productReviews: productReviewsReducer,\r\n  review: reviewReducer,\r\n});\r\n\r\nlet initialState = {\r\n  cart: {\r\n    cartItems: localStorage.getItem(\"cartItems\")\r\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      : [],\r\n    shippingInfo: localStorage.getItem(\"shippingInfo\")\r\n      ? JSON.parse(localStorage.getItem(\"shippingInfo\"))\r\n      : {},\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,qBAHF,EAIEC,cAJF,EAKEC,qBALF,EAMEC,eANF,EAOEC,aAPF,QAQO,2BARP;AAUA,SACEC,eADF,EAEEC,qBAFF,EAGEC,cAHF,EAIEC,kBAJF,EAKEC,WALF,QAMO,wBANP;AAQA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,mBAJF,EAKEC,YALF,QAMO,yBANP;AAQA,MAAMC,OAAO,GAAGtB,eAAe,CAAC;EAC9BuB,QAAQ,EAAEd,eADoB;EAE9Be,cAAc,EAAElB,qBAFc;EAG9BmB,IAAI,EAAEV,WAHwB;EAI9BW,OAAO,EAAEb,cAJqB;EAK9Bc,cAAc,EAAEf,qBALc;EAM9BgB,IAAI,EAAEZ,WANwB;EAO9Ba,QAAQ,EAAEV,eAPoB;EAQ9BW,QAAQ,EAAEZ,eARoB;EAS9Ba,YAAY,EAAEX,mBATgB;EAU9BY,SAAS,EAAE3B,gBAVmB;EAW9B4B,UAAU,EAAE7B,iBAXkB;EAY9B8B,OAAO,EAAE3B,cAZqB;EAa9B4B,SAAS,EAAElB,gBAbmB;EAc9BmB,KAAK,EAAEf,YAduB;EAe9BgB,QAAQ,EAAE1B,eAfoB;EAgB9B2B,WAAW,EAAExB,kBAhBiB;EAiB9ByB,cAAc,EAAE/B,qBAjBc;EAkB9BgC,MAAM,EAAE9B;AAlBsB,CAAD,CAA/B;AAqBA,IAAI+B,YAAY,GAAG;EACjBb,IAAI,EAAE;IACJc,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;IAIJG,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACVC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADU,GAEV;EANA;AADW,CAAnB;AAWA,MAAMI,UAAU,GAAG,CAAC9C,KAAD,CAAnB;AAEA,MAAM+C,KAAK,GAAGlD,WAAW,CACvBuB,OADuB,EAEvBmB,YAFuB,EAGvBtC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}