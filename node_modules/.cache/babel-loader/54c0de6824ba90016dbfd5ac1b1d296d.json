{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, ALL_ORDERS_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, CLEAR_ERRORS } from \"../constants/orderConstants\";\nimport axios from \"axios\";\nvar orderId; // Create Order\n\nexport const createOrder = order => async dispatch => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/v1/order/new\", order, config); //console.log(data);\n\n    orderId = data.order._id;\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // My Orders\n\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/orders/me\");\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get All Orders (admin)\n\nexport const getAllOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/admin/orders\");\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update Order\n\nexport const updateOrder = (id, order) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/order/${id}`, order, config);\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete Order\n\nexport const deleteOrder = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/order/${id}`);\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get Order Details\n\nexport const getOrderDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    }); //console.log(\"entered getorderdetail function\");\n\n    const {\n      data\n    } = await axios.get(`/api/v1/order/${id}`); //console.log(\"data\",data);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clearing Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CLEAR_ERRORS","axios","orderId","createOrder","order","dispatch","type","config","headers","data","post","_id","payload","error","response","message","myOrders","get","orders","getAllOrders","updateOrder","id","put","success","deleteOrder","delete","getOrderDetails","clearErrors"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/src/actions/orderAction.js"],"sourcesContent":["import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  MY_ORDERS_REQUEST,\r\n  MY_ORDERS_SUCCESS,\r\n  MY_ORDERS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_SUCCESS,\r\n  ALL_ORDERS_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n  UPDATE_ORDER_FAIL,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  DELETE_ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nvar orderId;\r\n\r\n// Create Order\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n     //console.log(data);\r\n\r\n    orderId = data.order._id;\r\n\r\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n// My Orders\r\nexport const myOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/orders/me\");\r\n\r\n    dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MY_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Orders (admin)\r\nexport const getAllOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/admin/orders\");\r\n\r\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update Order\r\nexport const updateOrder = (id, order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/order/${id}`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Order\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\r\n\r\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get Order Details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n    //console.log(\"entered getorderdetail function\");\r\n    const { data } = await axios.get(`/api/v1/order/${id}`);\r\n    //console.log(\"data\",data);\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}