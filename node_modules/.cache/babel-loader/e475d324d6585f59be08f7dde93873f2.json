{"ast":null,"code":"import * as P from '@react-pdf/primitives';\nimport { isNil, matchPercent } from '@react-pdf/fns';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\nimport normalizePath from 'normalize-svg-path';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\n\nvar renderPath = function renderPath(ctx, node) {\n  var _node$props;\n\n  var d = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d;\n  if (d) ctx.path(node.props.d);\n};\n\nvar KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar renderRect = function renderRect(ctx, node) {\n  var _node$props, _node$props2, _node$props3, _node$props4, _node$props5, _node$props6;\n\n  var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n  var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n  var rx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.rx) || 0;\n  var ry = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.ry) || 0;\n  var width = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.width) || 0;\n  var height = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.height) || 0;\n  if (!width || !height) return;\n\n  if (rx && ry) {\n    var krx = rx * KAPPA$3;\n    var kry = ry * KAPPA$3;\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n\n  ctx.closePath();\n};\n\nvar renderLine$1 = function renderLine(ctx, node) {\n  var _ref = node.props || {},\n      x1 = _ref.x1,\n      x2 = _ref.x2,\n      y1 = _ref.y1,\n      y2 = _ref.y2;\n\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n};\n\nvar renderGroup = function renderGroup() {// noop\n};\n\nvar KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar drawEllipse = function drawEllipse(ctx, cx, cy, rx, ry) {\n  var x = cx - rx;\n  var y = cy - ry;\n  var ox = rx * KAPPA$2;\n  var oy = ry * KAPPA$2;\n  var xe = x + rx * 2;\n  var ye = y + ry * 2;\n  var xm = x + rx;\n  var ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nvar renderEllipse = function renderEllipse(ctx, node) {\n  var _ref = node.props || {},\n      cx = _ref.cx,\n      cy = _ref.cy,\n      rx = _ref.rx,\n      ry = _ref.ry;\n\n  drawEllipse(ctx, cx, cy, rx, ry);\n};\n\nvar renderCircle = function renderCircle(ctx, node) {\n  var _node$props, _node$props2, _node$props3;\n\n  var cx = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.cx;\n  var cy = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.cy;\n  var r = (_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.r;\n  drawEllipse(ctx, cx, cy, r, r);\n};\n\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm; // Glyph encoding and positioning\n\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\n\nvar renderRun$1 = function renderRun(ctx, run) {\n  var runAdvanceWidth = run.xAdvance;\n  var _run$attributes = run.attributes,\n      font = _run$attributes.font,\n      fontSize = _run$attributes.fontSize,\n      color = _run$attributes.color,\n      opacity = _run$attributes.opacity;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  var _line$box, _line$box2, _line$runs$, _line$runs$2, _line$runs$2$attribut;\n\n  ctx.save();\n  var x = ((_line$box = line.box) === null || _line$box === void 0 ? void 0 : _line$box.x) || 0;\n  var y = ((_line$box2 = line.box) === null || _line$box2 === void 0 ? void 0 : _line$box2.y) || 0;\n  var font = (_line$runs$ = line.runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes.font;\n  var scale = ((_line$runs$2 = line.runs[0]) === null || _line$runs$2 === void 0 ? void 0 : (_line$runs$2$attribut = _line$runs$2.attributes) === null || _line$runs$2$attribut === void 0 ? void 0 : _line$runs$2$attribut.scale) || 1;\n  var width = line.xAdvance;\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n\n    case 'end':\n      xTranslate = x - width;\n      break;\n\n    default:\n      xTranslate = x;\n      break;\n  }\n\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n\n    default:\n      yTranslate = y;\n      break;\n  }\n\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun$1(ctx, run);\n  });\n  ctx.restore();\n};\n\nvar renderSvgText = function renderSvgText(ctx, node) {\n  node.children.forEach(function (span) {\n    return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n  });\n};\n\nvar pairs = function pairs(values) {\n  var result = [];\n\n  for (var i = 0; i < values.length; i += 2) {\n    result.push([values[i], values[i + 1]]);\n  }\n\n  return result;\n};\n/**\n * Parse svg-like points into number arrays\n *\n * @param {String} points string ex. \"20,30 50,60\"\n * @return {Array} points array ex. [[20, 30], [50, 60]]\n */\n\n\nvar parsePoints = function parsePoints(points) {\n  var values = (points || '').trim().replace(/,/g, ' ').replace(/(\\d)-(\\d)/g, '$1 -$2').split(/\\s+/);\n\n  if (values.length % 2 !== 0) {\n    values = values.slice(0, -1);\n  }\n\n  values = values.map(parseFloat);\n  return pairs(values);\n};\n\nvar drawPolyline = function drawPolyline(ctx, points) {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(function (p) {\n      return ctx.lineTo(p[0], p[1]);\n    });\n  }\n};\n\nvar renderPolyline = function renderPolyline(ctx, node) {\n  var points = parsePoints(node.props.points || '');\n  drawPolyline(ctx, points);\n};\n\nvar renderPolygon = function renderPolygon(ctx, node) {\n  renderPolyline(ctx, node);\n  ctx.closePath();\n};\n\nvar renderImage$1 = function renderImage(ctx, node) {\n  if (!node.image.data) return;\n  var _node$props = node.props,\n      x = _node$props.x,\n      y = _node$props.y;\n  var _node$style = node.style,\n      width = _node$style.width,\n      height = _node$style.height,\n      opacity = _node$style.opacity;\n  var paddingTop = node.box.paddingLeft || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n\n  if (width === 0 || height === 0) {\n    console.warn(\"Image with src '\" + node.props.href + \"' skipped due to invalid dimensions\");\n    return;\n  }\n\n  ctx.save();\n  ctx.fillOpacity(opacity || 1).image(node.image.data, x + paddingLeft, y + paddingTop, {\n    width: width,\n    height: height\n  });\n  ctx.restore();\n}; // This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\n\n\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar clipNode = function clipNode(ctx, node) {\n  if (!node.style) return;\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var _node$style = node.style,\n      _node$style$borderTop = _node$style.borderTopLeftRadius,\n      borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n      _node$style$borderTop2 = _node$style.borderTopRightRadius,\n      borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n      _node$style$borderBot = _node$style.borderBottomRightRadius,\n      borderBottomRightRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n      _node$style$borderBot2 = _node$style.borderBottomLeftRadius,\n      borderBottomLeftRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2; // Border top\n\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var ctr = rtr * (1.0 - KAPPA$1);\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr); // Border right\n\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var cbr = rbr * (1.0 - KAPPA$1);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height); // Border bottom\n\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  var cbl = rbl * (1.0 - KAPPA$1);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl); // Border left\n\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var ctl = rtl * (1.0 - KAPPA$1);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n};\n\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n      value = transform.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var scaleX = value[0],\n            scaleY = value[1];\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'rotate':\n      {\n        var angle = value[0];\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'translate':\n      {\n        var x = value[0],\n            y = value[1];\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'skew':\n      {\n        var xAngle = value[0],\n            yAngle = value[1];\n        ctx.skew(xAngle, yAngle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, value);\n        break;\n      }\n\n    default:\n      {\n        console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n      }\n  }\n};\n\nvar applyTransformations = function applyTransformations(ctx, node) {\n  var _node$style, _node$props;\n\n  if (!node.origin) return;\n  var origin = [node.origin.left, node.origin.top];\n  var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n};\n\nvar _boundingBoxFns;\n\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var _node$props;\n\n  var path = normalizePath(absPath(parsePath(((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d) || '')));\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var _node$props2, _node$props3, _node$props4;\n\n  var r = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.r) || 0;\n  var cx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.cx) || 0;\n  var cy = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.cy) || 0;\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var _node$props5, _node$props6, _node$props7, _node$props8;\n\n  var cx = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.cx) || 0;\n  var cy = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.cy) || 0;\n  var rx = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.rx) || 0;\n  var ry = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.ry) || 0;\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var _node$props9, _node$props10, _node$props11, _node$props12;\n\n  var x1 = ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : _node$props9.x1) || 0;\n  var y1 = ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : _node$props10.y1) || 0;\n  var x2 = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.x2) || 0;\n  var y2 = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.y2) || 0;\n  return [Math.min(x1, x2), Math.min(y1, y2), Math.max(x1, x2), Math.max(y1, y2)];\n};\n\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var _node$props13, _node$props14, _node$props15, _node$props16;\n\n  var x = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.x) || 0;\n  var y = ((_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.y) || 0;\n  var width = ((_node$props15 = node.props) === null || _node$props15 === void 0 ? void 0 : _node$props15.width) || 0;\n  var height = ((_node$props16 = node.props) === null || _node$props16 === void 0 ? void 0 : _node$props16.height) || 0;\n  return [x, y, x + width, y + height];\n};\n\nvar max = function max(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\n\nvar min = function min(values) {\n  return Math.min.apply(Math, [Infinity].concat(values));\n};\n\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var _node$props17;\n\n  var points = parsePoints(((_node$props17 = node.props) === null || _node$props17 === void 0 ? void 0 : _node$props17.points) || []);\n  var xValues = points.map(function (p) {\n    return p[0];\n  });\n  var yValues = points.map(function (p) {\n    return p[1];\n  });\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nvar boundingBoxFns = (_boundingBoxFns = {}, _boundingBoxFns[P.Rect] = getRectBoundingBox, _boundingBoxFns[P.Line] = getLineBoundingBox, _boundingBoxFns[P.Path] = getPathBoundingBox, _boundingBoxFns[P.Circle] = getCircleBoundingBox, _boundingBoxFns[P.Ellipse] = getEllipseBoundingBox, _boundingBoxFns[P.Polygon] = getPolylineBoundingBox, _boundingBoxFns[P.Polyline] = getPolylineBoundingBox, _boundingBoxFns);\n\nvar getBoundingBox = function getBoundingBox(node) {\n  var boundingBoxFn = boundingBoxFns[node.type];\n  return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\n\nvar _renderFns$1;\n\nvar setStrokeWidth = function setStrokeWidth(ctx, node) {\n  var _node$props;\n\n  var lineWidth = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.strokeWidth) || 0;\n  if (lineWidth) ctx.lineWidth(lineWidth);\n};\n\nvar setStrokeColor = function setStrokeColor(ctx, node) {\n  var _node$props2;\n\n  var strokeColor = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.stroke) || null;\n  if (strokeColor) ctx.strokeColor(strokeColor);\n};\n\nvar setOpacity = function setOpacity(ctx, node) {\n  var _node$props3;\n\n  var opacity = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.opacity) || null;\n  if (!isNil(opacity)) ctx.opacity(opacity);\n};\n\nvar setFillOpacity = function setFillOpacity(ctx, node) {\n  var _node$props4;\n\n  var fillOpacity = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.fillOpacity) || null;\n  if (!isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n};\n\nvar setStrokeOpacity = function setStrokeOpacity(ctx, node) {\n  var _node$props5;\n\n  var strokeOpacity = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.strokeOpacity) || null;\n  if (!isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n};\n\nvar setLineJoin = function setLineJoin(ctx, node) {\n  var _node$props6;\n\n  var lineJoin = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.strokeLinejoin) || null;\n  if (lineJoin) ctx.lineJoin(lineJoin);\n};\n\nvar setLineCap = function setLineCap(ctx, node) {\n  var _node$props7;\n\n  var lineCap = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.strokeLinecap) || null;\n  if (lineCap) ctx.lineCap(lineCap);\n};\n\nvar setLineDash = function setLineDash(ctx, node) {\n  var _node$props8;\n\n  var value = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.strokeDasharray) || null;\n  if (value) ctx.dash(value.split(','));\n};\n\nvar hasLinearGradientFill = function hasLinearGradientFill(node) {\n  var _node$props9, _node$props9$fill;\n\n  return ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : (_node$props9$fill = _node$props9.fill) === null || _node$props9$fill === void 0 ? void 0 : _node$props9$fill.type) === P.LinearGradient;\n};\n\nvar hasRadialGradientFill = function hasRadialGradientFill(node) {\n  var _node$props10, _node$props10$fill;\n\n  return ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : (_node$props10$fill = _node$props10.fill) === null || _node$props10$fill === void 0 ? void 0 : _node$props10$fill.type) === P.RadialGradient;\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\n\n\nvar setLinearGradientFill = function setLinearGradientFill(ctx, node) {\n  var _node$props11;\n\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.fill) || null;\n  var x1 = gradient.props.x1 || 0;\n  var y1 = gradient.props.y1 || 0;\n  var x2 = gradient.props.x2 || 1;\n  var y2 = gradient.props.y2 || 0;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gx1 = m0 * x1 + m4;\n  var gy1 = m3 * y1 + m5;\n  var gx2 = m0 * x2 + m4;\n  var gy2 = m3 * y2 + m5;\n  var grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\n\n\nvar setRadialGradientFill = function setRadialGradientFill(ctx, node) {\n  var _node$props12;\n\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.fill) || null;\n  var cx = gradient.props.cx || 0.5;\n  var cy = gradient.props.cy || 0.5;\n  var fx = gradient.props.fx || cx;\n  var fy = gradient.props.fy || cy;\n  var r = gradient.props.r || 0.5;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gr = r * m0;\n  var gcx = m0 * cx + m4;\n  var gcy = m3 * cy + m5;\n  var gfx = m0 * fx + m4;\n  var gfy = m3 * fy + m5;\n  var grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\n\nvar setFillColor = function setFillColor(ctx, node) {\n  var _node$props13;\n\n  var fillColor = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.fill) || null;\n  if (fillColor) ctx.fillColor(fillColor);\n};\n\nvar setFill = function setFill(ctx, node) {\n  if (hasLinearGradientFill(node)) return setLinearGradientFill(ctx, node);\n  if (hasRadialGradientFill(node)) return setRadialGradientFill(ctx, node);\n  return setFillColor(ctx, node);\n};\n\nvar draw = function draw(ctx, node) {\n  var props = node.props || {};\n\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n};\n\nvar noop = function noop() {};\n\nvar renderFns$1 = (_renderFns$1 = {}, _renderFns$1[P.Tspan] = noop, _renderFns$1[P.TextInstance] = noop, _renderFns$1[P.Path] = renderPath, _renderFns$1[P.Rect] = renderRect, _renderFns$1[P.Line] = renderLine$1, _renderFns$1[P.G] = renderGroup, _renderFns$1[P.Text] = renderSvgText, _renderFns$1[P.Circle] = renderCircle, _renderFns$1[P.Image] = renderImage$1, _renderFns$1[P.Ellipse] = renderEllipse, _renderFns$1[P.Polygon] = renderPolygon, _renderFns$1[P.Polyline] = renderPolyline, _renderFns$1);\n\nvar renderNode$1 = function renderNode(ctx, node) {\n  var renderFn = renderFns$1[node.type];\n\n  if (renderFns$1) {\n    renderFn(ctx, node);\n  } else {\n    console.warn(\"SVG node of type \" + node.type + \" is not currenty supported\");\n  }\n};\n\nvar drawNode = function drawNode(ctx, node) {\n  setLineCap(ctx, node);\n  setLineDash(ctx, node);\n  setLineJoin(ctx, node);\n  setStrokeWidth(ctx, node);\n  setStrokeColor(ctx, node);\n  setFill(ctx, node);\n  setStrokeOpacity(ctx, node);\n  setFillOpacity(ctx, node);\n  setOpacity(ctx, node);\n  applyTransformations(ctx, node);\n  renderNode$1(ctx, node);\n  draw(ctx, node);\n};\n\nvar clipPath = function clipPath(ctx, node) {\n  var _node$props14;\n\n  var value = (_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.clipPath;\n\n  if (value) {\n    var children = value.children || [];\n    children.forEach(function (child) {\n      return renderNode$1(ctx, child);\n    });\n    ctx.clip();\n  }\n};\n\nvar drawChildren = function drawChildren(ctx, node) {\n  var children = node.children || [];\n  children.forEach(function (child) {\n    ctx.save();\n    clipPath(ctx, child);\n    drawNode(ctx, child);\n    drawChildren(ctx, child);\n    ctx.restore();\n  });\n};\n\nvar resolveAspectRatio = function resolveAspectRatio(ctx, node) {\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height;\n  var _node$props15 = node.props,\n      viewBox = _node$props15.viewBox,\n      _node$props15$preserv = _node$props15.preserveAspectRatio,\n      preserveAspectRatio = _node$props15$preserv === void 0 ? {} : _node$props15$preserv;\n  var _preserveAspectRatio$ = preserveAspectRatio.meetOrSlice,\n      meetOrSlice = _preserveAspectRatio$ === void 0 ? 'meet' : _preserveAspectRatio$,\n      _preserveAspectRatio$2 = preserveAspectRatio.align,\n      align = _preserveAspectRatio$2 === void 0 ? 'xMidYMid' : _preserveAspectRatio$2;\n  if (viewBox == null || width == null || height == null) return;\n  var x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  var y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  var logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  var logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  var logicalRatio = logicalWidth / logicalHeight;\n  var physicalRatio = width / height;\n  var scaleX = width / logicalWidth;\n  var scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return;\n  }\n\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n};\n\nvar moveToOrigin = function moveToOrigin(ctx, node) {\n  var _node$box2 = node.box,\n      top = _node$box2.top,\n      left = _node$box2.left;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingTop = node.box.paddingTop || 0;\n  ctx.translate(left + paddingLeft, top + paddingTop);\n};\n\nvar renderSvg = function renderSvg(ctx, node) {\n  ctx.save();\n  clipNode(ctx, node);\n  moveToOrigin(ctx, node);\n  resolveAspectRatio(ctx, node);\n  drawChildren(ctx, node);\n  ctx.restore();\n};\n\nvar parseColor = function parseColor(hex) {\n  var parsed = colorString.get(hex);\n  var value = colorString.to.hex(parsed.value.slice(0, 3));\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n/* eslint-disable no-param-reassign */\n\n\nvar DEST_REGEXP = /^#.+/;\n\nvar isSrcId$1 = function isSrcId(src) {\n  return src.match(DEST_REGEXP);\n};\n\nvar renderAttachment = function renderAttachment(ctx, attachment) {\n  var _attachment$xOffset = attachment.xOffset,\n      xOffset = _attachment$xOffset === void 0 ? 0 : _attachment$xOffset,\n      _attachment$yOffset = attachment.yOffset,\n      yOffset = _attachment$yOffset === void 0 ? 0 : _attachment$yOffset,\n      width = attachment.width,\n      height = attachment.height,\n      image = attachment.image;\n  ctx.translate(-width + xOffset, -height + yOffset);\n  ctx.image(image, 0, 0, {\n    fit: [width, height],\n    align: 'center',\n    valign: 'bottom'\n  });\n};\n\nvar renderAttachments = function renderAttachments(ctx, run) {\n  ctx.save();\n  var font = run.attributes.font;\n  var space = font.glyphForCodePoint(0x20);\n  var objectReplacement = font.glyphForCodePoint(0xfffc);\n  var attachmentAdvance = 0;\n\n  for (var i = 0; i < run.glyphs.length; i += 1) {\n    var position = run.positions[i];\n    var glyph = run.glyphs[i];\n    attachmentAdvance += position.xAdvance || 0;\n\n    if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n      ctx.translate(attachmentAdvance, position.yOffset || 0);\n      renderAttachment(ctx, run.attributes.attachment);\n      run.glyphs[i] = space;\n      attachmentAdvance = 0;\n    }\n  }\n\n  ctx.restore();\n};\n\nvar renderRun = function renderRun(ctx, run, options) {\n  var _run$attributes = run.attributes,\n      font = _run$attributes.font,\n      fontSize = _run$attributes.fontSize,\n      link = _run$attributes.link;\n  var color = parseColor(run.attributes.color);\n  var opacity = isNil(run.attributes.opacity) ? color.opacity : run.attributes.opacity;\n  var height = run.height,\n      descent = run.descent,\n      xAdvance = run.xAdvance;\n\n  if (options.outlineRuns) {\n    ctx.rect(0, -height, xAdvance, height).stroke();\n  }\n\n  ctx.fillColor(color.value);\n  ctx.fillOpacity(opacity);\n\n  if (link) {\n    if (isSrcId$1(link)) {\n      ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n    } else {\n      ctx.link(0, -height - descent, xAdvance, height, link);\n    }\n  }\n\n  renderAttachments(ctx, run);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(xAdvance, 0);\n};\n\nvar renderBackground$1 = function renderBackground(ctx, rect, backgroundColor) {\n  var color = parseColor(backgroundColor);\n  ctx.save();\n  ctx.fillOpacity(color.opacity);\n  ctx.rect(rect.x, rect.y, rect.width, rect.height);\n  ctx.fill(color.value);\n  ctx.restore();\n};\n\nvar renderDecorationLine = function renderDecorationLine(ctx, line) {\n  ctx.save();\n  ctx.lineWidth(line.rect.height);\n  ctx.strokeOpacity(line.opacity);\n\n  if (/dashed/.test(line.style)) {\n    ctx.dash(3 * line.rect.height);\n  } else if (/dotted/.test(line.style)) {\n    ctx.dash(line.rect.height);\n  }\n\n  if (/wavy/.test(line.style)) {\n    var dist = Math.max(2, line.rect.height);\n    var step = 1.1 * dist;\n    var stepCount = Math.floor(line.rect.width / (2 * step)); // Adjust step to fill entire width\n\n    var remainingWidth = line.rect.width - stepCount * 2 * step;\n    var adjustment = remainingWidth / stepCount / 2;\n    step += adjustment;\n    var cp1y = line.rect.y + dist;\n    var cp2y = line.rect.y - dist;\n    var x = line.rect.x;\n    ctx.moveTo(line.rect.x, line.rect.y);\n\n    for (var i = 0; i < stepCount; i += 1) {\n      ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, line.rect.y);\n      x += 2 * step;\n    }\n  } else {\n    ctx.moveTo(line.rect.x, line.rect.y);\n    ctx.lineTo(line.rect.x + line.rect.width, line.rect.y);\n\n    if (/double/.test(line.style)) {\n      ctx.moveTo(line.rect.x, line.rect.y + line.rect.height * 2);\n      ctx.lineTo(line.rect.x + line.rect.width, line.rect.y + line.rect.height * 2);\n    }\n  }\n\n  ctx.stroke(line.color);\n  ctx.restore();\n};\n\nvar renderLine = function renderLine(ctx, line, options) {\n  var lineAscent = line.ascent;\n\n  if (options.outlineLines) {\n    ctx.rect(line.box.x, line.box.y, line.box.width, line.box.height).stroke();\n  }\n\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y + lineAscent);\n\n  for (var i = 0; i < line.runs.length; i += 1) {\n    var run = line.runs[i];\n    var isLastRun = i === line.runs.length - 1;\n\n    if (run.attributes.backgroundColor) {\n      var overflowRight = isLastRun ? line.overflowRight : 0;\n      var backgroundRect = {\n        x: 0,\n        y: -lineAscent,\n        height: line.box.height,\n        width: run.xAdvance - overflowRight\n      };\n      renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n    }\n\n    renderRun(ctx, run, options);\n  }\n\n  ctx.restore();\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y);\n\n  for (var _i = 0; _i < line.decorationLines.length; _i += 1) {\n    var decorationLine = line.decorationLines[_i];\n    renderDecorationLine(ctx, decorationLine);\n  }\n\n  ctx.restore();\n};\n\nvar renderBlock = function renderBlock(ctx, block, options) {\n  block.forEach(function (line) {\n    renderLine(ctx, line, options);\n  });\n};\n\nvar renderText = function renderText(ctx, node) {\n  var _node$box2, _node$box3;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left;\n  var blocks = [node.lines];\n  var paddingTop = ((_node$box2 = node.box) === null || _node$box2 === void 0 ? void 0 : _node$box2.paddingTop) || 0;\n  var paddingLeft = ((_node$box3 = node.box) === null || _node$box3 === void 0 ? void 0 : _node$box3.paddingLeft) || 0;\n  var initialY = node.lines[0] ? node.lines[0].box.y : 0;\n  var offsetX = node.alignOffset || 0;\n  ctx.save();\n  ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n  blocks.forEach(function (block) {\n    renderBlock(ctx, block, {});\n  });\n  ctx.restore();\n};\n\nvar renderPage = function renderPage(ctx, node) {\n  var _node$props;\n\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height;\n  var dpi = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.dpi) || 72;\n  var userUnit = dpi / 72;\n  ctx.addPage({\n    size: [width, height],\n    margin: 0,\n    userUnit: userUnit\n  });\n};\n\nvar renderNote = function renderNote(ctx, node) {\n  var _node$children, _node$style, _node$style2;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left;\n  var value = (node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children[0].value) || '';\n  var color = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor) || null;\n  var borderWidth = ((_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.borderWidth) || null;\n  ctx.note(left, top, 0, 0, value, {\n    color: color,\n    borderWidth: borderWidth\n  });\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\n\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n  var cr = cw / ch;\n  var ir = iw / ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var _height = ch;\n\n    var _width = _height * ir;\n\n    var _yOffset = isNumeric(py) ? py : 0;\n\n    var _xOffset = isNumeric(px) ? px : (cw - _width) * pxv;\n\n    return {\n      width: _width,\n      height: _height,\n      xOffset: _xOffset,\n      yOffset: _yOffset\n    };\n  }\n\n  var width = cw;\n  var height = width / ir;\n  var xOffset = isNumeric(px) ? px : 0;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n};\n\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n  var width = iw;\n  var height = ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n  var ir = iw / ih;\n  var cr = cw / ch;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var _width2 = cw;\n\n    var _height2 = _width2 / ir;\n\n    var _xOffset2 = isNumeric(px) ? px : 0;\n\n    var _yOffset2 = isNumeric(py) ? py : (ch - _height2) * pyv;\n\n    return {\n      width: _width2,\n      height: _height2,\n      yOffset: _yOffset2,\n      xOffset: _xOffset2\n    };\n  }\n\n  var height = ch;\n  var width = height * ir;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : 0;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n  var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n  return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\n\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0\n  };\n};\n\nvar resolveObjectFit = function resolveObjectFit(type, cw, ch, iw, ih, px, py) {\n  if (type === void 0) {\n    type = 'fill';\n  }\n\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nvar drawImage = function drawImage(ctx, node, options) {\n  var _node$style, _node$style2, _node$style3, _node$style4;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _node$box = node.box,\n      left = _node$box.left,\n      top = _node$box.top;\n  var opacity = (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity;\n  var objectFit = (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.objectFit;\n  var objectPositionX = (_node$style3 = node.style) === null || _node$style3 === void 0 ? void 0 : _node$style3.objectPositionX;\n  var objectPositionY = (_node$style4 = node.style) === null || _node$style4 === void 0 ? void 0 : _node$style4.objectPositionY;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var imageCache = options.imageCache || new Map();\n\n  var _resolveObjectFit = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY),\n      width = _resolveObjectFit.width,\n      height = _resolveObjectFit.height,\n      xOffset = _resolveObjectFit.xOffset,\n      yOffset = _resolveObjectFit.yOffset;\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      var cacheKey = node.image.key;\n      var image = imageCache.get(cacheKey) || ctx.embedImage(node.image.data);\n      if (cacheKey) imageCache.set(cacheKey, image);\n      var imageOpacity = isNil(opacity) ? 1 : opacity;\n      ctx.fillOpacity(imageOpacity).image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n        width: width,\n        height: height\n      });\n    } else {\n      console.warn(\"Image with src '\" + JSON.stringify(node.props.src) + \"' skipped due to invalid dimensions\");\n    }\n  }\n};\n\nvar renderImage = function renderImage(ctx, node, options) {\n  ctx.save();\n  clipNode(ctx, node);\n  drawImage(ctx, node, options);\n  ctx.restore();\n};\n\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1'; // TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx, node) {\n  var _node$box = node.box,\n      left = _node$box.left,\n      top = _node$box.top,\n      width = _node$box.width,\n      height = _node$box.height,\n      _node$box$paddingLeft = _node$box.paddingLeft,\n      paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft,\n      _node$box$paddingTop = _node$box.paddingTop,\n      paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop,\n      _node$box$paddingRigh = _node$box.paddingRight,\n      paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh,\n      _node$box$paddingBott = _node$box.paddingBottom,\n      paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott,\n      _node$box$borderLeftW = _node$box.borderLeftWidth,\n      borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW,\n      _node$box$borderTopWi = _node$box.borderTopWidth,\n      borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi,\n      _node$box$borderRight = _node$box.borderRightWidth,\n      borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight,\n      _node$box$borderBotto = _node$box.borderBottomWidth,\n      borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n  ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n};\n\nvar debugPadding = function debugPadding(ctx, node) {\n  var _node$box2 = node.box,\n      left = _node$box2.left,\n      top = _node$box2.top,\n      width = _node$box2.width,\n      height = _node$box2.height,\n      _node$box2$paddingLef = _node$box2.paddingLeft,\n      paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef,\n      _node$box2$paddingTop = _node$box2.paddingTop,\n      paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop,\n      _node$box2$paddingRig = _node$box2.paddingRight,\n      paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig,\n      _node$box2$paddingBot = _node$box2.paddingBottom,\n      paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot,\n      _node$box2$borderLeft = _node$box2.borderLeftWidth,\n      borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft,\n      _node$box2$borderTopW = _node$box2.borderTopWidth,\n      borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW,\n      _node$box2$borderRigh = _node$box2.borderRightWidth,\n      borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh,\n      _node$box2$borderBott = _node$box2.borderBottomWidth,\n      borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n  ctx.fillColor(PADDING_COLOR).opacity(0.5); // Padding top\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill(); // Padding left\n\n  ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill(); // Padding right\n\n  ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill(); // Padding bottom\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n};\n\nvar getMargin = function getMargin(box) {\n  var marginLeft = box.marginLeft === 'auto' ? 0 : box.marginLeft;\n  var marginTop = box.marginTop === 'auto' ? 0 : box.marginTop;\n  var marginRight = box.marginRight === 'auto' ? 0 : box.marginRight;\n  var marginBottom = box.marginBottom === 'auto' ? 0 : box.marginBottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom\n  };\n};\n\nvar debugMargin = function debugMargin(ctx, node) {\n  var _node$box3 = node.box,\n      left = _node$box3.left,\n      top = _node$box3.top,\n      width = _node$box3.width,\n      height = _node$box3.height;\n\n  var _getMargin = getMargin(node.box),\n      _getMargin$marginLeft = _getMargin.marginLeft,\n      marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft,\n      _getMargin$marginTop = _getMargin.marginTop,\n      marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop,\n      _getMargin$marginRigh = _getMargin.marginRight,\n      marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh,\n      _getMargin$marginBott = _getMargin.marginBottom,\n      marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5); // Margin top\n\n  ctx.rect(left, top - marginTop, width, marginTop).fill(); // Margin left\n\n  ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill(); // Margin right\n\n  ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill(); // Margin bottom\n\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\n\nvar debugText = function debugText(ctx, node) {\n  var _node$box4 = node.box,\n      left = _node$box4.left,\n      top = _node$box4.top,\n      width = _node$box4.width,\n      height = _node$box4.height;\n\n  var _getMargin2 = getMargin(node.box),\n      _getMargin2$marginLef = _getMargin2.marginLeft,\n      marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef,\n      _getMargin2$marginTop = _getMargin2.marginTop,\n      marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop,\n      _getMargin2$marginRig = _getMargin2.marginRight,\n      marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig,\n      _getMargin2$marginBot = _getMargin2.marginBottom,\n      marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n\n  var roundedWidth = Math.round(width + marginLeft + marginRight);\n  var roundedHeight = Math.round(height + marginTop + marginBottom);\n  ctx.fontSize(6).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n};\n\nvar debugOrigin = function debugOrigin(ctx, node) {\n  if (node.origin) {\n    ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n  }\n};\n\nvar renderDebug = function renderDebug(ctx, node) {\n  var _node$props;\n\n  if (!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.debug)) return;\n  ctx.save();\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n  ctx.restore();\n};\n\nvar availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'fillAndStroke', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\n\nvar painter = function painter(ctx) {\n  var p = availableMethods.reduce(function (acc, prop) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[prop] = function () {\n      ctx[prop].apply(ctx, arguments);\n      return p;\n    }, _extends2));\n  }, {});\n  return p;\n};\n\nvar renderCanvas = function renderCanvas(ctx, node) {\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var availableWidth = width - paddingLeft - paddingRight;\n  var availableHeight = height - paddingTop - paddingBottom;\n\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n}; // Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\n\n\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c0 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr); // Move down in case the margin exceedes the radius\n\n  var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord); // Clip inner top right cap\n\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth); // Clip inner top border edge\n\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  var topLeftYCoord = top + Math.max(borderTopWidth, rtl); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n  ctx.lineTo(left, topLeftYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c5 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip(); // Clip border top cap joins\n\n  if (borderRightWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var _trSlope = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width;\n  var borderTopColor = style.borderTopColor,\n      borderTopWidth = style.borderTopWidth,\n      borderTopStyle = style.borderTopStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rtl * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, {\n      space: borderTopWidth * 1.2\n    });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, {\n      space: borderTopWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer right border edge\n\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer bottom right cap\n\n  var c0 = rbr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height); // Move left in case the margin exceedes the radius\n\n  var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height); // Clip inner bottom right cap\n\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth); // Ellipse coefficients inner bottom right cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth)); // Clip inner right border edge\n\n  ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth)); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  var topRightXCoord = left + width - Math.max(rtr, borderRightWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n  ctx.lineTo(topRightXCoord, top); // Move right in case the margin exceedes the radius\n\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c5 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderTopWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderRightColor = style.borderRightColor,\n      borderRightStyle = style.borderRightStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbr * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, {\n      space: borderRightWidth * 1.2\n    });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, {\n      space: borderRightWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c0 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl); // Move up in case the margin exceedes the radius\n\n  var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord); // Clip inner bottom left cap\n\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord); // Ellipse coefficients inner top right cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA); // Clip inner bottom left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth); // Clip inner bottom border edge\n\n  ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth); // Ellipse coefficients inner top left cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n  ctx.lineTo(left + width, bottomRightYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer top left cap\n\n  var c5 = rbr * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n  ctx.closePath();\n  ctx.clip(); // Clip border bottom cap joins\n\n  if (borderRightWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomColor = style.borderBottomColor,\n      borderBottomStyle = style.borderBottomStyle,\n      borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rbr * (1.0 - KAPPA);\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, {\n      space: borderBottomWidth * 1.2\n    });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, {\n      space: borderBottomWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderLeftWidth = style.borderLeftWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer left border edge\n\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c0 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top); // Move right in case the margin exceedes the radius\n\n  var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top); // Clip inner top left cap\n\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopLeftRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth)); // Clip inner left border edge\n\n  ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth)); // Ellipse coefficients inner bottom left cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n  ctx.lineTo(bottomLeftXCoord, top + height); // Move left in case the margin exceedes the radius\n\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c5 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderBottomWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var _trSlope2 = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      height = layout.height;\n  var borderLeftColor = style.borderLeftColor,\n      borderLeftStyle = style.borderLeftStyle,\n      borderLeftWidth = style.borderLeftWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rtl * (1.0 - KAPPA);\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, {\n      space: borderLeftWidth * 1.2\n    });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, {\n      space: borderLeftWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar shouldRenderBorders = function shouldRenderBorders(node) {\n  return node.box && (node.box.borderTopWidth || node.box.borderRightWidth || node.box.borderBottomWidth || node.box.borderLeftWidth);\n};\n\nvar renderBorders = function renderBorders(ctx, node) {\n  if (!shouldRenderBorders(node)) return;\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height,\n      borderTopWidth = _node$box.borderTopWidth,\n      borderLeftWidth = _node$box.borderLeftWidth,\n      borderRightWidth = _node$box.borderRightWidth,\n      borderBottomWidth = _node$box.borderBottomWidth;\n  var _node$style = node.style,\n      opacity = _node$style.opacity,\n      _node$style$borderTop = _node$style.borderTopLeftRadius,\n      borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n      _node$style$borderTop2 = _node$style.borderTopRightRadius,\n      borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n      _node$style$borderBot = _node$style.borderBottomLeftRadius,\n      borderBottomLeftRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n      _node$style$borderBot2 = _node$style.borderBottomRightRadius,\n      borderBottomRightRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2,\n      _node$style$borderTop3 = _node$style.borderTopColor,\n      borderTopColor = _node$style$borderTop3 === void 0 ? 'black' : _node$style$borderTop3,\n      _node$style$borderTop4 = _node$style.borderTopStyle,\n      borderTopStyle = _node$style$borderTop4 === void 0 ? 'solid' : _node$style$borderTop4,\n      _node$style$borderLef = _node$style.borderLeftColor,\n      borderLeftColor = _node$style$borderLef === void 0 ? 'black' : _node$style$borderLef,\n      _node$style$borderLef2 = _node$style.borderLeftStyle,\n      borderLeftStyle = _node$style$borderLef2 === void 0 ? 'solid' : _node$style$borderLef2,\n      _node$style$borderRig = _node$style.borderRightColor,\n      borderRightColor = _node$style$borderRig === void 0 ? 'black' : _node$style$borderRig,\n      _node$style$borderRig2 = _node$style.borderRightStyle,\n      borderRightStyle = _node$style$borderRig2 === void 0 ? 'solid' : _node$style$borderRig2,\n      _node$style$borderBot3 = _node$style.borderBottomColor,\n      borderBottomColor = _node$style$borderBot3 === void 0 ? 'black' : _node$style$borderBot3,\n      _node$style$borderBot4 = _node$style.borderBottomStyle,\n      borderBottomStyle = _node$style$borderBot4 === void 0 ? 'solid' : _node$style$borderBot4;\n  var style = {\n    borderTopColor: borderTopColor,\n    borderTopWidth: borderTopWidth,\n    borderTopStyle: borderTopStyle,\n    borderLeftColor: borderLeftColor,\n    borderLeftWidth: borderLeftWidth,\n    borderLeftStyle: borderLeftStyle,\n    borderRightColor: borderRightColor,\n    borderRightWidth: borderRightWidth,\n    borderRightStyle: borderRightStyle,\n    borderBottomColor: borderBottomColor,\n    borderBottomWidth: borderBottomWidth,\n    borderBottomStyle: borderBottomStyle,\n    borderTopLeftRadius: borderTopLeftRadius,\n    borderTopRightRadius: borderTopRightRadius,\n    borderBottomLeftRadius: borderBottomLeftRadius,\n    borderBottomRightRadius: borderBottomRightRadius\n  };\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n};\n\nvar drawBackground = function drawBackground(ctx, node) {\n  var _node$style;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var color = parseColor(node.style.backgroundColor);\n  var nodeOpacity = isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity) ? 1 : node.style.opacity;\n  var opacity = Math.min(color.opacity, nodeOpacity);\n  ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n};\n\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style2;\n\n  var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n\n  if (hasBackground) {\n    ctx.save();\n    clipNode(ctx, node);\n    drawBackground(ctx, node);\n    ctx.restore();\n  }\n};\n\nvar isSrcId = function isSrcId(value) {\n  return /^#.+/.test(value);\n};\n\nvar setLink = function setLink(ctx, node) {\n  var props = node.props || {};\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var src = props.src || props.href;\n\n  if (src) {\n    var isId = isSrcId(src);\n    var method = isId ? 'goTo' : 'link';\n    var value = isId ? src.slice(1) : src;\n    ctx[method](left, top, width, height, value);\n  }\n};\n\nvar setDestination = function setDestination(ctx, node) {\n  var _node$props;\n\n  if ((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.id) {\n    ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n  }\n};\n\nvar _renderFns;\n\nvar isRecursiveNode = function isRecursiveNode(node) {\n  return node.type !== P.Text && node.type !== P.Svg;\n};\n\nvar renderChildren = function renderChildren(ctx, node, options) {\n  ctx.save();\n\n  if (node.box) {\n    ctx.translate(node.box.left, node.box.top);\n  }\n\n  var children = node.children || [];\n\n  var renderChild = function renderChild(child) {\n    return renderNode(ctx, child, options);\n  };\n\n  children.forEach(renderChild);\n  ctx.restore();\n};\n\nvar renderFns = (_renderFns = {}, _renderFns[P.Text] = renderText, _renderFns[P.Note] = renderNote, _renderFns[P.Image] = renderImage, _renderFns[P.Canvas] = renderCanvas, _renderFns[P.Svg] = renderSvg, _renderFns[P.Link] = setLink, _renderFns);\n\nvar renderNode = function renderNode(ctx, node, options) {\n  var _node$style;\n\n  var overflowHidden = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.overflow) === 'hidden';\n  var shouldRenderChildren = isRecursiveNode(node);\n  if (node.type === P.Page) renderPage(ctx, node);\n  ctx.save();\n  if (overflowHidden) clipNode(ctx, node);\n  applyTransformations(ctx, node);\n  renderBackground(ctx, node);\n  renderBorders(ctx, node);\n  var renderFn = renderFns[node.type];\n  if (renderFn) renderFn(ctx, node, options);\n  if (shouldRenderChildren) renderChildren(ctx, node, options);\n  setDestination(ctx, node);\n  renderDebug(ctx, node);\n  ctx.restore();\n};\n/* eslint-disable no-param-reassign */\n\n\nvar setPDFMetadata = function setPDFMetadata(target) {\n  return function (key, value) {\n    if (value) target.info[key] = value;\n  };\n};\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\n\n\nvar addMetadata = function addMetadata(ctx, doc) {\n  var setProp = setPDFMetadata(ctx);\n  var props = doc.props || {};\n  var title = props.title || null;\n  var author = props.author || null;\n  var subject = props.subject || null;\n  var keywords = props.keywords || null;\n  var creator = props.creator || 'react-pdf';\n  var producer = props.producer || 'react-pdf';\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n};\n/* eslint-disable no-param-reassign */\n\n\nvar addNodeBookmark = function addNodeBookmark(ctx, node, pageNumber, registry) {\n  var _node$props;\n\n  var bookmark = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.bookmark;\n\n  if (bookmark) {\n    var title = bookmark.title,\n        parent = bookmark.parent,\n        expanded = bookmark.expanded,\n        zoom = bookmark.zoom,\n        fit = bookmark.fit;\n    var outline = registry[parent] || ctx.outline;\n    var top = bookmark.top || node.box.top;\n    var left = bookmark.left || node.box.left;\n    var instance = outline.addItem(title, {\n      pageNumber: pageNumber,\n      expanded: expanded,\n      top: top,\n      left: left,\n      zoom: zoom,\n      fit: fit\n    });\n    registry[bookmark.ref] = instance;\n  }\n\n  if (!node.children) return;\n  node.children.forEach(function (child) {\n    return addNodeBookmark(ctx, child, pageNumber, registry);\n  });\n};\n\nvar addBookmarks = function addBookmarks(ctx, root) {\n  var registry = {};\n  var pages = root.children || [];\n  pages.forEach(function (page, i) {\n    addNodeBookmark(ctx, page, i, registry);\n  });\n};\n\nvar render = function render(ctx, doc) {\n  var pages = doc.children || [];\n  var options = {\n    imageCache: new Map()\n  };\n  addMetadata(ctx, doc);\n  pages.forEach(function (page) {\n    return renderNode(ctx, page, options);\n  });\n  addBookmarks(ctx, doc);\n  ctx.end();\n  return ctx;\n};\n\nexport { render as default };","map":{"version":3,"names":["P","isNil","matchPercent","absPath","parsePath","normalizePath","colorString","_extends","renderPath","ctx","node","_node$props","d","props","path","KAPPA$3","Math","sqrt","renderRect","_node$props2","_node$props3","_node$props4","_node$props5","_node$props6","x","y","rx","ry","width","height","krx","kry","moveTo","lineTo","bezierCurveTo","closePath","renderLine$1","renderLine","_ref","x1","x2","y1","y2","renderGroup","KAPPA$2","drawEllipse","cx","cy","ox","oy","xe","ye","xm","ym","renderEllipse","renderCircle","r","renderGlyphs","glyphs","positions","options","scale","_fontSize","unitsPerEm","_font","font","advanceWidthScale","encodedGlyphs","encodeGlyphs","encodedPositions","map","pos","i","xAdvance","yAdvance","xOffset","yOffset","advanceWidth","_glyphs","renderRun$1","renderRun","run","runAdvanceWidth","_run$attributes","attributes","fontSize","color","opacity","fillColor","fillOpacity","sbix","COLR","CPAL","save","translate","ascent","length","position","glyph","render","restore","name","error","console","log","renderSpan","line","textAnchor","dominantBaseline","_line$box","_line$box2","_line$runs$","_line$runs$2","_line$runs$2$attribut","box","runs","xHeight","descent","capHeight","xTranslate","yTranslate","forEach","renderSvgText","children","span","lines","pairs","values","result","push","parsePoints","points","trim","replace","split","slice","parseFloat","drawPolyline","p","renderPolyline","renderPolygon","renderImage$1","renderImage","image","data","_node$style","style","paddingTop","paddingLeft","warn","href","KAPPA$1","clipNode","_node$box","top","left","_node$style$borderTop","borderTopLeftRadius","_node$style$borderTop2","borderTopRightRadius","_node$style$borderBot","borderBottomRightRadius","_node$style$borderBot2","borderBottomLeftRadius","rtr","min","ctr","rbr","cbr","rbl","cbl","rtl","ctl","clip","applySingleTransformation","transform","origin","operation","value","scaleX","scaleY","angle","rotate","xAngle","yAngle","skew","apply","applyTransformations","operations","_boundingBoxFns","getPathBoundingBox","bounds","Infinity","l","j","getCircleBoundingBox","getEllipseBoundingBox","_node$props7","_node$props8","getLineBoundingBox","_node$props9","_node$props10","_node$props11","_node$props12","max","getRectBoundingBox","_node$props13","_node$props14","_node$props15","_node$props16","concat","getPolylineBoundingBox","_node$props17","xValues","yValues","boundingBoxFns","Rect","Line","Path","Circle","Ellipse","Polygon","Polyline","getBoundingBox","boundingBoxFn","type","_renderFns$1","setStrokeWidth","lineWidth","strokeWidth","setStrokeColor","strokeColor","stroke","setOpacity","setFillOpacity","setStrokeOpacity","strokeOpacity","setLineJoin","lineJoin","strokeLinejoin","setLineCap","lineCap","strokeLinecap","setLineDash","strokeDasharray","dash","hasLinearGradientFill","_node$props9$fill","fill","LinearGradient","hasRadialGradientFill","_node$props10$fill","RadialGradient","setLinearGradientFill","bbox","gradient","m0","m3","m4","m5","gx1","gy1","gx2","gy2","grad","linearGradient","stop","offset","stopColor","stopOpacity","setRadialGradientFill","fx","fy","gr","gcx","gcy","gfx","gfy","radialGradient","setFillColor","setFill","draw","fillAndStroke","fillRule","noop","renderFns$1","Tspan","TextInstance","G","Text","Image","renderNode$1","renderNode","renderFn","drawNode","clipPath","child","drawChildren","resolveAspectRatio","viewBox","_node$props15$preserv","preserveAspectRatio","_preserveAspectRatio$","meetOrSlice","_preserveAspectRatio$2","align","minX","minY","logicalWidth","maxX","logicalHeight","maxY","logicalRatio","physicalRatio","moveToOrigin","_node$box2","renderSvg","parseColor","hex","parsed","get","to","DEST_REGEXP","isSrcId$1","isSrcId","src","match","renderAttachment","attachment","_attachment$xOffset","_attachment$yOffset","fit","valign","renderAttachments","space","glyphForCodePoint","objectReplacement","attachmentAdvance","id","link","outlineRuns","rect","goTo","renderBackground$1","renderBackground","backgroundColor","renderDecorationLine","test","dist","step","stepCount","floor","remainingWidth","adjustment","cp1y","cp2y","lineAscent","outlineLines","isLastRun","overflowRight","backgroundRect","_i","decorationLines","decorationLine","renderBlock","block","renderText","_node$box3","blocks","initialY","offsetX","alignOffset","renderPage","dpi","userUnit","addPage","size","margin","renderNote","_node$children","_node$style2","borderWidth","note","isNumeric","n","Number","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","percent","pyv","_height","_width","_yOffset","_xOffset","applyNoneObjectFit","applyCoverObjectFit","_width2","_height2","_xOffset2","_yOffset2","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","drawImage","_node$style3","_node$style4","objectFit","objectPositionX","objectPositionY","paddingRight","paddingBottom","imageCache","Map","_resolveObjectFit","cacheKey","key","embedImage","set","imageOpacity","JSON","stringify","CONTENT_COLOR","PADDING_COLOR","MARGIN_COLOR","debugContent","_node$box$paddingLeft","_node$box$paddingTop","_node$box$paddingRigh","_node$box$paddingBott","_node$box$borderLeftW","borderLeftWidth","_node$box$borderTopWi","borderTopWidth","_node$box$borderRight","borderRightWidth","_node$box$borderBotto","borderBottomWidth","debugPadding","_node$box2$paddingLef","_node$box2$paddingTop","_node$box2$paddingRig","_node$box2$paddingBot","_node$box2$borderLeft","_node$box2$borderTopW","_node$box2$borderRigh","_node$box2$borderBott","getMargin","marginLeft","marginTop","marginRight","marginBottom","debugMargin","_getMargin","_getMargin$marginLeft","_getMargin$marginTop","_getMargin$marginRigh","_getMargin$marginBott","debugText","_node$box4","_getMargin2","_getMargin2$marginLef","_getMargin2$marginTop","_getMargin2$marginRig","_getMargin2$marginBot","roundedWidth","round","roundedHeight","text","debugOrigin","circle","renderDebug","debug","availableMethods","painter","reduce","acc","prop","_extends2","arguments","renderCanvas","availableWidth","availableHeight","paint","KAPPA","clipBorderTop","layout","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","_trSlope","fillBorderTop","borderTopColor","borderTopStyle","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","borderRightColor","borderRightStyle","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","borderBottomColor","borderBottomStyle","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","_trSlope2","fillBorderLeft","borderLeftColor","borderLeftStyle","shouldRenderBorders","renderBorders","_node$style$borderTop3","_node$style$borderTop4","_node$style$borderLef","_node$style$borderLef2","_node$style$borderRig","_node$style$borderRig2","_node$style$borderBot3","_node$style$borderBot4","drawBackground","nodeOpacity","hasBackground","setLink","isId","method","setDestination","addNamedDestination","_renderFns","isRecursiveNode","Svg","renderChildren","renderChild","renderFns","Note","Canvas","Link","overflowHidden","overflow","shouldRenderChildren","Page","setPDFMetadata","target","info","addMetadata","doc","setProp","title","author","subject","keywords","creator","producer","addNodeBookmark","pageNumber","registry","bookmark","parent","expanded","zoom","outline","instance","addItem","ref","addBookmarks","root","pages","page","end","default"],"sources":["C:/Users/Rahul Gupta/git/lockerroom345website/lockerroom345website/frontend/node_modules/@react-pdf/render/lib/index.es.js"],"sourcesContent":["import * as P from '@react-pdf/primitives';\nimport { isNil, matchPercent } from '@react-pdf/fns';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\nimport normalizePath from 'normalize-svg-path';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\n\nvar renderPath = function renderPath(ctx, node) {\n  var _node$props;\n\n  var d = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d;\n  if (d) ctx.path(node.props.d);\n};\n\nvar KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar renderRect = function renderRect(ctx, node) {\n  var _node$props, _node$props2, _node$props3, _node$props4, _node$props5, _node$props6;\n\n  var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n  var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n  var rx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.rx) || 0;\n  var ry = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.ry) || 0;\n  var width = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.width) || 0;\n  var height = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.height) || 0;\n  if (!width || !height) return;\n\n  if (rx && ry) {\n    var krx = rx * KAPPA$3;\n    var kry = ry * KAPPA$3;\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n\n  ctx.closePath();\n};\n\nvar renderLine$1 = function renderLine(ctx, node) {\n  var _ref = node.props || {},\n      x1 = _ref.x1,\n      x2 = _ref.x2,\n      y1 = _ref.y1,\n      y2 = _ref.y2;\n\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n};\n\nvar renderGroup = function renderGroup() {// noop\n};\n\nvar KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar drawEllipse = function drawEllipse(ctx, cx, cy, rx, ry) {\n  var x = cx - rx;\n  var y = cy - ry;\n  var ox = rx * KAPPA$2;\n  var oy = ry * KAPPA$2;\n  var xe = x + rx * 2;\n  var ye = y + ry * 2;\n  var xm = x + rx;\n  var ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nvar renderEllipse = function renderEllipse(ctx, node) {\n  var _ref = node.props || {},\n      cx = _ref.cx,\n      cy = _ref.cy,\n      rx = _ref.rx,\n      ry = _ref.ry;\n\n  drawEllipse(ctx, cx, cy, rx, ry);\n};\n\nvar renderCircle = function renderCircle(ctx, node) {\n  var _node$props, _node$props2, _node$props3;\n\n  var cx = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.cx;\n  var cy = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.cy;\n  var r = (_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.r;\n  drawEllipse(ctx, cx, cy, r, r);\n};\n\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm; // Glyph encoding and positioning\n\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\n\nvar renderRun$1 = function renderRun(ctx, run) {\n  var runAdvanceWidth = run.xAdvance;\n  var _run$attributes = run.attributes,\n      font = _run$attributes.font,\n      fontSize = _run$attributes.fontSize,\n      color = _run$attributes.color,\n      opacity = _run$attributes.opacity;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  var _line$box, _line$box2, _line$runs$, _line$runs$2, _line$runs$2$attribut;\n\n  ctx.save();\n  var x = ((_line$box = line.box) === null || _line$box === void 0 ? void 0 : _line$box.x) || 0;\n  var y = ((_line$box2 = line.box) === null || _line$box2 === void 0 ? void 0 : _line$box2.y) || 0;\n  var font = (_line$runs$ = line.runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes.font;\n  var scale = ((_line$runs$2 = line.runs[0]) === null || _line$runs$2 === void 0 ? void 0 : (_line$runs$2$attribut = _line$runs$2.attributes) === null || _line$runs$2$attribut === void 0 ? void 0 : _line$runs$2$attribut.scale) || 1;\n  var width = line.xAdvance;\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n\n    case 'end':\n      xTranslate = x - width;\n      break;\n\n    default:\n      xTranslate = x;\n      break;\n  }\n\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n\n    default:\n      yTranslate = y;\n      break;\n  }\n\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun$1(ctx, run);\n  });\n  ctx.restore();\n};\n\nvar renderSvgText = function renderSvgText(ctx, node) {\n  node.children.forEach(function (span) {\n    return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n  });\n};\n\nvar pairs = function pairs(values) {\n  var result = [];\n\n  for (var i = 0; i < values.length; i += 2) {\n    result.push([values[i], values[i + 1]]);\n  }\n\n  return result;\n};\n/**\n * Parse svg-like points into number arrays\n *\n * @param {String} points string ex. \"20,30 50,60\"\n * @return {Array} points array ex. [[20, 30], [50, 60]]\n */\n\n\nvar parsePoints = function parsePoints(points) {\n  var values = (points || '').trim().replace(/,/g, ' ').replace(/(\\d)-(\\d)/g, '$1 -$2').split(/\\s+/);\n\n  if (values.length % 2 !== 0) {\n    values = values.slice(0, -1);\n  }\n\n  values = values.map(parseFloat);\n  return pairs(values);\n};\n\nvar drawPolyline = function drawPolyline(ctx, points) {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(function (p) {\n      return ctx.lineTo(p[0], p[1]);\n    });\n  }\n};\n\nvar renderPolyline = function renderPolyline(ctx, node) {\n  var points = parsePoints(node.props.points || '');\n  drawPolyline(ctx, points);\n};\n\nvar renderPolygon = function renderPolygon(ctx, node) {\n  renderPolyline(ctx, node);\n  ctx.closePath();\n};\n\nvar renderImage$1 = function renderImage(ctx, node) {\n  if (!node.image.data) return;\n  var _node$props = node.props,\n      x = _node$props.x,\n      y = _node$props.y;\n  var _node$style = node.style,\n      width = _node$style.width,\n      height = _node$style.height,\n      opacity = _node$style.opacity;\n  var paddingTop = node.box.paddingLeft || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n\n  if (width === 0 || height === 0) {\n    console.warn(\"Image with src '\" + node.props.href + \"' skipped due to invalid dimensions\");\n    return;\n  }\n\n  ctx.save();\n  ctx.fillOpacity(opacity || 1).image(node.image.data, x + paddingLeft, y + paddingTop, {\n    width: width,\n    height: height\n  });\n  ctx.restore();\n};\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar clipNode = function clipNode(ctx, node) {\n  if (!node.style) return;\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var _node$style = node.style,\n      _node$style$borderTop = _node$style.borderTopLeftRadius,\n      borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n      _node$style$borderTop2 = _node$style.borderTopRightRadius,\n      borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n      _node$style$borderBot = _node$style.borderBottomRightRadius,\n      borderBottomRightRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n      _node$style$borderBot2 = _node$style.borderBottomLeftRadius,\n      borderBottomLeftRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2; // Border top\n\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var ctr = rtr * (1.0 - KAPPA$1);\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr); // Border right\n\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var cbr = rbr * (1.0 - KAPPA$1);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height); // Border bottom\n\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  var cbl = rbl * (1.0 - KAPPA$1);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl); // Border left\n\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var ctl = rtl * (1.0 - KAPPA$1);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n};\n\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n      value = transform.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var scaleX = value[0],\n            scaleY = value[1];\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'rotate':\n      {\n        var angle = value[0];\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'translate':\n      {\n        var x = value[0],\n            y = value[1];\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'skew':\n      {\n        var xAngle = value[0],\n            yAngle = value[1];\n        ctx.skew(xAngle, yAngle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, value);\n        break;\n      }\n\n    default:\n      {\n        console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n      }\n  }\n};\n\nvar applyTransformations = function applyTransformations(ctx, node) {\n  var _node$style, _node$props;\n\n  if (!node.origin) return;\n  var origin = [node.origin.left, node.origin.top];\n  var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n};\n\nvar _boundingBoxFns;\n\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var _node$props;\n\n  var path = normalizePath(absPath(parsePath(((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d) || '')));\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var _node$props2, _node$props3, _node$props4;\n\n  var r = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.r) || 0;\n  var cx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.cx) || 0;\n  var cy = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.cy) || 0;\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var _node$props5, _node$props6, _node$props7, _node$props8;\n\n  var cx = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.cx) || 0;\n  var cy = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.cy) || 0;\n  var rx = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.rx) || 0;\n  var ry = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.ry) || 0;\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var _node$props9, _node$props10, _node$props11, _node$props12;\n\n  var x1 = ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : _node$props9.x1) || 0;\n  var y1 = ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : _node$props10.y1) || 0;\n  var x2 = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.x2) || 0;\n  var y2 = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.y2) || 0;\n  return [Math.min(x1, x2), Math.min(y1, y2), Math.max(x1, x2), Math.max(y1, y2)];\n};\n\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var _node$props13, _node$props14, _node$props15, _node$props16;\n\n  var x = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.x) || 0;\n  var y = ((_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.y) || 0;\n  var width = ((_node$props15 = node.props) === null || _node$props15 === void 0 ? void 0 : _node$props15.width) || 0;\n  var height = ((_node$props16 = node.props) === null || _node$props16 === void 0 ? void 0 : _node$props16.height) || 0;\n  return [x, y, x + width, y + height];\n};\n\nvar max = function max(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\n\nvar min = function min(values) {\n  return Math.min.apply(Math, [Infinity].concat(values));\n};\n\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var _node$props17;\n\n  var points = parsePoints(((_node$props17 = node.props) === null || _node$props17 === void 0 ? void 0 : _node$props17.points) || []);\n  var xValues = points.map(function (p) {\n    return p[0];\n  });\n  var yValues = points.map(function (p) {\n    return p[1];\n  });\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nvar boundingBoxFns = (_boundingBoxFns = {}, _boundingBoxFns[P.Rect] = getRectBoundingBox, _boundingBoxFns[P.Line] = getLineBoundingBox, _boundingBoxFns[P.Path] = getPathBoundingBox, _boundingBoxFns[P.Circle] = getCircleBoundingBox, _boundingBoxFns[P.Ellipse] = getEllipseBoundingBox, _boundingBoxFns[P.Polygon] = getPolylineBoundingBox, _boundingBoxFns[P.Polyline] = getPolylineBoundingBox, _boundingBoxFns);\n\nvar getBoundingBox = function getBoundingBox(node) {\n  var boundingBoxFn = boundingBoxFns[node.type];\n  return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\n\nvar _renderFns$1;\n\nvar setStrokeWidth = function setStrokeWidth(ctx, node) {\n  var _node$props;\n\n  var lineWidth = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.strokeWidth) || 0;\n  if (lineWidth) ctx.lineWidth(lineWidth);\n};\n\nvar setStrokeColor = function setStrokeColor(ctx, node) {\n  var _node$props2;\n\n  var strokeColor = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.stroke) || null;\n  if (strokeColor) ctx.strokeColor(strokeColor);\n};\n\nvar setOpacity = function setOpacity(ctx, node) {\n  var _node$props3;\n\n  var opacity = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.opacity) || null;\n  if (!isNil(opacity)) ctx.opacity(opacity);\n};\n\nvar setFillOpacity = function setFillOpacity(ctx, node) {\n  var _node$props4;\n\n  var fillOpacity = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.fillOpacity) || null;\n  if (!isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n};\n\nvar setStrokeOpacity = function setStrokeOpacity(ctx, node) {\n  var _node$props5;\n\n  var strokeOpacity = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.strokeOpacity) || null;\n  if (!isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n};\n\nvar setLineJoin = function setLineJoin(ctx, node) {\n  var _node$props6;\n\n  var lineJoin = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.strokeLinejoin) || null;\n  if (lineJoin) ctx.lineJoin(lineJoin);\n};\n\nvar setLineCap = function setLineCap(ctx, node) {\n  var _node$props7;\n\n  var lineCap = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.strokeLinecap) || null;\n  if (lineCap) ctx.lineCap(lineCap);\n};\n\nvar setLineDash = function setLineDash(ctx, node) {\n  var _node$props8;\n\n  var value = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.strokeDasharray) || null;\n  if (value) ctx.dash(value.split(','));\n};\n\nvar hasLinearGradientFill = function hasLinearGradientFill(node) {\n  var _node$props9, _node$props9$fill;\n\n  return ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : (_node$props9$fill = _node$props9.fill) === null || _node$props9$fill === void 0 ? void 0 : _node$props9$fill.type) === P.LinearGradient;\n};\n\nvar hasRadialGradientFill = function hasRadialGradientFill(node) {\n  var _node$props10, _node$props10$fill;\n\n  return ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : (_node$props10$fill = _node$props10.fill) === null || _node$props10$fill === void 0 ? void 0 : _node$props10$fill.type) === P.RadialGradient;\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\n\n\nvar setLinearGradientFill = function setLinearGradientFill(ctx, node) {\n  var _node$props11;\n\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.fill) || null;\n  var x1 = gradient.props.x1 || 0;\n  var y1 = gradient.props.y1 || 0;\n  var x2 = gradient.props.x2 || 1;\n  var y2 = gradient.props.y2 || 0;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gx1 = m0 * x1 + m4;\n  var gy1 = m3 * y1 + m5;\n  var gx2 = m0 * x2 + m4;\n  var gy2 = m3 * y2 + m5;\n  var grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\n\n\nvar setRadialGradientFill = function setRadialGradientFill(ctx, node) {\n  var _node$props12;\n\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.fill) || null;\n  var cx = gradient.props.cx || 0.5;\n  var cy = gradient.props.cy || 0.5;\n  var fx = gradient.props.fx || cx;\n  var fy = gradient.props.fy || cy;\n  var r = gradient.props.r || 0.5;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gr = r * m0;\n  var gcx = m0 * cx + m4;\n  var gcy = m3 * cy + m5;\n  var gfx = m0 * fx + m4;\n  var gfy = m3 * fy + m5;\n  var grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\n\nvar setFillColor = function setFillColor(ctx, node) {\n  var _node$props13;\n\n  var fillColor = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.fill) || null;\n  if (fillColor) ctx.fillColor(fillColor);\n};\n\nvar setFill = function setFill(ctx, node) {\n  if (hasLinearGradientFill(node)) return setLinearGradientFill(ctx, node);\n  if (hasRadialGradientFill(node)) return setRadialGradientFill(ctx, node);\n  return setFillColor(ctx, node);\n};\n\nvar draw = function draw(ctx, node) {\n  var props = node.props || {};\n\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n};\n\nvar noop = function noop() {};\n\nvar renderFns$1 = (_renderFns$1 = {}, _renderFns$1[P.Tspan] = noop, _renderFns$1[P.TextInstance] = noop, _renderFns$1[P.Path] = renderPath, _renderFns$1[P.Rect] = renderRect, _renderFns$1[P.Line] = renderLine$1, _renderFns$1[P.G] = renderGroup, _renderFns$1[P.Text] = renderSvgText, _renderFns$1[P.Circle] = renderCircle, _renderFns$1[P.Image] = renderImage$1, _renderFns$1[P.Ellipse] = renderEllipse, _renderFns$1[P.Polygon] = renderPolygon, _renderFns$1[P.Polyline] = renderPolyline, _renderFns$1);\n\nvar renderNode$1 = function renderNode(ctx, node) {\n  var renderFn = renderFns$1[node.type];\n\n  if (renderFns$1) {\n    renderFn(ctx, node);\n  } else {\n    console.warn(\"SVG node of type \" + node.type + \" is not currenty supported\");\n  }\n};\n\nvar drawNode = function drawNode(ctx, node) {\n  setLineCap(ctx, node);\n  setLineDash(ctx, node);\n  setLineJoin(ctx, node);\n  setStrokeWidth(ctx, node);\n  setStrokeColor(ctx, node);\n  setFill(ctx, node);\n  setStrokeOpacity(ctx, node);\n  setFillOpacity(ctx, node);\n  setOpacity(ctx, node);\n  applyTransformations(ctx, node);\n  renderNode$1(ctx, node);\n  draw(ctx, node);\n};\n\nvar clipPath = function clipPath(ctx, node) {\n  var _node$props14;\n\n  var value = (_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.clipPath;\n\n  if (value) {\n    var children = value.children || [];\n    children.forEach(function (child) {\n      return renderNode$1(ctx, child);\n    });\n    ctx.clip();\n  }\n};\n\nvar drawChildren = function drawChildren(ctx, node) {\n  var children = node.children || [];\n  children.forEach(function (child) {\n    ctx.save();\n    clipPath(ctx, child);\n    drawNode(ctx, child);\n    drawChildren(ctx, child);\n    ctx.restore();\n  });\n};\n\nvar resolveAspectRatio = function resolveAspectRatio(ctx, node) {\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height;\n  var _node$props15 = node.props,\n      viewBox = _node$props15.viewBox,\n      _node$props15$preserv = _node$props15.preserveAspectRatio,\n      preserveAspectRatio = _node$props15$preserv === void 0 ? {} : _node$props15$preserv;\n  var _preserveAspectRatio$ = preserveAspectRatio.meetOrSlice,\n      meetOrSlice = _preserveAspectRatio$ === void 0 ? 'meet' : _preserveAspectRatio$,\n      _preserveAspectRatio$2 = preserveAspectRatio.align,\n      align = _preserveAspectRatio$2 === void 0 ? 'xMidYMid' : _preserveAspectRatio$2;\n  if (viewBox == null || width == null || height == null) return;\n  var x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  var y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  var logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  var logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  var logicalRatio = logicalWidth / logicalHeight;\n  var physicalRatio = width / height;\n  var scaleX = width / logicalWidth;\n  var scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return;\n  }\n\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n};\n\nvar moveToOrigin = function moveToOrigin(ctx, node) {\n  var _node$box2 = node.box,\n      top = _node$box2.top,\n      left = _node$box2.left;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingTop = node.box.paddingTop || 0;\n  ctx.translate(left + paddingLeft, top + paddingTop);\n};\n\nvar renderSvg = function renderSvg(ctx, node) {\n  ctx.save();\n  clipNode(ctx, node);\n  moveToOrigin(ctx, node);\n  resolveAspectRatio(ctx, node);\n  drawChildren(ctx, node);\n  ctx.restore();\n};\n\nvar parseColor = function parseColor(hex) {\n  var parsed = colorString.get(hex);\n  var value = colorString.to.hex(parsed.value.slice(0, 3));\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n\n/* eslint-disable no-param-reassign */\nvar DEST_REGEXP = /^#.+/;\n\nvar isSrcId$1 = function isSrcId(src) {\n  return src.match(DEST_REGEXP);\n};\n\nvar renderAttachment = function renderAttachment(ctx, attachment) {\n  var _attachment$xOffset = attachment.xOffset,\n      xOffset = _attachment$xOffset === void 0 ? 0 : _attachment$xOffset,\n      _attachment$yOffset = attachment.yOffset,\n      yOffset = _attachment$yOffset === void 0 ? 0 : _attachment$yOffset,\n      width = attachment.width,\n      height = attachment.height,\n      image = attachment.image;\n  ctx.translate(-width + xOffset, -height + yOffset);\n  ctx.image(image, 0, 0, {\n    fit: [width, height],\n    align: 'center',\n    valign: 'bottom'\n  });\n};\n\nvar renderAttachments = function renderAttachments(ctx, run) {\n  ctx.save();\n  var font = run.attributes.font;\n  var space = font.glyphForCodePoint(0x20);\n  var objectReplacement = font.glyphForCodePoint(0xfffc);\n  var attachmentAdvance = 0;\n\n  for (var i = 0; i < run.glyphs.length; i += 1) {\n    var position = run.positions[i];\n    var glyph = run.glyphs[i];\n    attachmentAdvance += position.xAdvance || 0;\n\n    if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n      ctx.translate(attachmentAdvance, position.yOffset || 0);\n      renderAttachment(ctx, run.attributes.attachment);\n      run.glyphs[i] = space;\n      attachmentAdvance = 0;\n    }\n  }\n\n  ctx.restore();\n};\n\nvar renderRun = function renderRun(ctx, run, options) {\n  var _run$attributes = run.attributes,\n      font = _run$attributes.font,\n      fontSize = _run$attributes.fontSize,\n      link = _run$attributes.link;\n  var color = parseColor(run.attributes.color);\n  var opacity = isNil(run.attributes.opacity) ? color.opacity : run.attributes.opacity;\n  var height = run.height,\n      descent = run.descent,\n      xAdvance = run.xAdvance;\n\n  if (options.outlineRuns) {\n    ctx.rect(0, -height, xAdvance, height).stroke();\n  }\n\n  ctx.fillColor(color.value);\n  ctx.fillOpacity(opacity);\n\n  if (link) {\n    if (isSrcId$1(link)) {\n      ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n    } else {\n      ctx.link(0, -height - descent, xAdvance, height, link);\n    }\n  }\n\n  renderAttachments(ctx, run);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(xAdvance, 0);\n};\n\nvar renderBackground$1 = function renderBackground(ctx, rect, backgroundColor) {\n  var color = parseColor(backgroundColor);\n  ctx.save();\n  ctx.fillOpacity(color.opacity);\n  ctx.rect(rect.x, rect.y, rect.width, rect.height);\n  ctx.fill(color.value);\n  ctx.restore();\n};\n\nvar renderDecorationLine = function renderDecorationLine(ctx, line) {\n  ctx.save();\n  ctx.lineWidth(line.rect.height);\n  ctx.strokeOpacity(line.opacity);\n\n  if (/dashed/.test(line.style)) {\n    ctx.dash(3 * line.rect.height);\n  } else if (/dotted/.test(line.style)) {\n    ctx.dash(line.rect.height);\n  }\n\n  if (/wavy/.test(line.style)) {\n    var dist = Math.max(2, line.rect.height);\n    var step = 1.1 * dist;\n    var stepCount = Math.floor(line.rect.width / (2 * step)); // Adjust step to fill entire width\n\n    var remainingWidth = line.rect.width - stepCount * 2 * step;\n    var adjustment = remainingWidth / stepCount / 2;\n    step += adjustment;\n    var cp1y = line.rect.y + dist;\n    var cp2y = line.rect.y - dist;\n    var x = line.rect.x;\n    ctx.moveTo(line.rect.x, line.rect.y);\n\n    for (var i = 0; i < stepCount; i += 1) {\n      ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, line.rect.y);\n      x += 2 * step;\n    }\n  } else {\n    ctx.moveTo(line.rect.x, line.rect.y);\n    ctx.lineTo(line.rect.x + line.rect.width, line.rect.y);\n\n    if (/double/.test(line.style)) {\n      ctx.moveTo(line.rect.x, line.rect.y + line.rect.height * 2);\n      ctx.lineTo(line.rect.x + line.rect.width, line.rect.y + line.rect.height * 2);\n    }\n  }\n\n  ctx.stroke(line.color);\n  ctx.restore();\n};\n\nvar renderLine = function renderLine(ctx, line, options) {\n  var lineAscent = line.ascent;\n\n  if (options.outlineLines) {\n    ctx.rect(line.box.x, line.box.y, line.box.width, line.box.height).stroke();\n  }\n\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y + lineAscent);\n\n  for (var i = 0; i < line.runs.length; i += 1) {\n    var run = line.runs[i];\n    var isLastRun = i === line.runs.length - 1;\n\n    if (run.attributes.backgroundColor) {\n      var overflowRight = isLastRun ? line.overflowRight : 0;\n      var backgroundRect = {\n        x: 0,\n        y: -lineAscent,\n        height: line.box.height,\n        width: run.xAdvance - overflowRight\n      };\n      renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n    }\n\n    renderRun(ctx, run, options);\n  }\n\n  ctx.restore();\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y);\n\n  for (var _i = 0; _i < line.decorationLines.length; _i += 1) {\n    var decorationLine = line.decorationLines[_i];\n    renderDecorationLine(ctx, decorationLine);\n  }\n\n  ctx.restore();\n};\n\nvar renderBlock = function renderBlock(ctx, block, options) {\n  block.forEach(function (line) {\n    renderLine(ctx, line, options);\n  });\n};\n\nvar renderText = function renderText(ctx, node) {\n  var _node$box2, _node$box3;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left;\n  var blocks = [node.lines];\n  var paddingTop = ((_node$box2 = node.box) === null || _node$box2 === void 0 ? void 0 : _node$box2.paddingTop) || 0;\n  var paddingLeft = ((_node$box3 = node.box) === null || _node$box3 === void 0 ? void 0 : _node$box3.paddingLeft) || 0;\n  var initialY = node.lines[0] ? node.lines[0].box.y : 0;\n  var offsetX = node.alignOffset || 0;\n  ctx.save();\n  ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n  blocks.forEach(function (block) {\n    renderBlock(ctx, block, {});\n  });\n  ctx.restore();\n};\n\nvar renderPage = function renderPage(ctx, node) {\n  var _node$props;\n\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height;\n  var dpi = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.dpi) || 72;\n  var userUnit = dpi / 72;\n  ctx.addPage({\n    size: [width, height],\n    margin: 0,\n    userUnit: userUnit\n  });\n};\n\nvar renderNote = function renderNote(ctx, node) {\n  var _node$children, _node$style, _node$style2;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left;\n  var value = (node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children[0].value) || '';\n  var color = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor) || null;\n  var borderWidth = ((_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.borderWidth) || null;\n  ctx.note(left, top, 0, 0, value, {\n    color: color,\n    borderWidth: borderWidth\n  });\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\n\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n  var cr = cw / ch;\n  var ir = iw / ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var _height = ch;\n\n    var _width = _height * ir;\n\n    var _yOffset = isNumeric(py) ? py : 0;\n\n    var _xOffset = isNumeric(px) ? px : (cw - _width) * pxv;\n\n    return {\n      width: _width,\n      height: _height,\n      xOffset: _xOffset,\n      yOffset: _yOffset\n    };\n  }\n\n  var width = cw;\n  var height = width / ir;\n  var xOffset = isNumeric(px) ? px : 0;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n};\n\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n  var width = iw;\n  var height = ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n  var ir = iw / ih;\n  var cr = cw / ch;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var _width2 = cw;\n\n    var _height2 = _width2 / ir;\n\n    var _xOffset2 = isNumeric(px) ? px : 0;\n\n    var _yOffset2 = isNumeric(py) ? py : (ch - _height2) * pyv;\n\n    return {\n      width: _width2,\n      height: _height2,\n      yOffset: _yOffset2,\n      xOffset: _xOffset2\n    };\n  }\n\n  var height = ch;\n  var width = height * ir;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : 0;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n  var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n  return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\n\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0\n  };\n};\n\nvar resolveObjectFit = function resolveObjectFit(type, cw, ch, iw, ih, px, py) {\n  if (type === void 0) {\n    type = 'fill';\n  }\n\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nvar drawImage = function drawImage(ctx, node, options) {\n  var _node$style, _node$style2, _node$style3, _node$style4;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _node$box = node.box,\n      left = _node$box.left,\n      top = _node$box.top;\n  var opacity = (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity;\n  var objectFit = (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.objectFit;\n  var objectPositionX = (_node$style3 = node.style) === null || _node$style3 === void 0 ? void 0 : _node$style3.objectPositionX;\n  var objectPositionY = (_node$style4 = node.style) === null || _node$style4 === void 0 ? void 0 : _node$style4.objectPositionY;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var imageCache = options.imageCache || new Map();\n\n  var _resolveObjectFit = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY),\n      width = _resolveObjectFit.width,\n      height = _resolveObjectFit.height,\n      xOffset = _resolveObjectFit.xOffset,\n      yOffset = _resolveObjectFit.yOffset;\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      var cacheKey = node.image.key;\n      var image = imageCache.get(cacheKey) || ctx.embedImage(node.image.data);\n      if (cacheKey) imageCache.set(cacheKey, image);\n      var imageOpacity = isNil(opacity) ? 1 : opacity;\n      ctx.fillOpacity(imageOpacity).image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n        width: width,\n        height: height\n      });\n    } else {\n      console.warn(\"Image with src '\" + JSON.stringify(node.props.src) + \"' skipped due to invalid dimensions\");\n    }\n  }\n};\n\nvar renderImage = function renderImage(ctx, node, options) {\n  ctx.save();\n  clipNode(ctx, node);\n  drawImage(ctx, node, options);\n  ctx.restore();\n};\n\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1'; // TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx, node) {\n  var _node$box = node.box,\n      left = _node$box.left,\n      top = _node$box.top,\n      width = _node$box.width,\n      height = _node$box.height,\n      _node$box$paddingLeft = _node$box.paddingLeft,\n      paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft,\n      _node$box$paddingTop = _node$box.paddingTop,\n      paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop,\n      _node$box$paddingRigh = _node$box.paddingRight,\n      paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh,\n      _node$box$paddingBott = _node$box.paddingBottom,\n      paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott,\n      _node$box$borderLeftW = _node$box.borderLeftWidth,\n      borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW,\n      _node$box$borderTopWi = _node$box.borderTopWidth,\n      borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi,\n      _node$box$borderRight = _node$box.borderRightWidth,\n      borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight,\n      _node$box$borderBotto = _node$box.borderBottomWidth,\n      borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n  ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n};\n\nvar debugPadding = function debugPadding(ctx, node) {\n  var _node$box2 = node.box,\n      left = _node$box2.left,\n      top = _node$box2.top,\n      width = _node$box2.width,\n      height = _node$box2.height,\n      _node$box2$paddingLef = _node$box2.paddingLeft,\n      paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef,\n      _node$box2$paddingTop = _node$box2.paddingTop,\n      paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop,\n      _node$box2$paddingRig = _node$box2.paddingRight,\n      paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig,\n      _node$box2$paddingBot = _node$box2.paddingBottom,\n      paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot,\n      _node$box2$borderLeft = _node$box2.borderLeftWidth,\n      borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft,\n      _node$box2$borderTopW = _node$box2.borderTopWidth,\n      borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW,\n      _node$box2$borderRigh = _node$box2.borderRightWidth,\n      borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh,\n      _node$box2$borderBott = _node$box2.borderBottomWidth,\n      borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n  ctx.fillColor(PADDING_COLOR).opacity(0.5); // Padding top\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill(); // Padding left\n\n  ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill(); // Padding right\n\n  ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill(); // Padding bottom\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n};\n\nvar getMargin = function getMargin(box) {\n  var marginLeft = box.marginLeft === 'auto' ? 0 : box.marginLeft;\n  var marginTop = box.marginTop === 'auto' ? 0 : box.marginTop;\n  var marginRight = box.marginRight === 'auto' ? 0 : box.marginRight;\n  var marginBottom = box.marginBottom === 'auto' ? 0 : box.marginBottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom\n  };\n};\n\nvar debugMargin = function debugMargin(ctx, node) {\n  var _node$box3 = node.box,\n      left = _node$box3.left,\n      top = _node$box3.top,\n      width = _node$box3.width,\n      height = _node$box3.height;\n\n  var _getMargin = getMargin(node.box),\n      _getMargin$marginLeft = _getMargin.marginLeft,\n      marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft,\n      _getMargin$marginTop = _getMargin.marginTop,\n      marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop,\n      _getMargin$marginRigh = _getMargin.marginRight,\n      marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh,\n      _getMargin$marginBott = _getMargin.marginBottom,\n      marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5); // Margin top\n\n  ctx.rect(left, top - marginTop, width, marginTop).fill(); // Margin left\n\n  ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill(); // Margin right\n\n  ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill(); // Margin bottom\n\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\n\nvar debugText = function debugText(ctx, node) {\n  var _node$box4 = node.box,\n      left = _node$box4.left,\n      top = _node$box4.top,\n      width = _node$box4.width,\n      height = _node$box4.height;\n\n  var _getMargin2 = getMargin(node.box),\n      _getMargin2$marginLef = _getMargin2.marginLeft,\n      marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef,\n      _getMargin2$marginTop = _getMargin2.marginTop,\n      marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop,\n      _getMargin2$marginRig = _getMargin2.marginRight,\n      marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig,\n      _getMargin2$marginBot = _getMargin2.marginBottom,\n      marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n\n  var roundedWidth = Math.round(width + marginLeft + marginRight);\n  var roundedHeight = Math.round(height + marginTop + marginBottom);\n  ctx.fontSize(6).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n};\n\nvar debugOrigin = function debugOrigin(ctx, node) {\n  if (node.origin) {\n    ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n  }\n};\n\nvar renderDebug = function renderDebug(ctx, node) {\n  var _node$props;\n\n  if (!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.debug)) return;\n  ctx.save();\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n  ctx.restore();\n};\n\nvar availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'fillAndStroke', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\n\nvar painter = function painter(ctx) {\n  var p = availableMethods.reduce(function (acc, prop) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[prop] = function () {\n      ctx[prop].apply(ctx, arguments);\n      return p;\n    }, _extends2));\n  }, {});\n  return p;\n};\n\nvar renderCanvas = function renderCanvas(ctx, node) {\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var availableWidth = width - paddingLeft - paddingRight;\n  var availableHeight = height - paddingTop - paddingBottom;\n\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n};\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c0 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr); // Move down in case the margin exceedes the radius\n\n  var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord); // Clip inner top right cap\n\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth); // Clip inner top border edge\n\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  var topLeftYCoord = top + Math.max(borderTopWidth, rtl); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n  ctx.lineTo(left, topLeftYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c5 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip(); // Clip border top cap joins\n\n  if (borderRightWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var _trSlope = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width;\n  var borderTopColor = style.borderTopColor,\n      borderTopWidth = style.borderTopWidth,\n      borderTopStyle = style.borderTopStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rtl * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, {\n      space: borderTopWidth * 1.2\n    });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, {\n      space: borderTopWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer right border edge\n\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer bottom right cap\n\n  var c0 = rbr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height); // Move left in case the margin exceedes the radius\n\n  var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height); // Clip inner bottom right cap\n\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth); // Ellipse coefficients inner bottom right cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth)); // Clip inner right border edge\n\n  ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth)); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  var topRightXCoord = left + width - Math.max(rtr, borderRightWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n  ctx.lineTo(topRightXCoord, top); // Move right in case the margin exceedes the radius\n\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c5 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderTopWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderRightColor = style.borderRightColor,\n      borderRightStyle = style.borderRightStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbr * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, {\n      space: borderRightWidth * 1.2\n    });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, {\n      space: borderRightWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c0 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl); // Move up in case the margin exceedes the radius\n\n  var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord); // Clip inner bottom left cap\n\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord); // Ellipse coefficients inner top right cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA); // Clip inner bottom left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth); // Clip inner bottom border edge\n\n  ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth); // Ellipse coefficients inner top left cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n  ctx.lineTo(left + width, bottomRightYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer top left cap\n\n  var c5 = rbr * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n  ctx.closePath();\n  ctx.clip(); // Clip border bottom cap joins\n\n  if (borderRightWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomColor = style.borderBottomColor,\n      borderBottomStyle = style.borderBottomStyle,\n      borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rbr * (1.0 - KAPPA);\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, {\n      space: borderBottomWidth * 1.2\n    });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, {\n      space: borderBottomWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderLeftWidth = style.borderLeftWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer left border edge\n\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c0 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top); // Move right in case the margin exceedes the radius\n\n  var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top); // Clip inner top left cap\n\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopLeftRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth)); // Clip inner left border edge\n\n  ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth)); // Ellipse coefficients inner bottom left cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n  ctx.lineTo(bottomLeftXCoord, top + height); // Move left in case the margin exceedes the radius\n\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c5 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderBottomWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var _trSlope2 = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      height = layout.height;\n  var borderLeftColor = style.borderLeftColor,\n      borderLeftStyle = style.borderLeftStyle,\n      borderLeftWidth = style.borderLeftWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rtl * (1.0 - KAPPA);\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, {\n      space: borderLeftWidth * 1.2\n    });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, {\n      space: borderLeftWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar shouldRenderBorders = function shouldRenderBorders(node) {\n  return node.box && (node.box.borderTopWidth || node.box.borderRightWidth || node.box.borderBottomWidth || node.box.borderLeftWidth);\n};\n\nvar renderBorders = function renderBorders(ctx, node) {\n  if (!shouldRenderBorders(node)) return;\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height,\n      borderTopWidth = _node$box.borderTopWidth,\n      borderLeftWidth = _node$box.borderLeftWidth,\n      borderRightWidth = _node$box.borderRightWidth,\n      borderBottomWidth = _node$box.borderBottomWidth;\n  var _node$style = node.style,\n      opacity = _node$style.opacity,\n      _node$style$borderTop = _node$style.borderTopLeftRadius,\n      borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n      _node$style$borderTop2 = _node$style.borderTopRightRadius,\n      borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n      _node$style$borderBot = _node$style.borderBottomLeftRadius,\n      borderBottomLeftRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n      _node$style$borderBot2 = _node$style.borderBottomRightRadius,\n      borderBottomRightRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2,\n      _node$style$borderTop3 = _node$style.borderTopColor,\n      borderTopColor = _node$style$borderTop3 === void 0 ? 'black' : _node$style$borderTop3,\n      _node$style$borderTop4 = _node$style.borderTopStyle,\n      borderTopStyle = _node$style$borderTop4 === void 0 ? 'solid' : _node$style$borderTop4,\n      _node$style$borderLef = _node$style.borderLeftColor,\n      borderLeftColor = _node$style$borderLef === void 0 ? 'black' : _node$style$borderLef,\n      _node$style$borderLef2 = _node$style.borderLeftStyle,\n      borderLeftStyle = _node$style$borderLef2 === void 0 ? 'solid' : _node$style$borderLef2,\n      _node$style$borderRig = _node$style.borderRightColor,\n      borderRightColor = _node$style$borderRig === void 0 ? 'black' : _node$style$borderRig,\n      _node$style$borderRig2 = _node$style.borderRightStyle,\n      borderRightStyle = _node$style$borderRig2 === void 0 ? 'solid' : _node$style$borderRig2,\n      _node$style$borderBot3 = _node$style.borderBottomColor,\n      borderBottomColor = _node$style$borderBot3 === void 0 ? 'black' : _node$style$borderBot3,\n      _node$style$borderBot4 = _node$style.borderBottomStyle,\n      borderBottomStyle = _node$style$borderBot4 === void 0 ? 'solid' : _node$style$borderBot4;\n  var style = {\n    borderTopColor: borderTopColor,\n    borderTopWidth: borderTopWidth,\n    borderTopStyle: borderTopStyle,\n    borderLeftColor: borderLeftColor,\n    borderLeftWidth: borderLeftWidth,\n    borderLeftStyle: borderLeftStyle,\n    borderRightColor: borderRightColor,\n    borderRightWidth: borderRightWidth,\n    borderRightStyle: borderRightStyle,\n    borderBottomColor: borderBottomColor,\n    borderBottomWidth: borderBottomWidth,\n    borderBottomStyle: borderBottomStyle,\n    borderTopLeftRadius: borderTopLeftRadius,\n    borderTopRightRadius: borderTopRightRadius,\n    borderBottomLeftRadius: borderBottomLeftRadius,\n    borderBottomRightRadius: borderBottomRightRadius\n  };\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n};\n\nvar drawBackground = function drawBackground(ctx, node) {\n  var _node$style;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var color = parseColor(node.style.backgroundColor);\n  var nodeOpacity = isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity) ? 1 : node.style.opacity;\n  var opacity = Math.min(color.opacity, nodeOpacity);\n  ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n};\n\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style2;\n\n  var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n\n  if (hasBackground) {\n    ctx.save();\n    clipNode(ctx, node);\n    drawBackground(ctx, node);\n    ctx.restore();\n  }\n};\n\nvar isSrcId = function isSrcId(value) {\n  return /^#.+/.test(value);\n};\n\nvar setLink = function setLink(ctx, node) {\n  var props = node.props || {};\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var src = props.src || props.href;\n\n  if (src) {\n    var isId = isSrcId(src);\n    var method = isId ? 'goTo' : 'link';\n    var value = isId ? src.slice(1) : src;\n    ctx[method](left, top, width, height, value);\n  }\n};\n\nvar setDestination = function setDestination(ctx, node) {\n  var _node$props;\n\n  if ((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.id) {\n    ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n  }\n};\n\nvar _renderFns;\n\nvar isRecursiveNode = function isRecursiveNode(node) {\n  return node.type !== P.Text && node.type !== P.Svg;\n};\n\nvar renderChildren = function renderChildren(ctx, node, options) {\n  ctx.save();\n\n  if (node.box) {\n    ctx.translate(node.box.left, node.box.top);\n  }\n\n  var children = node.children || [];\n\n  var renderChild = function renderChild(child) {\n    return renderNode(ctx, child, options);\n  };\n\n  children.forEach(renderChild);\n  ctx.restore();\n};\n\nvar renderFns = (_renderFns = {}, _renderFns[P.Text] = renderText, _renderFns[P.Note] = renderNote, _renderFns[P.Image] = renderImage, _renderFns[P.Canvas] = renderCanvas, _renderFns[P.Svg] = renderSvg, _renderFns[P.Link] = setLink, _renderFns);\n\nvar renderNode = function renderNode(ctx, node, options) {\n  var _node$style;\n\n  var overflowHidden = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.overflow) === 'hidden';\n  var shouldRenderChildren = isRecursiveNode(node);\n  if (node.type === P.Page) renderPage(ctx, node);\n  ctx.save();\n  if (overflowHidden) clipNode(ctx, node);\n  applyTransformations(ctx, node);\n  renderBackground(ctx, node);\n  renderBorders(ctx, node);\n  var renderFn = renderFns[node.type];\n  if (renderFn) renderFn(ctx, node, options);\n  if (shouldRenderChildren) renderChildren(ctx, node, options);\n  setDestination(ctx, node);\n  renderDebug(ctx, node);\n  ctx.restore();\n};\n\n/* eslint-disable no-param-reassign */\nvar setPDFMetadata = function setPDFMetadata(target) {\n  return function (key, value) {\n    if (value) target.info[key] = value;\n  };\n};\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\n\n\nvar addMetadata = function addMetadata(ctx, doc) {\n  var setProp = setPDFMetadata(ctx);\n  var props = doc.props || {};\n  var title = props.title || null;\n  var author = props.author || null;\n  var subject = props.subject || null;\n  var keywords = props.keywords || null;\n  var creator = props.creator || 'react-pdf';\n  var producer = props.producer || 'react-pdf';\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n};\n\n/* eslint-disable no-param-reassign */\nvar addNodeBookmark = function addNodeBookmark(ctx, node, pageNumber, registry) {\n  var _node$props;\n\n  var bookmark = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.bookmark;\n\n  if (bookmark) {\n    var title = bookmark.title,\n        parent = bookmark.parent,\n        expanded = bookmark.expanded,\n        zoom = bookmark.zoom,\n        fit = bookmark.fit;\n    var outline = registry[parent] || ctx.outline;\n    var top = bookmark.top || node.box.top;\n    var left = bookmark.left || node.box.left;\n    var instance = outline.addItem(title, {\n      pageNumber: pageNumber,\n      expanded: expanded,\n      top: top,\n      left: left,\n      zoom: zoom,\n      fit: fit\n    });\n    registry[bookmark.ref] = instance;\n  }\n\n  if (!node.children) return;\n  node.children.forEach(function (child) {\n    return addNodeBookmark(ctx, child, pageNumber, registry);\n  });\n};\n\nvar addBookmarks = function addBookmarks(ctx, root) {\n  var registry = {};\n  var pages = root.children || [];\n  pages.forEach(function (page, i) {\n    addNodeBookmark(ctx, page, i, registry);\n  });\n};\n\nvar render = function render(ctx, doc) {\n  var pages = doc.children || [];\n  var options = {\n    imageCache: new Map()\n  };\n  addMetadata(ctx, doc);\n  pages.forEach(function (page) {\n    return renderNode(ctx, page, options);\n  });\n  addBookmarks(ctx, doc);\n  ctx.end();\n  return ctx;\n};\n\nexport { render as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}