[{"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\index.js":"1","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\App.js":"2","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\store.js":"3","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\Dashboard.js":"4","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\ProductList.js":"5","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Header\\Header.js":"6","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\OrderList.js":"7","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\NewProduct.js":"8","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\UsersList.js":"9","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\UpdateUser.js":"10","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\UpdateProduct.js":"11","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\ProductReviews.js":"12","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\ProcessOrder.js":"13","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\UserSuccess.js":"14","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\AddUser.js":"15","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Header\\UserOptions.js":"16","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\reducers\\productReducer.js":"17","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\reducers\\cartReducer.js":"18","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\reducers\\userReducer.js":"19","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\reducers\\orderReducer.js":"20","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\actions\\userAction.js":"21","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Product\\ProductDetails.js":"22","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Home\\Home.js":"23","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\Profile.js":"24","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Product\\Products.js":"25","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Product\\Search.js":"26","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\UpdateProfile.js":"27","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\LoginSignUp.js":"28","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\Requestform.js":"29","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\UpdatePassword.js":"30","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\Payment.js":"31","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\ForgotPassword.js":"32","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\Cart.js":"33","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\ResetPassword.js":"34","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Route\\ProtectedRoute.js":"35","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\ConfirmOrder.js":"36","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\OrderSuccess.js":"37","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\Shipping.js":"38","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Order\\MyOrders.js":"39","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\RequestFormReplica.js":"40","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Contact\\Contact.js":"41","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\donate\\Donate.js":"42","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Footer\\Footer.js":"43","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Order\\OrderDetails.js":"44","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Not Found\\NotFound.js":"45","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\About\\About.js":"46","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Helpuse\\Helpuse.js":"47","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\Sidebar.js":"48","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\actions\\orderAction.js":"49","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\MetaData.js":"50","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\actions\\productAction.js":"51","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\constants\\productConstants.js":"52","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\constants\\orderConstants.js":"53","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\constants\\userConstants.js":"54","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\constants\\cartConstants.js":"55","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Loader\\Loader.js":"56","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\CheckoutSteps.js":"57","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\actions\\cartAction.js":"58","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\CartItemCard.js":"59","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Home\\ProductCard.js":"60","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Product\\ReviewCard.js":"61"},{"size":615,"mtime":1662263801040,"results":"62","hashOfConfig":"63"},{"size":7516,"mtime":1662263800959,"results":"64","hashOfConfig":"63"},{"size":1798,"mtime":1662263801042,"results":"65","hashOfConfig":"63"},{"size":4939,"mtime":1662263800961,"results":"66","hashOfConfig":"63"},{"size":8872,"mtime":1662263800963,"results":"67","hashOfConfig":"63"},{"size":7501,"mtime":1662263800988,"results":"68","hashOfConfig":"63"},{"size":4377,"mtime":1662263800962,"results":"69","hashOfConfig":"63"},{"size":8651,"mtime":1662263800961,"results":"70","hashOfConfig":"63"},{"size":3631,"mtime":1662263800964,"results":"71","hashOfConfig":"63"},{"size":3859,"mtime":1662263800964,"results":"72","hashOfConfig":"63"},{"size":10897,"mtime":1662263800963,"results":"73","hashOfConfig":"63"},{"size":4544,"mtime":1662263800963,"results":"74","hashOfConfig":"63"},{"size":8848,"mtime":1662263800962,"results":"75","hashOfConfig":"63"},{"size":850,"mtime":1662263800964,"results":"76","hashOfConfig":"63"},{"size":5013,"mtime":1662347458005,"results":"77","hashOfConfig":"63"},{"size":2968,"mtime":1662263800988,"results":"78","hashOfConfig":"63"},{"size":6048,"mtime":1662263801041,"results":"79","hashOfConfig":"63"},{"size":1576,"mtime":1662263801041,"results":"80","hashOfConfig":"63"},{"size":5581,"mtime":1662263801042,"results":"81","hashOfConfig":"63"},{"size":3726,"mtime":1662263801041,"results":"82","hashOfConfig":"63"},{"size":6954,"mtime":1662263800960,"results":"83","hashOfConfig":"63"},{"size":7042,"mtime":1662263800977,"results":"84","hashOfConfig":"63"},{"size":5868,"mtime":1662263800974,"results":"85","hashOfConfig":"63"},{"size":1646,"mtime":1662263800981,"results":"86","hashOfConfig":"63"},{"size":5216,"mtime":1662263800977,"results":"87","hashOfConfig":"63"},{"size":815,"mtime":1662263800978,"results":"88","hashOfConfig":"63"},{"size":4011,"mtime":1662263800984,"results":"89","hashOfConfig":"63"},{"size":7855,"mtime":1662433417357,"results":"90","hashOfConfig":"63"},{"size":8935,"mtime":1662263800982,"results":"91","hashOfConfig":"63"},{"size":3534,"mtime":1662263800983,"results":"92","hashOfConfig":"63"},{"size":4450,"mtime":1662263800971,"results":"93","hashOfConfig":"63"},{"size":2236,"mtime":1662263800980,"results":"94","hashOfConfig":"63"},{"size":3679,"mtime":1662263800967,"results":"95","hashOfConfig":"63"},{"size":2838,"mtime":1662263800982,"results":"96","hashOfConfig":"63"},{"size":1080,"mtime":1662263800979,"results":"97","hashOfConfig":"63"},{"size":7774,"mtime":1662263800970,"results":"98","hashOfConfig":"63"},{"size":1023,"mtime":1662263800971,"results":"99","hashOfConfig":"63"},{"size":5254,"mtime":1662263800973,"results":"100","hashOfConfig":"63"},{"size":3251,"mtime":1662263800975,"results":"101","hashOfConfig":"63"},{"size":6226,"mtime":1662263800972,"results":"102","hashOfConfig":"63"},{"size":396,"mtime":1662263800986,"results":"103","hashOfConfig":"63"},{"size":2622,"mtime":1662263800984,"results":"104","hashOfConfig":"63"},{"size":1018,"mtime":1662263800987,"results":"105","hashOfConfig":"63"},{"size":5097,"mtime":1662263800975,"results":"106","hashOfConfig":"63"},{"size":425,"mtime":1662263800991,"results":"107","hashOfConfig":"63"},{"size":804,"mtime":1662263800985,"results":"108","hashOfConfig":"63"},{"size":910,"mtime":1662263800989,"results":"109","hashOfConfig":"63"},{"size":2911,"mtime":1662263800963,"results":"110","hashOfConfig":"63"},{"size":3482,"mtime":1662263800959,"results":"111","hashOfConfig":"63"},{"size":210,"mtime":1662263800990,"results":"112","hashOfConfig":"63"},{"size":5742,"mtime":1662263800960,"results":"113","hashOfConfig":"63"},{"size":1963,"mtime":1662263800992,"results":"114","hashOfConfig":"63"},{"size":1209,"mtime":1662263800991,"results":"115","hashOfConfig":"63"},{"size":2318,"mtime":1662263800992,"results":"116","hashOfConfig":"63"},{"size":218,"mtime":1662263800991,"results":"117","hashOfConfig":"63"},{"size":188,"mtime":1662263800990,"results":"118","hashOfConfig":"63"},{"size":1490,"mtime":1662263800969,"results":"119","hashOfConfig":"63"},{"size":1483,"mtime":1662263800959,"results":"120","hashOfConfig":"63"},{"size":805,"mtime":1662263800968,"results":"121","hashOfConfig":"63"},{"size":6100,"mtime":1662263800975,"results":"122","hashOfConfig":"63"},{"size":529,"mtime":1662263800978,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1c4e7s1",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"126"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"126"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"126"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"126"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"126"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"126"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"126"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"126"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"126"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"126"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"126"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"126"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"126"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"126"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\index.js",[],["284","285"],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\App.js",["286","287","288","289","290","291","292","293"],"import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"./component/layout/Header/Header.js\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport WebFont from \"webfontloader\";\r\nimport React from \"react\";\r\nimport Footer from \"./component/layout/Footer/Footer\";\r\nimport Home from \"./component/Home/Home\";\r\nimport ProductDetails from \"./component/Product/ProductDetails\";\r\nimport Products from \"./component/Product/Products\";\r\nimport Search from \"./component/Product/Search\";\r\nimport LoginSignUp from \"./component/User/LoginSignUp\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/userAction\";\r\nimport UserOptions from \"./component/layout/Header/UserOptions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Profile from \"./component/User/Profile\";\r\nimport ProtectedRoute from \"./component/Route/ProtectedRoute\";\r\nimport UpdateProfile from \"./component/User/UpdateProfile\";\r\nimport UpdatePassword from \"./component/User/UpdatePassword\";\r\nimport ForgotPassword from \"./component/User/ForgotPassword\";\r\nimport ResetPassword from \"./component/User/ResetPassword\";\r\nimport Cart from \"./component/Cart/Cart\";\r\nimport Shipping from \"./component/Cart/Shipping\";\r\nimport ConfirmOrder from \"./component/Cart/ConfirmOrder\";\r\nimport axios from \"axios\";\r\nimport Payment from \"./component/Cart/Payment\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport OrderSuccess from \"./component/Cart/OrderSuccess\";\r\nimport MyOrders from \"./component/Order/MyOrders\";\r\nimport OrderDetails from \"./component/Order/OrderDetails\";\r\nimport Dashboard from \"./component/Admin/Dashboard.js\";\r\nimport ProductList from \"./component/Admin/ProductList.js\";\r\nimport NewProduct from \"./component/Admin/NewProduct\";\r\nimport UpdateProduct from \"./component/Admin/UpdateProduct\";\r\nimport OrderList from \"./component/Admin/OrderList\";\r\nimport ProcessOrder from \"./component/Admin/ProcessOrder\";\r\nimport UsersList from \"./component/Admin/UsersList\";\r\nimport UpdateUser from \"./component/Admin/UpdateUser\";\r\nimport AddUser from \"./component/Admin/AddUser\";\r\nimport ProductReviews from \"./component/Admin/ProductReviews\";\r\nimport Contact from \"./component/layout/Contact/Contact\";\r\nimport About from \"./component/layout/About/About\";\r\nimport Helpuse from \"./component/layout/Helpuse/Helpuse\";\r\nimport NotFound from \"./component/layout/Not Found/NotFound\";\r\nimport Requestform from \"./component/User/Requestform\";\r\nimport Donate from \"./component/donate/Donate\";\r\nimport RequestFormReplica from \"./component/Cart/RequestFormReplica\";\r\nimport UserSuccess from \"./component/Admin/UserSuccess\";\r\n\r\nfunction App() {\r\n  const { isAuthenticated, user } = useSelector((state) => state.user);\r\n\r\n  // const [stripeApiKey, setStripeApiKey] = useState(\"\");\r\n\r\n  async function getStripeApiKey() {\r\n    const { data } = await axios.get(\"/api/v1/stripeapikey\");\r\n\r\n    // setStripeApiKey(data.stripeApiKey);\r\n  }\r\n\r\n  useEffect(() => {\r\n    WebFont.load({\r\n      google: {\r\n        families: [\"Roboto\", \"Droid Sans\", \"Chilanka\"],\r\n      },\r\n    });\r\n\r\n    store.dispatch(loadUser());\r\n\r\n    // getStripeApiKey();\r\n  }, []);\r\n\r\n  window.addEventListener(\"contextmenu\", (e) => e.preventDefault());\r\n\r\n  return (\r\n    <Router>\r\n      {isAuthenticated && <Header user={user} />}\r\n\r\n      {/* {isAuthenticated && <UserOptions user={user} />}\r\n      {isAuthenticated && <Header user={user} />} */}\r\n\r\n      {/* { (\r\n        <Elements stripe={loadStripe(stripeApiKey)}>\r\n          <ProtectedRoute exact path=\"/process/payment\" component={Payment} />\r\n        </Elements>\r\n      )} */}\r\n\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => {\r\n            return isAuthenticated ? (\r\n              <Redirect to=\"/home\" />\r\n            ) : (\r\n              <Redirect to=\"/login\" />\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Route exact path=\"/replica\" component={RequestFormReplica} />\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/requestform\" component={Requestform} />\r\n        <Route exact path=\"/donate\" component={Donate} />\r\n        <Route exact path=\"/product/:id\" component={ProductDetails} />\r\n        <Route exact path=\"/products\" component={Products} />\r\n        <Route exact path=\"/orders\" component={MyOrders} />\r\n        <Route path=\"/products/:keyword\" component={Products} />\r\n        <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/contact\" component={Contact} />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/helpuse\" component={Helpuse} />\r\n        <ProtectedRoute exact path=\"/account\" component={Profile} />\r\n        <ProtectedRoute exact path=\"/me/update\" component={UpdateProfile} />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/password/update\"\r\n          component={UpdatePassword}\r\n        />\r\n        <Route exact path=\"/password/forgot\" component={ForgotPassword} />\r\n        <Route exact path=\"/password/reset/:token\" component={ResetPassword} />\r\n        <Route exact path=\"/login\" component={LoginSignUp} />\r\n        <Route exact path=\"/cart\" component={Cart} />\r\n        {/* <Route\r\n          component={\r\n            window.location.pathname === \"/process/payment\" ? null : NotFound\r\n          }\r\n        />  */}\r\n        <ProtectedRoute exact path=\"/process/payment\" component={Payment} />\r\n        {/* <Route path=\"*\" component={NotFound} /> */}\r\n        <ProtectedRoute exact path=\"/shipping\" component={Shipping} />\r\n        <ProtectedRoute exact path=\"/success\" component={OrderSuccess} />\r\n        <ProtectedRoute exact path=\"/orders\" component={MyOrders} />\r\n        <ProtectedRoute exact path=\"/order/confirm\" component={ConfirmOrder} />\r\n        <ProtectedRoute exact path=\"/order/:id\" component={OrderDetails} />\r\n        <ProtectedRoute\r\n          isAdmin={true}\r\n          exact\r\n          path=\"/admin/dashboard\"\r\n          component={Dashboard}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/admin/products\"\r\n          isAdmin={true}\r\n          component={ProductList}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/admin/product\"\r\n          isAdmin={true}\r\n          component={NewProduct}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/admin/product/:id\"\r\n          isAdmin={true}\r\n          component={UpdateProduct}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/admin/orders\"\r\n          isAdmin={true}\r\n          component={OrderList}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/admin/order/:id\"\r\n          isAdmin={true}\r\n          component={ProcessOrder}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/admin/users\"\r\n          isAdmin={true}\r\n          component={UsersList}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/admin/user/:id\"\r\n          isAdmin={true}\r\n          component={UpdateUser}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/register\"\r\n          isAdmin={true}\r\n          component={AddUser}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/registersuccess\"\r\n          isAdmin={true}\r\n          component={UserSuccess}\r\n        />\r\n      </Switch>\r\n\r\n      {isAuthenticated && <Footer />}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\store.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\Dashboard.js",["294","295","296","297","298","299","300","301","302","303","304"],"import React, { useEffect } from \"react\";\r\nimport Sidebar from \"./Sidebar.js\";\r\nimport \"./dashboard.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Doughnut, Line } from \"react-chartjs-2\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAdminProduct } from \"../../actions/productAction\";\r\nimport { getAllOrders } from \"../../actions/orderAction.js\";\r\nimport { getAllUsers } from \"../../actions/userAction.js\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport lockerroomlogo from \"../../images/lockerroomlogo.PNG\";\r\n\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  const { orders } = useSelector((state) => state.allOrders);\r\n\r\n  const { users } = useSelector((state) => state.allUsers);\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  let outOfStock = 0;\r\n\r\n  let instock = 0;\r\n  let outstockincr = 0;\r\n  //console.log(products);\r\n  let stockarray = products.map((x) =>\r\n    x.ProductSize.map((y) => y.stock).sort((a, b) => a - b)\r\n  );\r\n  //console.log(stockarray);\r\n  stockarray.map((x) => {\r\n    if (x.includes('0')) {\r\n      outstockincr += 1;\r\n    }\r\n    //console.log(outstockincr);\r\n\r\n    // x.map((y) => {\r\n    //   if (y.includes(0)) {\r\n    //     ////console.log(x);\r\n    //     outstockincr += 1;\r\n\r\n    //   }\r\n    // }      )\r\n  });\r\n  // //console.log(\"out of stock list\", stockarray);\r\n  // //console.log(\"overall items out of stock is\", outstockincr);\r\n\r\n  // for(let i =0; i< 3; i++){\r\n  //   for (const [key, value] of Object.entries(products.ProductSize[0])) {\r\n  //     //console.log(`${key}: ${value}`);\r\n  //   }\r\n  //   }\r\n\r\n  // products &&\r\n  //   products.forEach((item) => {\r\n  //     if (item.Stock === 0) {\r\n  //       outOfStock += 1;\r\n  //     }\r\n  //   });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdminProduct());\r\n    dispatch(getAllOrders());\r\n    dispatch(getAllUsers());\r\n  }, [dispatch]);\r\n\r\n  let totalAmount = 0;\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      totalAmount += item.totalPrice;\r\n    });\r\n\r\n  const lineState = {\r\n    labels: [\"Initial Amount\", \"Amount Earned\"],\r\n    datasets: [\r\n      {\r\n        label: \"TOTAL AMOUNT\",\r\n        backgroundColor: [\"#065749\"],\r\n        hoverBackgroundColor: [\"rgb(197, 72, 49)\"],\r\n        data: [0, totalAmount],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const doughnutState = {\r\n    labels: [\"Out of Stock\", \"In Stock\"],\r\n    datasets: [\r\n      {\r\n        backgroundColor: [\"#d53f3f\", \"#7cd583\"],\r\n        hoverBackgroundColor: [\"#ad2626\", \"#60d66a\"],\r\n        data: [outstockincr, products.length - outstockincr],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <MetaData title=\"Dashboard - Admin Panel\" />\r\n      {/* <Sidebar /> */}\r\n\r\n      <div className=\"dashboardContainer\">\r\n        <Typography component=\"h1\">Inventory Management</Typography>\r\n\r\n        <div className=\"dashboardSummary\">\r\n          <div>\r\n            <p>\r\n              Summary <br />\r\n            </p>\r\n          </div>\r\n          <div className=\"dashboardSummaryBox2\">\r\n            {(user.role == \"admin\" || user.role == \"volunteer\") && (\r\n              <Link\r\n                to=\"/admin/orders\"\r\n                data-tip=\"Click Me\"\r\n                data-for=\"toolTip1\"\r\n                data-place=\"bottom\"\r\n                data-type=\"info\"\r\n              >\r\n                <p>Orders Received</p>\r\n                <p>{orders && orders.length}</p>\r\n\r\n                <ReactTooltip id=\"toolTip1\" />\r\n              </Link>\r\n            )}\r\n            {user.role == \"admin\" && (\r\n              <Link\r\n                to=\"/admin/products\"\r\n                data-tip=\"Click Me\"\r\n                data-for=\"toolTip2\"\r\n                data-place=\"bottom\"\r\n                data-type=\"info\"\r\n              >\r\n                <p>Item Availability</p>\r\n                <p>{products && products.length}</p>\r\n                <ReactTooltip id=\"toolTip2\" />\r\n              </Link>\r\n            )}\r\n            {user.role == \"admin\" && (\r\n              <Link\r\n                to=\"/admin/users\"\r\n                data-tip=\"Click Me\"\r\n                data-for=\"toolTip3\"\r\n                data-place=\"bottom\"\r\n                data-type=\"info\"\r\n              >\r\n                <p>Manage Users</p>\r\n                <p>{users && users.length}</p>\r\n                <ReactTooltip id=\"toolTip3\" />\r\n              </Link>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <p>\r\n              Stock Status <br />\r\n            </p>\r\n          </div>\r\n          <div className=\"doughnutChart\">\r\n            <Doughnut data={doughnutState} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"lineChart\">\r\n          <Line data={lineState} />\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\ProductList.js",["305","306","307","308","309"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./productList.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  getAdminProduct,\r\n  deleteProduct,\r\n} from \"../../actions/productAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { DELETE_PRODUCT_RESET } from \"../../constants/productConstants\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nconst ProductList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const { error, products } = useSelector((state) => state.products);\r\n\r\n  const { error: deleteError, isDeleted } = useSelector(\r\n    (state) => state.product\r\n  );\r\n\r\n  const deleteProductHandler = (id) => {\r\n    dispatch(deleteProduct(id));\r\n  };\r\n\r\n  const submit = (params) => {\r\n    confirmAlert({\r\n      title: 'Delete Item',\r\n      message: 'Are you sure you want to delete this item from inventory',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => deleteProductHandler(params.getValue(params.id, \"id\"))\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success(\"Product Deleted Successfully\");\r\n      history.push(\"/admin/dashboard\");\r\n      dispatch({ type: DELETE_PRODUCT_RESET });\r\n    }\r\n\r\n    dispatch(getAdminProduct());\r\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\r\n\r\n \r\n\r\n  const columns = [\r\n    // { field: \"id\", headerName: \"Product ID\", Width: 100, flex: 0.2 },\r\n\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      minWidth: 50,\r\n      flex: 0.1,\r\n    },\r\n    {\r\n      field: \"category\",\r\n      headerName: \"Category\",\r\n      minWidth: 70,\r\n      flex: 0.1,\r\n    },\r\n    {\r\n      field: \"subcategory\",\r\n      headerName: \"SubCategory\",\r\n      minWidth: 70,\r\n      flex: 0.1,\r\n    },\r\n    // {\r\n    //   field: \"size\",\r\n    //   headerName: \"Size\",\r\n    //   minWidth: 50,\r\n    //   flex: 0.1,\r\n    // },\r\n    {\r\n      field: \"stock\",\r\n      headerName: \"Stock\",\r\n      minWidth: 50,\r\n      flex: 0.1,\r\n      cellClassName: (params) => {\r\n        //console.log(\"params\",params);\r\n        return params.getValue(params.id, \"stock\") > 0\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"stockinfo\",\r\n      headerName: \"Stock Info\",\r\n      minWidth: 50,\r\n      flex: 0.1,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Fragment>\r\n            <div\r\n              data-tip={params.getValue(params.id, \"stockinfo\")}\r\n              data-for=\"toolTip1\"\r\n              data-place=\"bottom\"\r\n              data-type=\"success\"\r\n              data-multiline=\"true\"\r\n            >\r\n              <InfoIcon />\r\n            </div>\r\n            <ReactTooltip id=\"toolTip1\" />\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      minWidth: 50,\r\n      flex: 0.1,\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Fragment>\r\n            <Link to={`/admin/product/${params.getValue(params.id, \"id\")}`}>\r\n              {/* <EditIcon /> */}\r\n              <span>Edit</span>\r\n            </Link>\r\n\r\n            <Button\r\n              onClick={() =>\r\n                // deleteProductHandler(params.getValue(params.id, \"id\"))\r\n                submit(params)\r\n              }\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = [];\r\n  //const dummy = [];\r\n  // products.forEach((x) => {\r\n  //   dummy.push(x);\r\n  //console.log(products);\r\n  // });\r\n  //  dummy[0].ProductSize[0].map((x) => {\r\n  //console.log(products && products[0].ProductSize && products[0].ProductSize.map((x) => x.stock));\r\n  // for (let i = 0; i < products.length; i++) {\r\n  //   //console.log(products && products[i].ProductSize && products[i].ProductSize.map((x) => x.stock));\r\n  //   console.log(\r\n  //     products &&\r\n  //       products[i].ProductSize &&\r\n  //       products[i].ProductSize.reduce((prev, curr) =>\r\n  //          prev.stock < curr.stock ? prev.stock : curr.stock\r\n  //       )\r\n  //   );\r\n  // }\r\n  let hashmap = new Map();\r\n  let mapping = new Map();\r\n  // let obj = {};\r\n\r\n  // let stockarray = products.map((x) => {\r\n  //   let arr = [];\r\n  //   x.ProductSize.map((y) => {\r\n  //     obj.size = y.size;\r\n  //     obj.stock = y.stock;\r\n  //     arr.push(obj);\r\n  //   });\r\n  //   hashmap.set(x.SubCategory, arr);\r\n  //   mapping.set(x.name,   hashmap);\r\n  // });\r\n\r\n  let stockarray = products.map((x) => {\r\n    let arr = [];\r\n    x.ProductSize.map((y) => {\r\n      let obj = {};\r\n      obj.size = y.size;\r\n      obj.stock = y.stock;\r\n      arr.push(obj);\r\n    });\r\n    hashmap.set(x.SubCategory, arr);\r\n    mapping.set(x.name, hashmap);\r\n  });\r\n\r\n  //let hash1 = mapping.get(\"Sweat Shirts\");\r\n  //console.log(mapping);\r\n  //  for(let i=0; i<mapping.size; i++){\r\n  //   console.log(mapping.keys);\r\n  //  }\r\n\r\n  // console.log([...mapping].filter((values, keys) => {\r\n  //   values.forEach((k,v)=>k);\r\n  //   // if(keys === \"Sweat Shirts\"){\r\n  //   //   console.log(keys);\r\n  //   // }\r\n  // }));\r\n  // .map(([k]) => k)\r\n\r\n  // mapping.forEach((k) => {\r\n  //   if (k.get(\"Mens sizing\")) {\r\n  //     k.get(\"Mens sizing\").map((y) => console.log(y.size + \":\" + y.stock));\r\n  //   } else if (k.get(\"Womens sizing\")) {\r\n  //     k.get(\"Womens sizing\").map((y) => console.log(y.size + \":\" + y.stock));\r\n  //   } else if (k.get(\"Boys' sizing\")) {\r\n  //     k.get(\"Boys' sizing\").map((y) => console.log(y.size + \":\" + y.stock));\r\n  //   } else if (k.get(\"Girls' sizing\")) {\r\n  //     k.get(\"Girls' sizing\").map((y) => console.log(y.size + \":\" + y.stock));\r\n  //   } else {\r\n  //     k.get(\"Toddler' sizing\").map((y) => console.log(y.size + \":\" + y.stock));\r\n  //   }\r\n  // });\r\n\r\n  //Object.entries(hash1).forEach((k,v) => console.log(v));\r\n  // hash1.((x) => {\r\n  //   console.log(x);\r\n  //   if (k === \"Mens sizing\") {\r\n  //     console.log(v);\r\n  //   } else if (k === \"Womens sizing\") {\r\n  //     console.log(v);\r\n  //   } else if (k === \"Boys' sizing\") {\r\n  //     console.log(v);\r\n  //   } else if (k === \"Girls' sizing\") {\r\n  //     console.log(v);\r\n  //   } else {\r\n  //     console.log(v);\r\n  //   }\r\n  // });\r\n  // mapping.forEach((x) => {\r\n  //   console.log(x);\r\n  //   // if (x.name === \"sweat shirts\") {\r\n  //   //   console.log( x.get(\"Mens sizing\"));\r\n  //   // }\r\n  // });\r\n\r\n  // console.log(\"out of stock list\", map.get(\"Sweat Shirts\").map((x) => {\r\n  //   return x\r\n  // }));\r\n\r\n  //   });\r\n  //  dummy[0].ProductSize.reduce(function(prev, curr) {\r\n  //    console.log(prev.stock < curr.stock ? prev : curr);\r\n  //  });\r\n  //console.log(Object.keys(products.ProductSize[0]).sort((a,b) => (products.ProductSize[a] - products.ProductSize[b])));\r\n\r\n  // let array1 = [];\r\n  // products &&\r\n  // products.forEach((item) => {\r\n  //   console.log(item.name)\r\n  //   item.ProductSize.map((y) => {  (y.size +\":\" + y.stock)  })\r\n  // });\r\n\r\n  products &&\r\n    products.forEach((item) => {\r\n      //console.log(item);\r\n      rows.push({\r\n        id: item._id,\r\n        stock: item.ProductSize.map((y) => y.stock).sort((a, b) => a - b)[0],\r\n        // price: item.price,\r\n        stockinfo: (item.ProductSize.map((y) => {\r\n          let str =\"\";\r\n          str+=( \" \"+ y.size + \" : \" + y.stock + \" \" );\r\n          return  str;\r\n        })),\r\n        name: item.name,\r\n        size: item.Size,\r\n        category: item.category,\r\n        subcategory: item.SubCategory,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`ALL Items Available - Admin`} />\r\n\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"productListContainer\">\r\n          <h1 id=\"productListHeading\">ALL PRODUCTS</h1>\r\n\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"productListTable\"\r\n            autoHeight\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Header\\Header.js",["310","311","312","313","314","315","316","317","318","319","320","321"],"import { React, useState ,useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReactNavbar } from \"overlay-navbar\";\r\n// import logo from \"../../../images/dicks_logo.svg\";\r\nimport logo from \"../../../images/lockerroomlogo.PNG\";\r\nimport { logout } from \"../../../actions/userAction\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport Inventory2Icon from \"@mui/icons-material/Inventory2\";\r\nimport { lightGreen } from \"@mui/material/colors\";\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst Header = ({}) => {\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [anchorEl1, setAnchorEl1] = useState(null);\r\n  const open1 = Boolean(anchorEl1);\r\n  const handleClick1 = (event) => {\r\n    setAnchorEl1(event.currentTarget);\r\n  };\r\n  const handleClose1 = () => {\r\n    setAnchorEl1(null);\r\n  };\r\n\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n  const { user } = useSelector((state) => state.user);\r\n  // const role = user.role\r\n  // const cartlength =0;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n  const [cartCount, setcartCount] = useState(0);\r\n\r\n  async function logoutUser() {\r\n    dispatch(logout());\r\n    alert.success(\"Logout Successfully\");\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function account() {\r\n    history.push(\"/account\");\r\n  }\r\n  function helpuse() {\r\n    history.push(\"/helpuse\");\r\n  }\r\n\r\n\r\n  function home() {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function products() {\r\n    history.push(\"/products\");\r\n  }\r\n  function orders() {\r\n    history.push(\"/orders\");\r\n  }\r\n\r\n  function cart() {\r\n    history.push(\"/cart\");\r\n  }\r\n\r\n  function dashboard() {\r\n    history.push(\"/admin/dashboard\");\r\n  }\r\n\r\n  function adminorders() {\r\n    history.push(\"/admin/orders\");\r\n  }\r\n\r\n  function setProducts() {\r\n    history.push(\"/admin/products\");\r\n  }\r\n\r\n  function setProduct() {\r\n      history.push(\"/admin/product\");\r\n  }\r\n\r\n  function setUsers() {\r\n    history.push(\"/admin/users\");\r\n  }\r\n\r\n  function setUser() {\r\n      history.push(\"/register\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      {user && user.role === \"user\" && (\r\n        <li>\r\n          <HomeIcon className=\"icon\"/>\r\n          <Button onClick={home}>Home</Button>\r\n        </li>\r\n      )}\r\n\r\n        {user && user.role === \"admin\" && (\r\n          <li>\r\n            <DashboardIcon className=\"icon\"/>\r\n            <Button onClick={dashboard}>Dashboard</Button>\r\n          </li>\r\n      )}    \r\n\r\n      {/* <li>\r\n        <Inventory2Icon />\r\n        <Button onClick={products}>Products</Button>\r\n      </li> */}\r\n      {user && user.role === \"user\" && (\r\n        <li>\r\n          <ListAltIcon className=\"icon\"/>\r\n          <Button onClick={orders}>My Orders</Button>\r\n        </li>\r\n      )}\r\n       {user && user.role === \"admin\" && (\r\n        <li>\r\n          <ListAltIcon className=\"icon\"/>\r\n          <Button onClick={adminorders}>All Orders</Button>\r\n        </li>\r\n      )}\r\n      {user && user.role === \"user\" && (\r\n        <li>\r\n          <PersonIcon className=\"icon\"/>\r\n          <Button onClick={account}>My Account</Button>\r\n        </li>\r\n      )}\r\n       {user && (user.role === \"user\" || user.role === \"admin\" || user.role === \"volunteer\") && (\r\n        <li>\r\n          <HelpIcon className=\"icon\"/>\r\n          <Button onClick={helpuse}>How To Use</Button>\r\n        </li>\r\n      )}\r\n      {user && user.role === \"user\" && (\r\n        <li>\r\n          <ShoppingCartIcon className=\"icon\"/>\r\n          <Button onClick={cart}>My Cart ({cartItems.length})</Button>\r\n        </li>\r\n      )}\r\n      {user && user.role === \"admin\" && (\r\n        <li>\r\n          <AddIcon className=\"icon\"/>\r\n          {/* <select\r\n                onChange={(e) => {\r\n                  setProduct(e.target.value);\r\n                }}\r\n              >\r\n                <option value=''>PRODUCTS</option>\r\n                <option value='products'>Show All Products</option>\r\n                <option value='product'>Add Product</option>\r\n              </select> */}\r\n\r\n              <Button\r\n                  id=\"basic-button\"\r\n                  aria-controls={open ? 'basic-menu' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open ? 'true' : undefined}\r\n                  onClick={handleClick}\r\n                >\r\n                  PRODUCTS\r\n                </Button>\r\n                <Menu\r\n                  id=\"basic-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                  }}\r\n                >\r\n                  <MenuItem onClick={() => { handleClose(); setProducts();}}>Show All Products</MenuItem>\r\n                  <MenuItem onClick={() => { handleClose(); setProduct();}}>Add Product</MenuItem>\r\n                </Menu>\r\n        </li>\r\n      )}\r\n\r\n      {user && user.role === \"admin\" && (\r\n        <li>\r\n          <PeopleIcon className=\"icon\" />\r\n          {/* <select\r\n                onChange={(e) => {\r\n                  setUsers(e.target.value);\r\n                }}\r\n              >\r\n                <option value=''>USERS</option>\r\n                <option value='users'>Show All Users</option>\r\n                <option value='addUsers'>Add Users</option>\r\n              </select> */}\r\n\r\n              <Button\r\n                  id=\"basic-button1\"\r\n                  aria-controls={open1 ? 'basic-menu1' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open1 ? 'true' : undefined}\r\n                  onClick={handleClick1}\r\n                >\r\n                  USERS\r\n                </Button>\r\n                <Menu\r\n                  id=\"basic-menu1\"\r\n                  anchorEl={anchorEl1}\r\n                  open={open1}\r\n                  onClose={handleClose1}\r\n                  MenuListProps={{\r\n                    'aria-labelledby': 'basic-button1',\r\n                  }}\r\n                >\r\n                  <MenuItem onClick={() => { handleClose1(); setUsers();}}>Show All Users</MenuItem>\r\n                  <MenuItem onClick={() => { handleClose1(); setUser();}}>Add User</MenuItem>\r\n                </Menu>\r\n        </li>\r\n      )}\r\n\r\n      <li className=\"logoutli\">        <ExitToAppIcon className=\"icon\" />\r\n        <Button onClick={logoutUser}>Logout</Button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\OrderList.js",["322","323","324","325","326","327","328"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./productList.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SideBar from \"./Sidebar\";\r\nimport {\r\n  deleteOrder,\r\n  getAllOrders,\r\n  clearErrors,\r\n} from \"../../actions/orderAction\";\r\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\r\n\r\nconst OrderList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const { error, orders } = useSelector((state) => state.allOrders);\r\n\r\n  const { error: deleteError, isDeleted } = useSelector((state) => state.order);\r\n  const { order,  loading } = useSelector((state) => state.orderDetails);\r\n  const deleteOrderHandler = (id) => {\r\n    dispatch(deleteOrder(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success(\"Order Deleted Successfully\");\r\n      history.push(\"/admin/orders\");\r\n      dispatch({ type: DELETE_ORDER_RESET });\r\n    }\r\n\r\n    dispatch(getAllOrders());\r\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\r\n\r\n  const columns = [\r\n    { field: \"orderId\", headerName: \"Order ID\", minWidth: 60, flex: 0.1 },\r\n    {\r\n      field: \"orderfrom\",\r\n      headerName: \"Ordered By\",\r\n      type: \"string\",\r\n      minWidth: 50,\r\n      flex: 0.15,\r\n    },\r\n     {\r\n      field: \"studentId\",\r\n      headerName: \"Student Id\",\r\n      type: \"string\",\r\n      minWidth: 50,\r\n      flex: 0.1,\r\n    },\r\n    {\r\n      field: \"OrderDate\",\r\n      headerName: \"Order Date\",\r\n      type: \"string\",\r\n      minWidth: 50,\r\n      flex: 0.1,\r\n    },\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 50,\r\n      flex: 0.1,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Qty\",      \r\n      minWidth: 50,\r\n      flex: 0.1,\r\n    },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      minWidth: 60,  \r\n      flex: 0.1,\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Fragment>\r\n            <Link to={`/admin/order/${params.getValue(params.id, \"id\")}`}>\r\n              {/* <EditIcon /> */}\r\n              <span>View Order</span>\r\n            </Link>\r\n\r\n            {/* <Button\r\n              onClick={() =>\r\n                deleteOrderHandler(params.getValue(params.id, \"id\"))\r\n              }\r\n            >\r\n              <DeleteIcon />\r\n            </Button> */}\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      //console.log(item);\r\n      rows.push({\r\n        id: item._id,\r\n        orderId: item.orderId,\r\n        itemsQty: item.orderItems.length,\r\n        amount: item.totalPrice,\r\n        OrderDate: item.shippingInfo.orderDate,\r\n        status: item.orderStatus,\r\n        studentId: item.shippingInfo.receivingPersonName,\r\n        orderfrom: item.shippingInfo.userName       \r\n         \r\n      });\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`ALL ORDERS - Admin`} />\r\n\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"productListContainer\">\r\n          <h1 id=\"productListHeading\">ALL ORDERS RECEIVED</h1>\r\n\r\n          <DataGrid\r\n           initialState={{\r\n            sorting: {\r\n              sortModel: [\r\n                {\r\n                  field: 'OrderDate',\r\n                  sort: 'desc',\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"productListTable\"\r\n            autoHeight\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\NewProduct.js",["329","330","331","332","333","334","335","336","337"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./newProduct.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearErrors, createProduct } from \"../../actions/productAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { NEW_PRODUCT_RESET } from \"../../constants/productConstants\";\r\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\r\nimport HeightIcon from \"@mui/icons-material/Height\";\r\n\r\nconst NewProduct = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, success } = useSelector((state) => state.newProduct);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  // const [price, setPrice] = useState(0);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [SubCategory, setSubCategory] = useState(\"\");\r\n  const [inputList, setInputList] = useState([{size:\"\",stock:\"\" }]);\r\n  const [Stock, setStock] = useState(0);\r\n  const [images, setImages] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n  const categories = [\"FootWears\", \"Clothing\", \"Sports\", \"Miscellaneous\"];\r\n  // const [inputList, setInputList] = useState([{ firstName: \"\", lastName: \"\" }])\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n    console.log([...inputList]);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = index => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { size: \"\", stock: \"\" }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(\"Product Created Successfully\");\r\n      history.push(\"/admin/dashboard\");\r\n      dispatch({ type: NEW_PRODUCT_RESET });\r\n    }\r\n  }, [dispatch, alert, error, history, success]);\r\n\r\n  const createProductSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    var obj = new Object();\r\n    obj.name = name;\r\n    obj.category  = category;\r\n    obj.SubCategory = SubCategory;\r\n    obj.ProductSize = inputList;\r\n    // obj.images = images;\r\n    var jsonString= obj;\r\n    debugger\r\n\r\n    // const myForm = new FormData();\r\n    // myForm.set(\"name\", name);\r\n    // myForm.set(\"category\", category);\r\n    // myForm.set(\"SubCategory\", SubCategory);\r\n    // myForm.set(\"ProductSize\", JSON.stringify(inputList));\r\n    // myForm.set(\"Stock\", Stock);\r\n    //for(const v of Object.values(JSON.stringify(inputList))){\r\n      // inputList.forEach(x =>{\r\n      //   myForm.append(\"ProductSize\", JSON.stringify(x));\r\n      // })\r\n    //}\r\n\r\n       \r\n\r\n    // images.forEach((image) => {\r\n    //   myForm.append(\"images\", image);\r\n    // });\r\n    dispatch(createProduct(jsonString));\r\n  };\r\n\r\n  const createProductImagesChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n\r\n    setImages([]);\r\n    setImagesPreview([]);\r\n\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImagesPreview((old) => [...old, reader.result]);\r\n          setImages((old) => [...old, reader.result]);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Create Product\" />\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"newProductContainer\">\r\n          <form\r\n            className=\"createProductForm\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={createProductSubmitHandler}\r\n          >\r\n            <h1>Create New Item</h1>\r\n            <div>\r\n              <SpellcheckIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Product Name\"\r\n                required\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <AccountTreeIcon />\r\n              <select onChange={(e) => setCategory(e.target.value)}>\r\n                <option value=\"\">Choose Category</option>\r\n                {categories.map((cate) => (\r\n                  <option key={cate} value={cate}>\r\n                    {cate}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <FilterAltIcon />\r\n              {/* <input\r\n                type=\"text\"\r\n                placeholder=\"SubCategory\"\r\n                required\r\n                onChange={(e) => setSubCategory(e.target.value)}\r\n              /> */}\r\n              <select\r\n                name=\"category\"\r\n                id=\"category\"\r\n                onChange={(e) => {\r\n                  setSubCategory(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"SelectCategory\">Select SubCategory</option>\r\n                <option value=\"Men's sizing\">Mens sizing</option>\r\n                <option value=\"women's sizing\">Womens sizing</option>\r\n                <option value=\"Boy's sizing\">Boys' sizing</option>\r\n                <option value=\"Girl's sizing\">Girls' sizing</option>\r\n                <option value=\"Toddlers sizing\">Toddlers sizing</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* <div>\r\n              <HeightIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Size\"\r\n                required\r\n                onChange={(e) => setProductSize(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <StorageIcon />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Stock\"\r\n                required\r\n                onChange={(e) => setStock(e.target.value)}\r\n              />\r\n            </div> */}\r\n            <div className=\"sizestock\">\r\n              {inputList.map((x, i) => {\r\n                return (\r\n                  <div className=\"box\">\r\n                    <input\r\n                      name=\"size\"\r\n                      placeholder=\"size\"\r\n                      value={x.size}\r\n                      onChange={(e) => handleInputChange(e, i)}\r\n                    />\r\n                    <input\r\n                      className=\"ml10\"\r\n                      name=\"stock\"\r\n                      placeholder=\"stock qty\"\r\n                      value={x.stock}\r\n                      onChange={(e) => handleInputChange(e, i)}\r\n                    />\r\n                    <div className=\"btn-box\">\r\n                      {inputList.length !== 1 && (\r\n                        <button\r\n                          className=\"mr10\"\r\n                          onClick={() => handleRemoveClick(i)}\r\n                        >\r\n                          -\r\n                        </button>\r\n                      )}\r\n                      {inputList.length - 1 === i && (\r\n                        <button onClick={handleAddClick}>+</button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\r\n            </div>\r\n            <div id=\"createProductFormFile\">\r\n              <input\r\n                type=\"file\"\r\n                name=\"avatar\"\r\n                accept=\"image/*\"\r\n                onChange={createProductImagesChange}\r\n                multiple\r\n              />\r\n            </div>\r\n\r\n            <div id=\"createProductFormImage\">\r\n              {imagesPreview.map((image, index) => (\r\n                <img key={index} src={image} alt=\"Product Preview\" />\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              id=\"createProductBtn\"\r\n              type=\"submit\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Create\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewProduct;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\UsersList.js",["338","339"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./productList.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { getAllUsers, clearErrors, deleteUser } from \"../../actions/userAction\";\r\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\r\n\r\nconst UsersList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const { error, users } = useSelector((state) => state.allUsers);\r\n\r\n  const {\r\n    error: deleteError,\r\n    isDeleted,\r\n    message,\r\n  } = useSelector((state) => state.profile);\r\n\r\n  const deleteUserHandler = (id) => {\r\n    dispatch(deleteUser(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success(message);\r\n      history.push(\"/admin/users\");\r\n      dispatch({ type: DELETE_USER_RESET });\r\n    }\r\n\r\n    dispatch(getAllUsers());\r\n  }, [dispatch, alert, error, deleteError, history, isDeleted, message]);\r\n\r\n  const columns = [\r\n    //{ field: \"id\", headerName: \"User ID\", minWidth: 180, flex: 0.8 },\r\n\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Login ID\",\r\n      minWidth: 200,\r\n      flex: 0.1,\r\n    },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      minWidth: 150,\r\n      flex: 0.1,\r\n    },\r\n\r\n    {\r\n      field: \"role\",\r\n      headerName: \"Role\",\r\n      type: \"number\",\r\n      minWidth: 150,\r\n      flex: 0.1,\r\n      cellClassName: (params) => {\r\n        return ( params.getValue(params.id, \"role\") === \"admin\" ? \"greenColor\" : \"\" ) || \r\n        (params.getValue(params.id, \"role\") === \"user\" ? \"redColor\" : \"\") || \r\n        (params.getValue(params.id, \"role\") === \"volunteer\" ? \"blueColor\" : \"\");\r\n      },\r\n    },\r\n\r\n    {\r\n      field: \"actions\",\r\n      flex: 0.1,\r\n      headerName: \"Actions\",\r\n      minWidth: 150,\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Fragment>\r\n            <Link to={`/admin/user/${params.getValue(params.id, \"id\")}`}>\r\n              {/* <EditIcon /> */}\r\n              <span>Edit</span>\r\n            </Link>\r\n\r\n            <Button\r\n              onClick={() =>\r\n                deleteUserHandler(params.getValue(params.id, \"id\"))\r\n              }\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = [];\r\n\r\n  users &&\r\n    users.forEach((item) => {\r\n      rows.push({\r\n        id: item._id,\r\n        role: item.role,\r\n        email: item.email,\r\n        name: item.name,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`ALL USERS - Admin`} />\r\n\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"productListContainer\">\r\n          <h1 id=\"productListHeading\">ALL USERS</h1>\r\n\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"productListTable\"\r\n            autoHeight\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\UpdateUser.js",["340"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\r\nimport {\r\n  getUserDetails,\r\n  updateUser,\r\n  clearErrors,\r\n} from \"../../actions/userAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\n\r\nconst UpdateUser = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails);\r\n\r\n  const {\r\n    loading: updateLoading,\r\n    error: updateError,\r\n    isUpdated,\r\n  } = useSelector((state) => state.profile);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const userId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    if (user && user._id !== userId) {\r\n      dispatch(getUserDetails(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setRole(user.role);\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"User Updated Successfully\");\r\n      history.push(\"/admin/users\");\r\n      dispatch({ type: UPDATE_USER_RESET });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated, updateError, user, userId]);\r\n\r\n  const updateUserSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"email\", email);\r\n    myForm.set(\"role\", role);\r\n\r\n    dispatch(updateUser(userId, myForm));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Update User\" />\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"newProductContainer\">\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <form\r\n              className=\"createProductForm\"\r\n              onSubmit={updateUserSubmitHandler}\r\n            >\r\n              <h1>Update User</h1>\r\n\r\n              <div>\r\n                <PersonIcon />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  required\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <MailOutlineIcon />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <VerifiedUserIcon />\r\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                  <option value=\"\">Choose Role</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                  <option value=\"user\">User</option>\r\n                </select>\r\n              </div>\r\n\r\n              <Button\r\n                id=\"createProductBtn\"\r\n                type=\"submit\"\r\n                disabled={\r\n                  updateLoading ? true : false || role === \"\" ? true : false\r\n                }\r\n              >\r\n                Update\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateUser;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\UpdateProduct.js",["341","342","343","344"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  updateProduct,\r\n  getProductDetails,\r\n} from \"../../actions/productAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport SideBar from \"./Sidebar\";\r\nimport { UPDATE_PRODUCT_RESET } from \"../../constants/productConstants\";\r\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\r\nimport HeightIcon from \"@mui/icons-material/Height\";\r\n\r\nconst UpdateProduct = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { error, product } = useSelector((state) => state.productDetails);\r\n\r\n  const {\r\n    loading,\r\n    error: updateError,\r\n    isUpdated,\r\n  } = useSelector((state) => state.product);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  // const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [SubCategory, setSubCategory] = useState(\"\");\r\n  const [ProductSize, setProductSize] = useState(\"\");\r\n  const [Stock, setStock] = useState(0);\r\n  const [images, setImages] = useState([]);\r\n  const [oldImages, setOldImages] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n  const categories = [\"FootWears\", \"Clothing\", \"Sports\", \"Miscellaneous\"];\r\n\r\n  const productId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    //console.log((product.ProductSize).length);\r\n    //for(let i =0; i< 3; i++){\r\n    // for (const [key, value] of Object.entries(product.ProductSize[0])) {\r\n    //   console.log(`${key}: ${value}`);\r\n    // }\r\n    //}\r\n    console.log(\"enter\");\r\n    if (product && product._id !== productId) {\r\n      console.log(\"entering getProductDetails\");\r\n      dispatch(getProductDetails(productId));\r\n    } else {\r\n      // console.log(\r\n      //   \"length\",\r\n      //   product.ProductSize.indexOf((x) => {\r\n      //     x.size == product.ProductSize.size;\r\n      //   })\r\n      // );\r\n      setName(product.name);\r\n      setDescription(product.description);\r\n      // setPrice(product.price);\r\n      setCategory(product.category);\r\n      setSubCategory(product.SubCategory);\r\n      // setProductSize(product.ProductSize[0].size);\r\n      // setProductSize(product.ProductSize[0].size);\r\n      // setStock(product.ProductSize[0].stock);\r\n      setOldImages(product.images);\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"Product Updated Successfully\");\r\n      history.push(\"/admin/products\");\r\n      dispatch({ type: UPDATE_PRODUCT_RESET });\r\n    }\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    history,\r\n    isUpdated,\r\n    productId,\r\n    product,\r\n    updateError,\r\n  ]);\r\n\r\n  const updateProductSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"description\", description);\r\n    myForm.set(\"category\", category);\r\n    myForm.set(\"SubCategory\", SubCategory);\r\n    myForm.set(\"ProductSize\", [ProductSize]);\r\n    myForm.set(\"Stock\", Stock);\r\n\r\n    images.forEach((image) => {\r\n      myForm.append(\"images\", image);\r\n    });\r\n    dispatch(updateProduct(productId, myForm));\r\n  };\r\n\r\n  const handlesizeChange = (e) => {\r\n   \r\n    // console.log(e.target.options.selectedIndex);    \r\n    // //console.log(\"obj\",e.target[e.target.selectedIndex].key );\r\n    // console.log((product.ProductSize[(e.target.options.selectedIndex)-1]).size);\r\n    \r\n    //console.log(\"selectedIndex\",selectedIndex);\r\n    //console.log(e.target.options[selectedIndex].datasets.key);\r\n    // for (let node of e.target.children) {\r\n    //   if (node.value === e.target.value) {\r\n    //     console.log(node);\r\n    //     // this.setState({\r\n    //     //   selected: node.getAttribute('data-id')\r\n    //     // });\r\n    //   }\r\n    // }\r\n    setProductSize((product.ProductSize[(e.target.options.selectedIndex)-1]).size);\r\n    setStock(e.target.value);\r\n  };\r\n\r\n  const updateProductImagesChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setImages([]);\r\n    setImagesPreview([]);\r\n    setOldImages([]);\r\n\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImagesPreview((old) => [...old, reader.result]);\r\n          setImages((old) => [...old, reader.result]);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Create Product\" />\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"newProductContainer\">\r\n          <form\r\n            className=\"createProductForm\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={updateProductSubmitHandler}\r\n          >\r\n            <h1>Update Product</h1>\r\n\r\n            <div>\r\n              <SpellcheckIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Product Name\"\r\n                required\r\n                disabled\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            {/* <div>\r\n              <DescriptionIcon />\r\n              <textarea\r\n                placeholder=\"Product Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                cols=\"30\"\r\n                rows=\"1\"\r\n              ></textarea>\r\n            </div> */}\r\n\r\n            <div>\r\n              <AccountTreeIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Category\"\r\n                required\r\n                disabled\r\n                value = {product.category}\r\n                // onChange={(e) => setSubCategory(e.target.value)}\r\n              />\r\n              {/* <select\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                <option value=\"\">Choose Category</option>\r\n                {categories.map((cate) => (\r\n                  <option key={cate} value={cate}>\r\n                    {cate}\r\n                  </option>\r\n                ))}\r\n              </select> */}\r\n            </div>\r\n            <div>\r\n              <FilterAltIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"SubCategory\"\r\n                required\r\n                disabled\r\n                value = {product.SubCategory}\r\n                // onChange={(e) => setSubCategory(e.target.value)}\r\n              />\r\n              {/* <select\r\n                name=\"category\"\r\n                id=\"category\"\r\n                onChange={(e) => {\r\n                  setSubCategory(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"SelectCategory\">Select SubCategory</option>\r\n                <option value=\"Mens sizing\">Mens sizing</option>\r\n                <option value=\"Womens sizing\">Womens sizing</option>\r\n                <option value=\"Boys' sizing\">Boys' sizing</option>\r\n                <option value=\"Girls' sizing\">Girls' sizing</option>\r\n                <option value=\"Toddlers sizing\">Toddlers sizing</option>\r\n              </select> */}\r\n            </div>\r\n\r\n            <div>\r\n              <HeightIcon />\r\n              {/* <input\r\n                type=\"text\"\r\n                placeholder=\"Size\"\r\n                required\r\n                onChange={(e) => setSize(e.target.value)}\r\n              /> */}\r\n              {/* <h1>{JSON.stringify(product.ProductSize)}</h1> */}\r\n              {product && product.ProductSize && (\r\n                <select\r\n                  name=\"size\"\r\n                  id=\"size\"\r\n                  onChange={(e) => {\r\n                    handlesizeChange(e);\r\n                  }}\r\n                >\r\n                  <option value=\"selectsize\">Select Size</option>\r\n                  {/* {Object.keys(product.ProductSize).forEach((x) => {\r\n                    console.log(\r\n                      product.ProductSize[x].size,\r\n                      product.ProductSize[x].stock\r\n                    );\r\n                    <option\r\n                      key={product.ProductSize[x].size}\r\n                      value={product.ProductSize[x].stock}\r\n                    >\r\n                      {product.ProductSize[x].size}\r\n                    </option>;\r\n                  })} */}\r\n                  {product.ProductSize.map((item, index) => (\r\n                    <option key={item.size} value={item.stock}>\r\n                      {item.size}\r\n                    </option>\r\n                  ))}\r\n\r\n                  {/* {                    \r\n                  [...Object.entries(product.ProductSize[0])].map((k, v) => {\r\n                    return <option key={k[1]} value={v[1]}>{k}</option>;\r\n                  })} */}\r\n                </select>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <StorageIcon />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Stock\"\r\n                required\r\n                onChange={(e) => setStock(e.target.value)}\r\n                value={Stock}\r\n              />\r\n            </div>\r\n\r\n            <div id=\"createProductFormFile\">\r\n              <input\r\n                type=\"file\"\r\n                name=\"avatar\"\r\n                accept=\"image/*\"\r\n                onChange={updateProductImagesChange}\r\n                multiple\r\n              />\r\n            </div>\r\n\r\n            <div id=\"createProductFormImage\">\r\n              {oldImages &&\r\n                oldImages.map((image, index) => (\r\n                  <img key={index} src={image.url} alt=\"Old Product Preview\" />\r\n                ))}\r\n            </div>\r\n\r\n            <div id=\"createProductFormImage\">\r\n              {imagesPreview.map((image, index) => (\r\n                <img key={index} src={image} alt=\"Product Preview\" />\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              id=\"createProductBtn\"\r\n              type=\"submit\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update Item\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\ProductReviews.js",["345"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./productReviews.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  getAllReviews,\r\n  deleteReviews,\r\n} from \"../../actions/productAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Star from \"@material-ui/icons/Star\";\r\n\r\nimport SideBar from \"./Sidebar\";\r\nimport { DELETE_REVIEW_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductReviews = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const { error: deleteError, isDeleted } = useSelector(\r\n    (state) => state.review\r\n  );\r\n\r\n  const { error, reviews, loading } = useSelector(\r\n    (state) => state.productReviews\r\n  );\r\n\r\n  const [productId, setProductId] = useState(\"\");\r\n\r\n  const deleteReviewHandler = (reviewId) => {\r\n    dispatch(deleteReviews(reviewId, productId));\r\n  };\r\n\r\n  const productReviewsSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getAllReviews(productId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (productId.length === 24) {\r\n      dispatch(getAllReviews(productId));\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success(\"Review Deleted Successfully\");\r\n      history.push(\"/admin/reviews\");\r\n      dispatch({ type: DELETE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, alert, error, deleteError, history, isDeleted, productId]);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Review ID\", minWidth: 200, flex: 0.5 },\r\n\r\n    {\r\n      field: \"user\",\r\n      headerName: \"User\",\r\n      minWidth: 200,\r\n      flex: 0.6,\r\n    },\r\n\r\n    {\r\n      field: \"comment\",\r\n      headerName: \"Comment\",\r\n      minWidth: 350,\r\n      flex: 1,\r\n    },\r\n\r\n    {\r\n      field: \"rating\",\r\n      headerName: \"Rating\",\r\n      type: \"number\",\r\n      minWidth: 180,\r\n      flex: 0.4,\r\n\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"rating\") >= 3\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n\r\n    {\r\n      field: \"actions\",\r\n      flex: 0.3,\r\n      headerName: \"Actions\",\r\n      minWidth: 150,\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Fragment>\r\n            <Button\r\n              onClick={() =>\r\n                deleteReviewHandler(params.getValue(params.id, \"id\"))\r\n              }\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = [];\r\n\r\n  reviews &&\r\n    reviews.forEach((item) => {\r\n      rows.push({\r\n        id: item._id,\r\n        rating: item.rating,\r\n        comment: item.comment,\r\n        user: item.name,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`ALL REVIEWS - Admin`} />\r\n\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"productReviewsContainer\">\r\n          <form\r\n            className=\"productReviewsForm\"\r\n            onSubmit={productReviewsSubmitHandler}\r\n          >\r\n            <h1 className=\"productReviewsFormHeading\">ALL REVIEWS</h1>\r\n\r\n            <div>\r\n              <Star />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Product Id\"\r\n                required\r\n                value={productId}\r\n                onChange={(e) => setProductId(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              id=\"createProductBtn\"\r\n              type=\"submit\"\r\n              disabled={\r\n                loading ? true : false || productId === \"\" ? true : false\r\n              }\r\n            >\r\n              Search\r\n            </Button>\r\n          </form>\r\n\r\n          {reviews && reviews.length > 0 ? (\r\n            <DataGrid\r\n              rows={rows}\r\n              columns={columns}\r\n              pageSize={10}\r\n              disableSelectionOnClick\r\n              className=\"productListTable\"\r\n              autoHeight\r\n            />\r\n          ) : (\r\n            <h1 className=\"productReviewsFormHeading\">No Reviews Found</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductReviews;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\ProcessOrder.js",["346","347","348","349","350"],"import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport SideBar from \"./Sidebar\";\r\nimport {\r\n  getOrderDetails,\r\n  clearErrors,\r\n  updateOrder,\r\n} from \"../../actions/orderAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { UPDATE_ORDER_RESET } from \"../../constants/orderConstants\";\r\nimport \"./processOrder.css\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport PrintIcon from \"@mui/icons-material/Print\";\r\n\r\nimport { submitHandler } from \"../Cart/Payment\"\r\n\r\nconst ProcessOrder = ({ history, match }) => {\r\n  const { order, error, loading } = useSelector((state) => state.orderDetails);\r\n  const { error: updateError, isUpdated } = useSelector((state) => state.order);\r\n  const { shippingInfo } = useSelector((state) => state.cart);\r\n  const [status, setStatus] = useState(\"null\");\r\n  const componentRef = useRef();\r\n  const updateOrderSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"status\", status);\r\n    //console.log(\"select status\",status);\r\n\r\n    dispatch(updateOrder(match.params.id, myForm));\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  useEffect(() => {\r\n    ////console.log(order);\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (isUpdated) {\r\n      alert.success(\"Order Updated Successfully\");\r\n      dispatch({ type: UPDATE_ORDER_RESET });\r\n    }\r\n    //console.log(\"before dispatch\");\r\n    //console.log(\"select status\",status)\r\n    dispatch(getOrderDetails(match.params.id));\r\n  }, [dispatch, alert, error, match.params.id, isUpdated, updateError]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Process Order\" />\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"newProductContainer\">\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <div\r\n              className=\"confirmOrderPage\"\r\n              style={{\r\n                display: order.orderStatus === \"Delivered\" ? \"grid\" : \"grid\" ,\r\n              }}\r\n            >\r\n              <div ref={componentRef}>\r\n                <div className=\"confirmshippingArea\">\r\n                  <Typography>Shipping Info</Typography>\r\n                  <div className=\"orderDetailsContainerBox\">\r\n                    <div>\r\n                      <p>Order Placed by:</p>\r\n                      <span>{order.user && order.user.name}</span>\r\n                      {/* <hr></hr> */}\r\n                      <span>&nbsp;</span>\r\n                      <p>Designation:</p>\r\n                      <span>\r\n                        {order.user &&\r\n                          order.shippingInfo.userLoggedInDesignation}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <p>Deliver To Student Id:</p>\r\n                      <span>\r\n                        {order.user && order.shippingInfo.receivingPersonName}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <p>Order Date:</p>\r\n                      <span>{order.user && order.shippingInfo.orderDate}</span>\r\n                    </div>\r\n                    <div>\r\n                      <p>Phone:</p>\r\n                      <span>\r\n                        {order.shippingInfo && order.shippingInfo.phoneNo}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <p>Address:</p>\r\n                      <span>\r\n                        {order.shippingInfo && order.shippingInfo.userAddress }\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <p>Additional Comments:</p>\r\n                      <span>\r\n                        {order.shippingInfo &&\r\n                          `${order.shippingInfo.additionalComments}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <Typography>Order Status</Typography>\r\n                  <div className=\"orderDetailsContainerBox\">\r\n                    <div>\r\n                      <p\r\n                        className={\r\n                          order.orderStatus && order.orderStatus === \"Delivered\"\r\n                            ? \"greenColor\"\r\n                            : \"redColor\"\r\n                        }\r\n                      >\r\n                        {order.orderStatus && order.orderStatus}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"confirmCartItems\">\r\n                  <Typography>Your Cart Items:</Typography>\r\n                  <div className=\"confirmCartItemsContainer\">\r\n                    {order.orderItems &&\r\n                      order.orderItems.map((item) => (\r\n                        <div className=\"cartitemholder\" key={item.product}>\r\n                          <div className=\"cartitemholderimage\">\r\n                            <img src={item.image} alt=\"Product\" />\r\n                          </div>\r\n                          <div className=\"cartitemholdername\">\r\n                            <span>{item.name}</span>\r\n                          </div>\r\n                          <div className=\"cartitemholdercat\">\r\n                            <span>Subcategory({item.SubCategory})</span>\r\n                          </div>\r\n                          <div className=\"cartitemholdersize\">\r\n                            <span>Size({item.ProductSize.split(\",\", 1)})</span>\r\n                          </div>\r\n                          <div className=\"cartitemholderquantity\">\r\n                            <span>Quantity({item.quantity})</span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"printComponent\">\r\n                  <ReactToPrint\r\n                    trigger={() => <PrintIcon className=\"PrintIcon\" />}\r\n                    content={() => componentRef.current}\r\n                  />{\" \"}\r\n                  <p>\r\n                    <span>Print</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <div\r\n                style={{\r\n                  display: order.orderStatus === \"Delivered\" ? \"block\" : \"block\",\r\n                }}\r\n              >\r\n                <form\r\n                  className=\"updateOrderForm\"\r\n                  onSubmit={updateOrderSubmitHandler}\r\n                >\r\n                  <h1>Process Order</h1>\r\n\r\n                  <div>\r\n                    <AccountTreeIcon />\r\n                    <select onChange={(e) => setStatus(e.target.value)}>\r\n                      <option value=\"null\">Choose Category</option>\r\n                      {order.orderStatus === \"Processing\" && (\r\n                        <option value=\"picked\">Pick Completed</option>\r\n                      )}\r\n\r\n                      {order.orderStatus === \"picked\" && (\r\n                        <option value=\"Delivered\">Delivered</option>\r\n                      )}\r\n\r\n                      {order.orderStatus === \"Processing\" && (\r\n                        <option value=\"PickedDelivered\">Picked and Delivered</option>\r\n                      )}  \r\n\r\n                      {order.orderStatus === \"Delivered\" && (\r\n                        <option value=\"revertpicked\">Revert to Picked</option>\r\n                      )}  \r\n\r\n                      {order.orderStatus === \"Delivered\" && (\r\n                        <option value=\"Processing\">Revert to Processing</option>\r\n                      )}  \r\n\r\n                      {order.orderStatus === \"picked\" && (\r\n                        <option value=\"Processing\">Revert to Processing</option>\r\n                      )}  \r\n                    </select>\r\n                  </div>\r\n\r\n                  <Button\r\n                    id=\"createProductBtn\"\r\n                    type=\"submit\"\r\n                    disabled={\r\n                       loading ? true : false ||  status == \"null\" ? true : false\r\n                    }\r\n                  >\r\n                    Process\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProcessOrder;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\UserSuccess.js",["351","352","353"],"import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport \"./userSuccess.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst UserSuccess = () => {\r\n\r\n  \r\n  const history = useHistory();\r\n\r\n  async function displayUsers() {\r\n\r\n    \r\n\r\n    //console.log(data.orders[data.orders.length-1]._id);\r\n    history.push('/admin/users');       \r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"orderSuccess\">\r\n      <CheckCircleIcon />\r\n      <Typography>The User has been added successfully </Typography>\r\n      <Button onClick={displayUsers}>Display All Users</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSuccess;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\AddUser.js",["354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ApartmentIcon from '@mui/icons-material/Apartment';\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport SideBar from \"./Sidebar\";\r\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  register,\r\n  updateUser,\r\n  clearErrors,\r\n} from \"../../actions/userAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\n\r\nconst AddUser = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails);\r\n\r\n\r\n  const [userinfo, setUserinfo] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const {\r\n    loading: updateLoading,\r\n    error: updateError,\r\n    isUpdated,\r\n  } = useSelector((state) => state.profile);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [avatar, setAvatar] = useState(\"/Profile.png\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\r\n\r\n\r\n  const updateUserSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"email\", email);\r\n    myForm.set(\"password\", password);\r\n    myForm.set(\"avatar\", avatar);\r\n    myForm.set(\"role\", role);\r\n    console.log(role);\r\n    myForm.set(\"address\", address);\r\n    dispatch(register(myForm));\r\n    history.push('/registersuccess');\r\n    \r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Add User\" />\r\n      <div className=\"dashboard\">\r\n        {/* <SideBar /> */}\r\n        <div className=\"newProductContainer\">\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <form\r\n              className=\"createProductForm\"\r\n              onSubmit={updateUserSubmitHandler}\r\n            >\r\n              <h1>Add User</h1>\r\n\r\n              <div >\r\n                  <PersonIcon />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"School Name\"\r\n                    required\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div >\r\n                  <MailOutlineIcon />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Login ID\"\r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n              <div>\r\n                  <LockOpenIcon />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n              <div>\r\n                <HomeIcon />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Address\"\r\n                  value={address}\r\n                  required\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                  < ImageIcon />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    accept=\"image/*\"\r\n                    onChange={(e) => setAvatar(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n              <div>\r\n                <VerifiedUserIcon />\r\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                  <option value=\"\">Choose Role</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                  <option value=\"volunteer\">Volunteer</option>\r\n                  <option value=\"user\">User</option>\r\n                </select>\r\n              </div>\r\n\r\n              <Button\r\n                id=\"createProductBtn\"\r\n                type=\"submit\"\r\n              >\r\n                Add User\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Header\\UserOptions.js",["370","371","372","373"],"import React, { Fragment, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { SpeedDial, SpeedDialAction } from \"@material-ui/lab\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { logout } from \"../../../actions/userAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nconst UserOptions = ({ user }) => {\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const options = [\r\n    { icon: <ListAltIcon />, name: \"My Orders\", func: orders },\r\n    { icon: <PersonIcon />, name: \"Profile\", func: account },\r\n    {\r\n      icon: (\r\n        <ShoppingCartIcon\r\n          style={{ color: cartItems.length > 0 ? \"#065749\" : \"unset\" }}\r\n        />\r\n      ),\r\n      name: `Cart(${cartItems.length})`,\r\n      func: cart,\r\n    },\r\n    { icon: <ExitToAppIcon />, name: \"Logout\", func: logoutUser },\r\n  ];\r\n\r\n  if (user.role === \"admin\") {\r\n    options.unshift({\r\n      icon: <DashboardIcon />,\r\n      name: \"Dashboard\",\r\n      func: dashboard,\r\n    });\r\n  }\r\n\r\n  function dashboard() {\r\n    history.push(\"/admin/dashboard\");\r\n  }\r\n\r\n  function orders() {\r\n    history.push(\"/orders\");\r\n  }\r\n  function account() {\r\n    history.push(\"/account\");\r\n  }\r\n  function cart() {\r\n    history.push(\"/cart\");\r\n  }\r\n  async function logoutUser() {\r\n    dispatch(logout());       \r\n    alert.success(\"Logout Successfully\");   \r\n    await new Promise(resolve => setTimeout(resolve, 1000)); \r\n    history.push(\"/\");       \r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop open={open} style={{ zIndex: \"10\" }} />\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial tooltip example\"\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        style={{ zIndex: \"11\" }}\r\n        open={open}\r\n        direction=\"down\"\r\n        className=\"speedDial\"\r\n        icon={\r\n          <img\r\n            className=\"speedDialIcon\"\r\n            src={user.avatar.url ? user.avatar.url : \"/Profile.png\"}\r\n            alt=\"Profile\"\r\n          />\r\n        }\r\n      >\r\n        {options.map((item) => (\r\n          <SpeedDialAction\r\n            key={item.name}\r\n            icon={item.icon}\r\n            tooltipTitle={item.name}\r\n            onClick={item.func}\r\n            tooltipOpen={window.innerWidth <= 600 ? true : false}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserOptions;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\reducers\\cartReducer.js",["374","375","376"],"import {\r\n  ADD_TO_CART,\r\n  REMOVE_CART_ITEM,\r\n  REMOVE_ALL_CART_ITEM,\r\n  SAVE_SHIPPING_INFO,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingInfo: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const item = action.payload;\r\n\r\n      const isItemExist = state.cartItems.find(\r\n        (i) => i.product === item.product && i.SubCategory === item.SubCategory && i.ProductSize === item.ProductSize\r\n      );\r\n\r\n      if (isItemExist) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((i) =>\r\n            i.product === isItemExist.product ? item : i\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n\r\n    case REMOVE_CART_ITEM:\r\n      const item1 = action.payload;\r\n      const isItemExist1 = state.cartItems.find(\r\n        (i) => i.product === item1.product && i.SubCategory === item1.SubCategory && i.ProductSize === item1.ProductSize\r\n      );\r\n      \r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((i) => (i.product != isItemExist1.product  || i.SubCategory != isItemExist1.SubCategory  || i.ProductSize != isItemExist1.ProductSize )),\r\n      };\r\n    \r\n\r\n    case REMOVE_ALL_CART_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n\r\n    case SAVE_SHIPPING_INFO:\r\n      return {\r\n        ...state,\r\n        shippingInfo: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Product\\ProductDetails.js",["377","378"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport \"./ProductDetails.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  getProductDetails,\r\n  newReview,\r\n} from \"../../actions/productAction\";\r\nimport ReviewCard from \"./ReviewCard.js\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { addItemsToCart } from \"../../actions/cartAction\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { NEW_REVIEW_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductDetails = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { product, loading, error } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n  const { isAuthenticated } = useSelector(\r\n    (state) => state.user\r\n  );\r\n\r\n  const { success, error: reviewError } = useSelector(\r\n    (state) => state.newReview\r\n  );\r\n\r\n  const options = {\r\n    size: \"large\",\r\n    value: product.ratings,\r\n    readOnly: true,\r\n    precision: 0.5,\r\n  };\r\n  \r\n  const [requestForm, setrequestForm] = useState(false);\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [open, setOpen] = useState(false);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const increaseQuantity = () => {\r\n    if (product.Stock <= quantity) return;\r\n\r\n    const qty = quantity + 1;\r\n    setQuantity(qty);\r\n  };\r\n\r\n  const decreaseQuantity = () => {\r\n    if (1 >= quantity) return;\r\n\r\n    const qty = quantity - 1;\r\n    setQuantity(qty);\r\n  };\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addItemsToCart(match.params.id, quantity));\r\n    alert.success(\"Item Added To Cart\");\r\n  };\r\n\r\n  const submitReviewToggle = () => {\r\n    open ? setOpen(false) : setOpen(true);\r\n  };\r\n\r\n  const reviewSubmitHandler = () => {\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"rating\", rating);\r\n    myForm.set(\"comment\", comment);\r\n    myForm.set(\"productId\", match.params.id);\r\n\r\n    dispatch(newReview(myForm));\r\n\r\n    setOpen(false);\r\n  }; \r\n \r\n  const takeToRequestForm = () =>{\r\n    setrequestForm(true);\r\n    //console.log(requestForm);\r\n    history.push(\"/requestform\");\r\n    // window.location.href = \"http://localhost:3000/requestform\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (reviewError) {\r\n      alert.error(reviewError);\r\n      dispatch(clearErrors());\r\n    }   \r\n     \r\n\r\n    if (success) {\r\n      alert.success(\"Review Submitted Successfully\");\r\n      dispatch({ type: NEW_REVIEW_RESET });\r\n    }\r\n    dispatch(getProductDetails(match.params.id));\r\n  }, [dispatch, match.params.id, error, alert, reviewError, success]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={`${product.name}`} />\r\n          <div className=\"ProductDetails\">\r\n            <div>\r\n              <Carousel>\r\n                {product.images &&\r\n                  product.images.map((item, i) => (\r\n                    <img\r\n                      className=\"CarouselImage\"\r\n                      key={i}\r\n                      src={item.url}\r\n                      alt={`${i} Slide`}\r\n                    />\r\n                  ))}\r\n              </Carousel>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"detailsBlock-1\">\r\n                <h2>{product.name}</h2>\r\n                <p>Product # {product._id}</p>\r\n              </div>\r\n              <div className=\"detailsBlock-2\">\r\n                <Rating {...options} />\r\n                <span className=\"detailsBlock-2-span\">\r\n                  {\" \"}\r\n                  ({product.numOfReviews} Reviews)\r\n                </span>\r\n              </div>\r\n              <div className=\"detailsBlock-3\">\r\n                <h1>{`$${product.price}`}</h1>\r\n                <div className=\"detailsBlock-3-1\">\r\n                  <div className=\"detailsBlock-3-1-1\">\r\n                    <button onClick={decreaseQuantity}>-</button>\r\n                    <input readOnly type=\"number\" value={quantity} />\r\n                    <button onClick={increaseQuantity}>+</button>\r\n                  </div>\r\n                  <button\r\n                    disabled={product.Stock < 1 ? true : false}\r\n                    onClick={addToCartHandler}\r\n                  >\r\n                    Add to Cart\r\n                  </button>\r\n                </div>\r\n\r\n                <p>\r\n                  Status:\r\n                  <b className={product.Stock < 1 ? \"redColor\" : \"greenColor\"}>\r\n                    {product.Stock < 1 ? \"OutOfStock\" : \"InStock\"}\r\n                  </b>\r\n                  <button\r\n                    disabled={product.Stock < 1 ? false : true}                    \r\n                    onClick={takeToRequestForm}\r\n                  >Request products</button>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"detailsBlock-4\">\r\n                Description : <p>{product.description}</p>\r\n              </div>\r\n\r\n              <button onClick={submitReviewToggle} className=\"submitReview\">\r\n                Submit Review\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className=\"reviewsHeading\">REVIEWS</h3>\r\n\r\n          <Dialog\r\n            aria-labelledby=\"simple-dialog-title\"\r\n            open={open}\r\n            onClose={submitReviewToggle}\r\n          >\r\n            <DialogTitle>Submit Review</DialogTitle>\r\n            <DialogContent className=\"submitDialog\">\r\n              <Rating\r\n                onChange={(e) => setRating(e.target.value)}\r\n                value={rating}\r\n                size=\"large\"\r\n              />\r\n\r\n              <textarea\r\n                className=\"submitDialogTextArea\"\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n              ></textarea>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={submitReviewToggle} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={reviewSubmitHandler} color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {product.reviews && product.reviews[0] ? (\r\n            <div className=\"reviews\">\r\n              {product.reviews &&\r\n                product.reviews.map((review) => (\r\n                  <ReviewCard key={review._id} review={review} />\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"noReviews\">No Reviews Yet</p>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Home\\Home.js",["379","380","381","382","383","384","385","386","387"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { CgMouse } from \"react-icons/all\";\r\nimport \"./Home.css\";\r\nimport ProductCard from \"./ProductCard.js\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { clearErrors, getProduct } from \"../../actions/productAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Donate from \"../donate/Donate\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Home = ({ history }) => {\r\n  const categories = [\r\n    \"All\",\r\n    \"FootWears\",\r\n    \"Clothing\",\r\n    \"Sports\",\r\n    \"Miscellaneous\",\r\n  ];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  // const { loading, error, products } = useSelector((state) => state.products);\r\n  // let hashmap = {}\r\n  // let mapping = {}\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([0, 25000]);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [ratings, setRatings] = useState(0);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const {\r\n    products,\r\n    loading,\r\n    error,\r\n    productsCount,\r\n    resultPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => {\r\n    const mapping = state.products.products.reduce((acc, x) => {\r\n      let subcategoryData = x.ProductSize.map((y) => {\r\n        let obj = {};\r\n        obj.size = y.size;\r\n        obj.url = x.images[0].url;\r\n        obj.stock = y.stock;\r\n        obj._id = x._id;\r\n        return obj;\r\n      });\r\n      if (acc[x.name]) {\r\n        return {\r\n          ...acc,\r\n          [x.name]: {\r\n            ...acc[x.name],\r\n            hashmap: {\r\n              ...acc[x.name].hashmap,\r\n              [x.SubCategory]: subcategoryData,\r\n            },\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...acc,\r\n          [x.name]: {\r\n            id: x._id,\r\n            name: x.name,\r\n            url: x.images[0].url,\r\n            hashmap: {\r\n              [x.SubCategory]: subcategoryData,\r\n            },\r\n          },\r\n        };\r\n      }\r\n    }, {});\r\n    return { ...state.products, products: mapping };\r\n  });\r\n  // const keyword = match.params.keyword;\r\n\r\n  const setCurrentPageNo = (e) => {\r\n    setCurrentPage(e);\r\n  };\r\n\r\n  const priceHandler = (event, newPrice) => {\r\n    setPrice(newPrice);\r\n  };\r\n  let count = filteredProductsCount;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    dispatch(getProduct(keyword, currentPage, category));\r\n  }, [dispatch, currentPage, category, error, alert]);\r\n\r\n  const searchSubmitHandler = (e) => {\r\n    console.log(products);\r\n    e.preventDefault();\r\n\r\n    if (keyword.trim()) {\r\n      history.push(`/products/${keyword}`);\r\n    } else {\r\n      history.push(\"/products\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title=\"Donate & help\" />\r\n          <div className=\"banner\">\r\n          <p>Welcome to Locker Room 345 !!!</p>\r\n          <h1>SPORTS MAKE PEOPLE BETTER</h1> \r\n\r\n          {/* <div className=\"bground\">\r\n            <div className=\"banner\">\r\n               <a href=\"#container\">\r\n              <button>\r\n                Scroll <CgMouse />\r\n              </button>\r\n            </a> \r\n            </div>\r\n            <div className=\"banner1\"></div>\r\n      </div> */}\r\n      </div>\r\n          \r\n           \r\n          <div className=\"searchbar\">\r\n            <form className=\"searchBoxbar\" onSubmit={searchSubmitHandler}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search a Product ...\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n              />\r\n              <input type=\"submit\" value=\"Search\" />\r\n            </form>\r\n          </div>\r\n          <div className=\"filterBoxhome\">\r\n            <div className=\"filCategorieshome\">\r\n              <fieldset>\r\n                <Typography component=\"legend\">Categories</Typography>\r\n                <ul className=\"categoryBox\">\r\n                  {categories.map((category) => (\r\n                    <li\r\n                      className=\"category-link\"\r\n                      key={category}\r\n                      onClick={() => setCategory(category)}\r\n                    >\r\n                      {category}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n          <h2 className=\"homeHeading\">All Products</h2>\r\n          <div className=\"container\" id=\"container\">\r\n            {[...Object.entries(products)]\r\n              .sort((a, b) => a[0].localeCompare(b[0]))\r\n              .map(([key, value]) => {\r\n                return <ProductCard key={value.id} product={value} />;\r\n              })}\r\n          </div>\r\n\r\n          {resultPerPage < count && (\r\n            <div className=\"paginationBox\">\r\n              <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={resultPerPage}\r\n                totalItemsCount={productsCount}\r\n                onChange={setCurrentPageNo}\r\n                // nextPageText=\"Next\"\r\n                // prevPageText=\"Prev\"\r\n                // firstPageText=\"1st\"\r\n                // lastPageText=\"Last\"\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n                activeClass=\"pageItemActive\"\r\n                activeLinkClass=\"pageLinkActive\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* <h2 className=\"homeHeading\">Donation Requests</h2>\r\n          <Donate /> */}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\Profile.js",["388"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Profile.css\";\r\nimport Header from \"../layout/Header/Header\";\r\n\r\nconst Profile = ({ history }) => {\r\n  const { user, loading, isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated === false) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, isAuthenticated]);\r\n  return (<div>\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={`${user.name}'s Profile`} />\r\n          <div className=\"profileContainer\">\r\n            <div>\r\n              <h1>My Profile</h1>\r\n              <img src={user.avatar.url} alt={user.name} />\r\n              <Link to=\"/me/update\">Edit Profile</Link>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <h4>Full Name</h4>\r\n                <p>{user.name}</p>\r\n              </div>\r\n              <div>\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n              </div>\r\n              <div>\r\n                <h4>Joined On</h4>\r\n                <p>{String(user.createdAt).substr(0, 10)}</p>\r\n              </div>\r\n\r\n              <div>\r\n                <Link to=\"/orders\">My Orders</Link>\r\n                <Link to=\"/password/update\">Change Password</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Product\\Products.js",["389","390","391","392","393"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./Products.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearErrors, getProduct } from \"../../actions/productAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport ProductCard from \"../Home/ProductCard\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nconst categories = [\r\n  \"FootWears\",\r\n  \"Clothing\",\r\n  \"Sports\",\r\n  \"Miscellaneous\"\r\n];\r\n\r\nconst Products = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([0, 25000]);\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const [ratings, setRatings] = useState(0);\r\n\r\n  // const {\r\n  //   products,\r\n  //   loading,\r\n  //   error,\r\n  //   productsCount,\r\n  //   resultPerPage,\r\n  //   filteredProductsCount,\r\n  // } = useSelector((state) => state.products);\r\n\r\n  const {\r\n    products,\r\n    loading,\r\n    error,\r\n    productsCount,\r\n    resultPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => {\r\n    const mapping = state.products.products.reduce((acc,x) => {\r\n      let subcategoryData = x.ProductSize.map((y) => {\r\n        let obj = {};        \r\n        obj.size = y.size;\r\n        obj.url = x.images[0].url;\r\n        obj.stock = y.stock;\r\n        obj._id = x._id;\r\n        return obj;\r\n    })\r\n      if(acc[x.name]){\r\n        return {...acc,\r\n        [x.name] : {\r\n            ...acc[x.name], \r\n            hashmap:{\r\n              ...acc[x.name].hashmap, \r\n               [x.SubCategory]:subcategoryData,\r\n            }\r\n          }\r\n        }\r\n        }else{\r\n          return {...acc, \r\n            [x.name]:{\r\n              id : x._id, \r\n              name : x.name,\r\n              url : x.images[0].url,  \r\n              hashmap:{\r\n                [x.SubCategory]:subcategoryData,\r\n              }\r\n            }\r\n          }\r\n        }\r\n    },{});\r\n     return {...state.products, products:mapping}\r\n  });\r\n  const keyword = match.params.keyword;\r\n\r\n  const setCurrentPageNo = (e) => {\r\n    setCurrentPage(e);\r\n  };\r\n\r\n  const priceHandler = (event, newPrice) => {\r\n    setPrice(newPrice);\r\n  };\r\n  let count = filteredProductsCount;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    dispatch(getProduct(keyword, currentPage, category));\r\n  }, [dispatch, keyword, currentPage, category, alert, error]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title=\"PRODUCTS\" />\r\n          <h2 className=\"productsHeading\">Products</h2>\r\n\r\n          <div className=\"filterBox\">\r\n            {/* <div className=\"filSize\">\r\n            <fieldset>\r\n              <Typography component=\"legend\">Size</Typography>\r\n              <Slider\r\n                value={price}\r\n                onChange={priceHandler}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                min={4}\r\n                max={12}\r\n              />\r\n              </fieldset>\r\n            </div> */}\r\n\r\n            <div className=\"filCategories\">\r\n              <fieldset>\r\n                <Typography component=\"legend\">Categories</Typography>\r\n                <ul className=\"categoryBox\">\r\n                  {categories.map((category) => (\r\n                    <li\r\n                      className=\"category-link\"\r\n                      key={category}\r\n                      onClick={() => setCategory(category)}\r\n                    >\r\n                      {category}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </fieldset>\r\n            </div>\r\n           \r\n          </div>\r\n\r\n          <div className=\"products\">\r\n            {/* {products &&\r\n              products.map((product) => (\r\n                <ProductCard key={product._id} product={product} />\r\n              ))} */}\r\n              {\r\n              [...Object.entries(products)]\r\n                .sort((a, b) => a[0].localeCompare(b[0]))\r\n                .map(([key, value]) => {\r\n                  return <ProductCard key={value.id} product={value} />\r\n                })}\r\n          </div>\r\n\r\n          {resultPerPage < count && (\r\n            <div className=\"paginationBox\">\r\n              <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={resultPerPage}\r\n                totalItemsCount={productsCount}\r\n                onChange={setCurrentPageNo}\r\n                nextPageText=\"Next\"\r\n                prevPageText=\"Prev\"\r\n                firstPageText=\"1st\"\r\n                lastPageText=\"Last\"\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n                activeClass=\"pageItemActive\"\r\n                activeLinkClass=\"pageLinkActive\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Product\\Search.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\UpdateProfile.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\LoginSignUp.js",["394"],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\Requestform.js",["395","396","397","398","399","400","401","402","403","404"],"import React, { Fragment, useRef, useState, useEffect } from \"react\";\r\nimport \"./Requestform.css\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CreditScoreIcon from '@mui/icons-material/CreditScore';\r\nimport LocationCityIcon from '@mui/icons-material/LocationCity';\r\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport WcIcon from '@mui/icons-material/Wc';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, login, register } from \"../../actions/userAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport $ from \"jquery\";\r\n\r\nconst Requestform = ({ history, location }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { error, loading, isAuthenticated } = useSelector(\r\n    (state) => state.user\r\n  );\r\n\r\n  const loginTab = useRef(null);\r\n\r\n  const [loginEmail, setLoginEmail] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { name, email, password } = user;\r\n\r\n  const [avatar, setAvatar] = useState(\"/Profile.png\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\r\n\r\n  const loginSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(loginEmail, loginPassword));\r\n  };\r\n\r\n  const registerSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"email\", email);\r\n    myForm.set(\"password\", password);\r\n    myForm.set(\"avatar\", avatar);\r\n    dispatch(register(myForm));\r\n  };\r\n\r\n  const registerDataChange = (e) => {\r\n    if (e.target.name === \"avatar\") {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setAvatarPreview(reader.result);\r\n          setAvatar(reader.result);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    } else {\r\n      setUser({ ...user, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  // const redirect = location.search ? location.search.split(\"=\")[1] : \"/account\";\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n      history.push(\"/requestform\");\r\n    }\r\n  }, [dispatch, error, alert, history, isAuthenticated]);\r\n\r\n  \r\n  const [inputList, setInputList] = useState([{ firstName: \"\", lastName: \"\" }]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { firstName: \"\", lastName: \"\" }]);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"RequestContainer\">\r\n            <div className=\"RequestBox\">\r\n              <div>\r\n                <div className=\"Request_toggle\">\r\n                  <p>Request Form</p>\r\n                </div>\r\n              </div>\r\n              <form className=\"RequestForm\" ref={loginTab} onSubmit={loginSubmit}>\r\n                <div className=\"fullname\">\r\n                  <PersonIcon />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Full Name\"\r\n                    required\r\n                    value={loginEmail}\r\n                    onChange={(e) => setLoginEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"facultyid\">\r\n                  <CreditScoreIcon />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Faculty Id\"\r\n                    required\r\n                    value={loginPassword}\r\n                    onChange={(e) => setLoginPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"schoolname\">\r\n                  <LocationCityIcon />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"school Name\"\r\n                    required\r\n                    value={loginPassword}\r\n                    onChange={(e) => setLoginPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"schooladdress\">\r\n                  <ImportContactsIcon />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"school Address\"\r\n                    required\r\n                    value={loginPassword}\r\n                    onChange={(e) => setLoginPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"emailid\">\r\n                  <MailIcon />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email Id\"\r\n                    required\r\n                    value={loginPassword}\r\n                    onChange={(e) => setLoginPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"phoneno\">\r\n                  <PhoneIcon />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Phone Number\"\r\n                    required\r\n                    value={loginPassword}\r\n                    onChange={(e) => setLoginPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"genderage\">\r\n                  <div className=\"gender\">                 \r\n                    <select name=\"gender\" id=\"gender\">                    \r\n                      <option value=\"select\">Select a Gender</option>\r\n                      <option value=\"male\">Male</option>\r\n                      <option value=\"female\">Female</option>\r\n                      <option value=\"noanswer\">Don't wish to answer</option>\r\n                    </select>\r\n                  </div>  \r\n                  <div className=\"age\">  \r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Age\"\r\n                      value={loginPassword}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"additems\">\r\n                  {inputList.map((x, i) => {\r\n                    return (\r\n                      <div className=\"box\">\r\n                      <input\r\n                        name=\"item\"\r\n                        placeholder=\"Item Requesting\"\r\n                        value={x.firstName}\r\n                        onChange={(e) => handleInputChange(e, i)}\r\n                      />\r\n                      <input\r\n                        className=\"ml10\"\r\n                        name=\"size\"\r\n                        placeholder=\"size\"\r\n                        value={x.lastName}\r\n                        onChange={(e) => handleInputChange(e, i)}\r\n                      />\r\n                      <input\r\n                        className=\"ml10\"\r\n                        name=\"quantity\"\r\n                        placeholder=\"Quantity\"\r\n                        value={x.lastName}\r\n                        onChange={(e) => handleInputChange(e, i)}\r\n                      />\r\n                      <div className=\"btn-box\">\r\n                        {inputList.length !== 1 && (\r\n                          <button\r\n                            className=\"mr10\"\r\n                            onClick={() => handleRemoveClick(i)}\r\n                          >\r\n                            -\r\n                          </button>\r\n                        )}\r\n                        {inputList.length - 1 === i && (\r\n                          <button onClick={handleAddClick}>+</button>\r\n                        )}\r\n                      </div>\r\n                    </div>  \r\n                                          \r\n                    );\r\n                  })}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit Request\"\r\n                  className=\"RequestBtn\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Requestform;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\UpdatePassword.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\Payment.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422"],"import React, { Fragment, useEffect, useRef } from \"react\";\r\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useAlert } from \"react-alert\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport PrintIcon from \"@mui/icons-material/Print\";\r\nimport {\r\n  CardNumberElement,\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nimport axios from \"axios\";\r\nimport \"./payment.css\";\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport { createOrder, clearErrors } from \"../../actions/orderAction\";\r\nimport { PDFDownloadLink, Document, Page, pdf } from \"@react-pdf/renderer\";\r\nimport ConfirmOrder from \"./ConfirmOrder\";\r\nimport RequestFormReplica from \"./RequestFormReplica\";\r\n\r\nconst Payment = ({ history }) => {\r\n  const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  // const stripe = useStripe();\r\n  // const elements = useElements();\r\n  const payBtn = useRef(null);\r\n\r\n  // const { shippingInfo, cartItems } = useSelector((state) => state.cart);\r\n  const { shippingInfo, cartItems } = useSelector((state) => state.cart);\r\n  const { user } = useSelector((state) => state.user);\r\n  const { error } = useSelector((state) => state.newOrder);\r\n\r\n  const paymentData = {\r\n    amount: Math.round(orderInfo.totalPrice * 100),\r\n  };\r\n  // const upadtedcartItems = localStorage.getItem(\"cartItemss\");\r\n\r\n  const submitHandler = async (e) => {\r\n    const order = {\r\n      shippingInfo,\r\n      orderItems: cartItems,\r\n      itemsPrice: orderInfo.subtotal,\r\n      taxPrice: orderInfo.tax,\r\n      shippingPrice: orderInfo.shippingCharges,\r\n      totalPrice: orderInfo.totalPrice,\r\n    };\r\n\r\n    e.preventDefault();\r\n    // console.log(\"upadtedcartItemspay\",upadtedcartItems);\r\n    console.log(\"cartItems\", cartItems);\r\n    payBtn.current.disabled = true;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/v1/payment/process\",\r\n        paymentData,\r\n        config\r\n      );\r\n\r\n      //const client_secret = data.client_secret;\r\n\r\n      //if (!stripe || !elements) return;\r\n\r\n      // const result = await stripe.confirmCardPayment(client_secret, {\r\n      //   payment_method: {\r\n      //     card: elements.getElement(CardNumberElement),\r\n      //     billing_details: {\r\n      //       name: user.name,\r\n      //       email: user.email,\r\n      //       address: {\r\n      //         line1: shippingInfo.address,\r\n      //         city: shippingInfo.city,\r\n      //         state: shippingInfo.state,\r\n      //         postal_code: shippingInfo.pinCode,\r\n      //         country: shippingInfo.country,\r\n      //       },\r\n      //     },\r\n      //   },\r\n      // });\r\n      //result.paymentIntent.status === \"succeeded\";\r\n\r\n      if (data.success === true && cartItems.length > 0) {\r\n        // order.paymentInfo = {\r\n        //   id: result.paymentIntent.id,\r\n        //   status: result.paymentIntent.status,\r\n        // };\r\n        dispatch(createOrder(order));\r\n        history.push(\"/success\");\r\n      } else {\r\n        alert.error(\r\n          \"No items available in cart. Please try adding the items again\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      payBtn.current.disabled = false;\r\n      alert.error(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, error, alert]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Payment\" />\r\n      <CheckoutSteps activeStep={2} />\r\n      <div className=\"paymentContainer\">\r\n        <form className=\"paymentForm\" onSubmit={(e) => submitHandler(e)}>\r\n          <Typography className=\"Typography\">Order Place</Typography>\r\n          <hr></hr>\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value={`Proceed To Place Order`}\r\n            ref={payBtn}\r\n            className=\"paymentFormBtn\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\ForgotPassword.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\Cart.js",["423","424","425"],"import React, { Fragment, useState } from \"react\";\r\nimport \"./Cart.css\";\r\nimport CartItemCard from \"./CartItemCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addItemsToCart, removeItemsFromCart } from \"../../actions/cartAction\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport RemoveShoppingCartIcon from \"@material-ui/icons/RemoveShoppingCart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { cartItems,shippingInfo } = useSelector((state) => state.cart);\r\n\r\n\r\n  // const increaseQuantity = (id, quantity, stock) => {\r\n  //   const newQty = quantity + 1;\r\n  //   if (stock <= quantity) {\r\n  //     return;\r\n  //   }\r\n  //   dispatch(addItemsToCart(id, newQty));\r\n  // };\r\n\r\n  // const decreaseQuantity = (id, quantity) => {\r\n  //   const newQty = quantity - 1;\r\n  //   if (1 >= quantity) {\r\n  //     return;\r\n  //   }\r\n  //   dispatch(addItemsToCart(id, newQty));\r\n  // };\r\n\r\n  const deleteCartItems = (id,item) => {\r\n    dispatch(removeItemsFromCart(id,item));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    // history.push(\"/login?redirect=shipping\");    \r\n    history.push(\"/shipping\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* {JSON.stringify(cartItems)} */}\r\n      {cartItems.length === 0 ? (\r\n        <div className=\"emptyCart\">\r\n          <RemoveShoppingCartIcon />\r\n\r\n          <Typography>No Product in Your Cart</Typography>\r\n          <Link to=\"/home\">View Products</Link>\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"cartPage\">\r\n            <div className=\"cartHeader\">\r\n              <p>Product</p>\r\n              <p>Quantity</p>\r\n              <p>Subtotal</p>\r\n            </div>\r\n\r\n            {cartItems &&\r\n              cartItems.map((item) => (\r\n                <div className=\"cartContainer\" key={item.product}>\r\n                  \r\n                  <CartItemCard item={item} deleteCartItems={deleteCartItems} />\r\n                  <div className=\"cartInput\">\r\n                    {/* <button\r\n                      onClick={() =>\r\n                        decreaseQuantity(item.product, item.quantity)\r\n                      }\r\n                    >\r\n                      -\r\n                    </button> */}\r\n                    <input type=\"number\" value={item.quantity} readOnly />\r\n                    {/* <button\r\n                      onClick={() =>\r\n                        increaseQuantity(\r\n                          item.product,\r\n                          item.quantity,\r\n                          item.stock\r\n                        )\r\n                      }\r\n                    >\r\n                      +\r\n                    </button> */}\r\n                  </div>\r\n                  {/* <p className=\"cartSubtotal\">{`$${\r\n                    item.price * item.quantity\r\n                  }`}</p> */}\r\n                   <p className=\"cartSubtotal\">{`$0`}</p>\r\n                </div>\r\n              ))}\r\n\r\n            <div className=\"cartGrossProfit\">\r\n              <div></div>\r\n              <div className=\"cartGrossProfitBox\">\r\n                <p>Gross Total</p>\r\n                {/* <p>{`$${cartItems.reduce(\r\n                  (acc, item) => acc + item.quantity * item.price,\r\n                  0\r\n                )}`}</p> */}\r\n                 <p>{`$0`}</p>\r\n              </div>\r\n              <div></div>\r\n              <div className=\"checkOutBtn\">\r\n                <button onClick={checkoutHandler}>Check Out</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n        </Fragment>\r\n       \r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\User\\ResetPassword.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Route\\ProtectedRoute.js",["426"],"import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n  const { loading, isAuthenticated, user } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading === false && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            if (isAuthenticated === false) {\r\n              return <Redirect to=\"/login\" />;\r\n            }\r\n\r\n            // if (isAuthenticated === true) {\r\n            //   return <Redirect to=\"/home\" />;\r\n            // }\r\n\r\n            // if (isAdmin === true && user.role == \"admin\") {\r\n            //   return <Redirect to=\"/admin/dashboard\" />;\r\n            // }\r\n\r\n            // if (isAdmin === true && user.role !== \"admin\") {\r\n            //   return <Redirect to=\"/login\" />;\r\n            // }\r\n\r\n            return <Component {...props} />;\r\n          }}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\ConfirmOrder.js",["427","428","429","430","431","432"],"import React, { Fragment, useRef } from \"react\";\r\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport \"./ConfirmOrder.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport PrintIcon from \"@mui/icons-material/Print\";\r\nimport { addItemsToCart } from \"../../actions/cartAction\";\r\nimport store from \"../../store.js\";\r\nimport axios from \"axios\";\r\nimport { createOrder, clearErrors } from \"../../actions/orderAction\";\r\nimport { removeAllCartItems } from \"../../actions/cartAction\";\r\n\r\nconst ConfirmOrder = ({ history,addComments}) => {\r\n  const dispatch = useDispatch();\r\n  const { shippingInfo, cartItems } = useSelector((state) =>state.cart);\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\r\n\r\n  const componentRef = useRef();\r\n\r\n  const payBtn = useRef(null);\r\n\r\n  const paymentData = {\r\n    amount: Math.round(0 * 100),\r\n  };\r\n\r\n  // const subtotal = cartItems.reduce(\r\n  //   (acc, item) => acc + item.quantity * item.price,\r\n  //   0\r\n  // );\r\n  const cartItemss = useSelector(() => store.getState().cart.cartItems)\r\n\r\n  const subtotal = 0;\r\n\r\n  const shippingCharges = 0;\r\n\r\n  const tax = subtotal * 0;\r\n\r\n  const totalPrice = 0;\r\n\r\n  // const address = `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.state}, ${shippingInfo.pinCode}, ${shippingInfo.country}`;\r\n  const submitHandler = async (e) => {\r\n    const order = {\r\n      shippingInfo,\r\n      orderItems: cartItems,\r\n      itemsPrice: 0,\r\n      taxPrice: 0,\r\n      shippingPrice: 0,\r\n      totalPrice: 0,\r\n    };\r\n\r\n    e.preventDefault();\r\n    // console.log(\"upadtedcartItemspay\",upadtedcartItems);\r\n    console.log(\"cartItems from confirm order\", cartItems);\r\n    //payBtn.current.disabled = true;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/v1/payment/process\",\r\n        paymentData,\r\n        config\r\n      );\r\n\r\n      //const client_secret = data.client_secret;\r\n\r\n      //if (!stripe || !elements) return;\r\n\r\n      // const result = await stripe.confirmCardPayment(client_secret, {\r\n      //   payment_method: {\r\n      //     card: elements.getElement(CardNumberElement),\r\n      //     billing_details: {\r\n      //       name: user.name,\r\n      //       email: user.email,\r\n      //       address: {\r\n      //         line1: shippingInfo.address,\r\n      //         city: shippingInfo.city,\r\n      //         state: shippingInfo.state,\r\n      //         postal_code: shippingInfo.pinCode,\r\n      //         country: shippingInfo.country,\r\n      //       },\r\n      //     },\r\n      //   },\r\n      // });\r\n      //result.paymentIntent.status === \"succeeded\";\r\n\r\n      if (data.success === true && cartItems.length > 0) {\r\n        // order.paymentInfo = {\r\n        //   id: result.paymentIntent.id,\r\n        //   status: result.paymentIntent.status,\r\n        // };\r\n        dispatch(createOrder(order));             \r\n        dispatch(removeAllCartItems());       \r\n        history.push(\"/success\");\r\n      } else {\r\n        alert.error(\r\n          \"No items available in cart. Please try adding the items again\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      //payBtn.current.disabled = false;\r\n      alert.error(error.response.data.message);\r\n    }\r\n  };\r\n  \r\n  const proceedToPayment = () => {\r\n    const data = {\r\n      subtotal,\r\n      shippingCharges,\r\n      tax,\r\n      totalPrice,\r\n      cartItemss\r\n    };\r\n    console.log(\"cartItems updated\",cartItemss);\r\n    localStorage.setItem(\"cartItems\",cartItemss);\r\n    //const username = useSelector(() => getState().cart.cartItems)\r\n    sessionStorage.setItem(\"orderInfo\", JSON.stringify(data));\r\n   \r\n    history.push(\"/process/payment\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Confirm Order\" />\r\n      <CheckoutSteps activeStep={1} />\r\n      <div className=\"confirmOrderPage\" ref={componentRef}>\r\n        <div>\r\n          <div className=\"confirmshippingArea\">\r\n            <Typography>Shipping Info</Typography>\r\n            <div className=\"confirmshippingAreaBox\">\r\n              <div>\r\n                <p>User Placed Order:</p>\r\n                <span>{user.name}</span>\r\n                {/* <hr></hr> */}\r\n                <span>&nbsp;</span>\r\n                <p>Designation:</p>\r\n                <span>{shippingInfo.userLoggedInDesignation}</span>\r\n              </div>\r\n              <div>\r\n                <p>Deliver To Student Id:</p>\r\n                <span>{shippingInfo.receivingPersonName}</span>\r\n              </div>\r\n              <div>\r\n                <p>Order Date:</p>\r\n                <span>{shippingInfo.orderDate}</span>\r\n              </div>\r\n              <div>\r\n                <p>Phone:</p>\r\n                <span>{shippingInfo.phoneNo}</span>\r\n              </div>\r\n              <div>\r\n                <p>Address:</p>\r\n                <span>{user.address}</span>\r\n              </div>\r\n              <div>\r\n                <p>Additional Comments:</p>\r\n                <span>{shippingInfo.additionalComments}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"confirmCartItems\">\r\n            <Typography>Your Cart Items:</Typography>\r\n            <div className=\"confirmCartItemsContainer\">\r\n              {cartItems &&\r\n                cartItems.map((item) => (\r\n                  <div className=\"cartitemholder\" key={item.product}>\r\n                    <div className=\"cartitemholderimage\">\r\n                      <img src={item.image} alt=\"Product\" />\r\n                    </div>\r\n                    <div className=\"cartitemholdername\">\r\n                     <span>{item.name}</span>\r\n                    </div>\r\n                    <div className=\"cartitemholdercat\">\r\n                      <span>Subcategory({item.SubCategory})</span>\r\n                    </div>\r\n                    <div className=\"cartitemholdersize\">\r\n                      <span>Size({item.ProductSize.split(\",\",1)})</span>\r\n                    </div>\r\n                    <div className=\"cartitemholderquantity\">\r\n                      <span>\r\n                        Quantity({item.quantity})\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"printComponent\">\r\n            <ReactToPrint\r\n              trigger={() => <PrintIcon className=\"PrintIcon\" />}\r\n              content={() => componentRef.current}\r\n            />{\" \"}\r\n            <p>\r\n              <span>Print</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/*  */}\r\n        <div>\r\n          <div className=\"orderSummary\">\r\n            <Typography>Order Summery</Typography>\r\n            <div>\r\n              <div>\r\n                <p>Subtotal:</p>\r\n                <span>${subtotal}</span>\r\n              </div>\r\n              <div>\r\n                <p>Shipping Charges:</p>\r\n                <span>${shippingCharges}</span>\r\n              </div>\r\n              <div>\r\n                <p>Tax:</p>\r\n                <span>${tax}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"orderSummaryTotal\">\r\n              <p>\r\n                <b>Total:</b>\r\n              </p>\r\n              <span>${totalPrice}</span>\r\n            </div>\r\n\r\n            <button onClick={(e) => submitHandler(e)}>Confirm Order</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConfirmOrder;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\OrderSuccess.js",["433","434","435","436"],"import React from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport \"./orderSuccess.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport store from \"../../store.js\";\r\n\r\nconst OrderSuccess = () => {\r\n\r\n  \r\n  const history = useHistory();\r\n  \r\n\r\n\r\n  //console.log(orders);\r\n\r\n  async function displayOrder() {\r\n    \r\n    history.push(`/orders`);       \r\n  }\r\n\r\n\r\n  console.log(\"change done\");\r\n  //cartItems.length = 0;\r\n  console.log(\"change successful\");\r\n\r\n  return (\r\n    <div className=\"orderSuccess\">\r\n      <CheckCircleIcon />\r\n      <Typography>Your Order has been Placed successfully </Typography>\r\n      <Button onClick={displayOrder}>Display All Orders</Button>\r\n      {/* <Link to=`/order/${productId}``>View Orders</Link> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderSuccess;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\Shipping.js",["437","438","439","440","441","442","443","444","445"],"import React, { Fragment, useState } from \"react\";\r\nimport \"./Shipping.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { saveShippingInfo } from \"../../actions/cartAction\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport TransferWithinAStationIcon from \"@material-ui/icons/TransferWithinAStation\";\r\nimport { Country, State } from \"country-state-city\";\r\nimport { useAlert } from \"react-alert\";\r\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport LocalShippingIcon from \"@mui/icons-material/LocalShipping\";\r\nimport ApartmentIcon from '@mui/icons-material/Apartment';\r\n\r\nconst Shipping = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.user);\r\n  const alert = useAlert();\r\n  const { shippingInfo } = useSelector((state) => state.cart);\r\n  const [receivingPersonName, setreceivingPersonName] = useState(\r\n    shippingInfo.receivingPersonName\r\n  );\r\n  const [userLoggedInDesignation, setuserLoggedInDesignation] = useState(\r\n    shippingInfo.userLoggedInDesignation\r\n  );\r\n  // const [address, setAddress] = useState(shippingInfo.address);\r\n  // const [city, setCity] = useState(shippingInfo.city);\r\n  // const [state, setState] = useState(shippingInfo.state);\r\n  // const [country, setCountry] = useState(shippingInfo.country);\r\n  // const [pinCode, setPinCode] = useState(shippingInfo.pinCode);\r\n  const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo);\r\n  const [addComments, setaddComments] = useState(\r\n    shippingInfo.additionalComments\r\n  );\r\n  let orderDate = \"\";\r\n  const shippingSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"addComments\", addComments);\r\n    let current = new Date();\r\n    let cDate =\r\n      current.getFullYear() +\r\n      \"-\" +\r\n      (current.getMonth() + 1) +\r\n      \"-\" +\r\n      current.getDate();\r\n    let cTime =\r\n      current.getHours().toString().padStart(2, 0) +\r\n      \":\" +\r\n      current.getMinutes() +\r\n      \":\" +\r\n      current.getSeconds();\r\n    let orderDate = cDate + \" \" + cTime;\r\n\r\n    // if (phoneNo.length < 10 || phoneNo.length > 10) {\r\n    //   alert.error(\"Phone Number should be 10 digits Long\");\r\n    //   return;\r\n    // }\r\n    dispatch(\r\n      saveShippingInfo({\r\n        userName: user.name,\r\n        receivingPersonName,\r\n        additionalComments: addComments,\r\n        userLoggedInDesignation,\r\n        userAddress: user.address,\r\n        orderDate,\r\n        phoneNo,\r\n      })\r\n    );\r\n    history.push(\"/order/confirm\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Delivery Details\" />\r\n\r\n      <CheckoutSteps activeStep={0} />\r\n\r\n      <div className=\"shippingContainer\">\r\n        <div className=\"shippingBox\">\r\n          <h2 className=\"shippingHeading\">Delivery Details</h2>\r\n\r\n          <form\r\n            className=\"shippingForm\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={shippingSubmit}\r\n          >\r\n            <div>\r\n              <ApartmentIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"User Logged In\"\r\n                value={user.name}\r\n                disabled\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Teacher's Name\"\r\n                value={userLoggedInDesignation}\r\n                onChange={(e) => setuserLoggedInDesignation(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <PersonIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Receiving Student Id\"\r\n                value={receivingPersonName}\r\n                onChange={(e) => setreceivingPersonName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <HomeIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Address\"\r\n                value={user.address}\r\n                disabled\r\n                // onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <PhoneIcon />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Phone Number\"\r\n                value={phoneNo}\r\n                onChange={(e) => setPhoneNo(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"additionalComments\">\r\n              <textarea\r\n                placeholder=\"Add if you have any additional comments or request for items here...\"\r\n                onChange={(e) => setaddComments(e.target.value)}\r\n              >\r\n                {addComments}\r\n              </textarea>\r\n            </div>\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Continue\"\r\n              className=\"shippingBtn\"\r\n              // disabled={state ? false : true}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Order\\MyOrders.js",["446"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./myOrders.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\nimport Header from \"../layout/Header/Header\";\r\n\r\nconst MyOrders = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, orders } = useSelector((state) => state.myOrders);\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  const columns = [\r\n    //{ field: \"id\", headerName: \"Order ID\", minWidth: 250, flex: 0.5 },    \r\n    {\r\n      field: \"orderfrom\",\r\n      headerName: \"Ordered By\",\r\n      type: \"string\",\r\n      minWidth: 150,\r\n      flex: 0.5,      \r\n    },\r\n     {\r\n      field: \"studentId\",\r\n      headerName: \"Student Id\",\r\n      type: \"string\",\r\n      minWidth: 150,\r\n      flex: 0.5,\r\n    },\r\n    {\r\n      field: \"OrderDate\",\r\n      headerName: \"OrderDate\",\r\n      type: \"string\",\r\n      minWidth: 150,\r\n      flex: 0.5,\r\n    },\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 150,\r\n      flex: 0.5,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Qty\",\r\n      type: \"number\",\r\n      minWidth: 150,\r\n      flex: 0,\r\n    }, \r\n    {\r\n      field: \"actions\",\r\n      flex: 0,\r\n      headerName: \"Actions\",\r\n      minWidth: 150,\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Link to={`/order/${params.getValue(params.id, \"id\")}`}>\r\n            <LaunchIcon />\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const rows = [];\r\n\r\n  orders &&\r\n    orders.forEach((item, index) => {\r\n      //console.log(item);\r\n      rows.push({\r\n        itemsQty: item.orderItems.length,\r\n        id: item._id,\r\n        OrderDate:item.shippingInfo.orderDate,\r\n        status: item.orderStatus,\r\n        amount: item.totalPrice,\r\n        studentId: item.shippingInfo.receivingPersonName,\r\n        orderfrom:  user.name\r\n      });\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    dispatch(myOrders());\r\n  }, [dispatch, alert, error]);\r\n\r\n  return (\r\n    <div>\r\n    <Fragment>\r\n      <MetaData title={`${user.name} - Orders`} />\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"myOrdersPage\">\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"myOrdersTable\"\r\n            autoHeight\r\n          />\r\n\r\n          <Typography id=\"myOrdersHeading\">{user.name}'s Orders</Typography>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrders;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\RequestFormReplica.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Contact\\Contact.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\donate\\Donate.js",["447","448","449","450","451","452","453","454","455","456","457","458","459"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { CgMouse } from \"react-icons/all\";\r\nimport \"./Donate.css\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { clearErrors, getProduct } from \"../../actions/productAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport donateimg from \"../../images/sports5.jpg\";\r\nimport blog3 from \"../../images/blog3.jpg\";\r\nimport Payment from \"../Cart/Payment\";\r\n\r\n\r\nconst Donate = () => { \r\n\r\n  const responsive = {\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 2,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 2, // optional, default to 1.\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n    },\r\n  };\r\n\r\n  const donatepay =() =>{\r\n    console.log(\"Entered donatepay\");\r\n    window.location.href = \"http://localhost:3000/process/payment\";\r\n    // return <Payment/>;\r\n  }\r\n\r\n  return (\r\n    <Carousel\r\n      swipeable={true}\r\n      draggable={false}\r\n      showDots={false}\r\n      responsive={responsive}\r\n      ssr={true} // means to render carousel on server-side.\r\n      infinite={true}\r\n      autoPlay={true}\r\n      autoPlaySpeed={2000}\r\n      keyBoardControl={true}\r\n      customTransition=\"all .5\"\r\n      transitionDuration={1000}\r\n      containerClass=\"carousel-container\"\r\n      removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n      dotListClass=\"custom-dot-list-style\"\r\n      itemClass=\"carousel-item-padding-40-px\"\r\n    >\r\n     \r\n        <div className=\"bg-image\"></div>\r\n        <div className=\"bg-text\">\r\n          <h2>Item Requested</h2>\r\n          <br />\r\n          <div className=\"info\">\r\n            <label>Name of Item :</label> <span>BasketBall</span>\r\n            <br />\r\n            <label>Size :</label> <span>International</span> <br />\r\n            <label>Quantity :</label> <span>15</span> <br />\r\n            <label>Requested from :</label>{\" \"}\r\n            <span>St.Patrick's Community School</span><br/>\r\n            <label>Amount :</label><span>$1200</span>\r\n          </div>\r\n          <br />\r\n          <button type=\"submit\" onClick={donatepay}>❤️ Donate</button>\r\n        </div> \r\n      <div className=\"div2\">\r\n        <img src={blog3}></img>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Donate;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Footer\\Footer.js",["460","461","462","463","464","465","466","467"],"import React from \"react\";\r\nimport logo from \"../../../images/dicks_logo.svg\";\r\nimport lockerroomlogo from \"../../../images/lockerroomlogo.PNG\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\">\r\n      <div className=\"leftFooter\">\r\n      <a href=\"mailto:lockerroom345@gmail.com?Subject=Locker Room 345 Email\">Contact Us</a>\r\n       <a href=\"\">Terms of Use</a>\r\n       <a href=\"\">Privacy Policy</a>       \r\n       <a href=\"\">Accessibility Policy</a>\r\n      </div>\r\n\r\n      <div className=\"midFooter\">        \r\n        <img src={lockerroomlogo} alt=\"\" />\r\n        <p><span>Presents From Us Not Only On Christmas </span><br /><span>But Everyday !!!</span></p>\r\n        <p>&copy; 2022 Locker Room 345 </p>\r\n      </div>\r\n\r\n      <div className=\"rightFooter\">\r\n        <h4>Follow Us</h4>\r\n        <a href=\"\">Instagram</a>\r\n        <a href=\"\">Youtube</a>\r\n        <a href=\"\">Facebook</a>\r\n        <a href=\"\">Twitter</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Order\\OrderDetails.js",["468","469"],"import React, { Fragment, useEffect, useRef } from \"react\";\r\nimport \"./orderDetails.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { getOrderDetails, clearErrors } from \"../../actions/orderAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { useAlert } from \"react-alert\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport PrintIcon from \"@mui/icons-material/Print\";\r\n\r\nconst OrderDetails = ({ match }) => {\r\n  const { order, error, loading } = useSelector((state) => state.orderDetails);\r\n  const { shippingInfo } = useSelector((state) => state.cart);\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const componentRef = useRef();\r\n  useEffect(() => {\r\n    console.log(order);\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    dispatch(getOrderDetails(match.params.id));\r\n  }, [dispatch, alert, error, match.params.id]);\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title=\"Order Details\" />\r\n          <div className=\"orderDetailsPage\" ref={componentRef}>\r\n            <div className=\"orderDetailsContainer\">\r\n              <Typography component=\"h1\">\r\n                Order #{order && order.orderId}\r\n              </Typography>\r\n              <Typography>Shipping Info</Typography>\r\n              <div className=\"orderDetailsContainerBox\">\r\n                <div>\r\n                  <p>Order Placed by:</p>\r\n                  <span>{order.user && order.user.name}</span>\r\n                  <hr></hr>\r\n                  <span>&nbsp;</span>\r\n                  <p>Designation:</p>\r\n                  <span>{shippingInfo.userLoggedInDesignation}</span>\r\n                </div>\r\n                <div>\r\n                  <p>Deliver To Student Id:</p>\r\n                  <span>{shippingInfo.receivingPersonName}</span>\r\n                </div>\r\n                <div>\r\n                      <p>Order Date:</p>\r\n                      <span>{order.user && order.shippingInfo.orderDate}</span>\r\n                    </div>\r\n                <div>\r\n                  <p>Phone:</p>\r\n                  <span>\r\n                    {order.shippingInfo && order.shippingInfo.phoneNo}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <p>Address:</p>\r\n                  <span>\r\n                    {order.shippingInfo && order.shippingInfo.userAddress }\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <p>Additional Comments:</p>\r\n                  <span>\r\n                    {order.shippingInfo &&\r\n                      `${order.shippingInfo.additionalComments}`}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <Typography>Order Status</Typography>\r\n              <div className=\"orderDetailsContainerBox\">\r\n                <div>\r\n                  <p\r\n                    className={\r\n                      order.orderStatus && order.orderStatus === \"Delivered\"\r\n                        ? \"greenColor\"\r\n                        : \"redColor\"\r\n                    }\r\n                  >\r\n                    {order.orderStatus && order.orderStatus}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"orderDetailsCartItems\">\r\n              <Typography>Order Items:</Typography>\r\n              <div className=\"orderDetailsCartItemsContainer\">\r\n                {order.orderItems &&\r\n                  order.orderItems.map((item) => (\r\n                    <div className=\"cartitemholder\" key={item.product}>\r\n                      <div className=\"cartitemholderimage\">\r\n                        <img src={item.image} alt=\"Product\" />\r\n                      </div>\r\n                      <div className=\"cartitemholdername\">\r\n                        <span>{item.name}</span>\r\n                      </div>\r\n                      <div className=\"cartitemholdercat\">\r\n                        <span>Subcategory({item.SubCategory})</span>\r\n                      </div>\r\n                      <div className=\"cartitemholdersize\">\r\n                        <span>Size({item.ProductSize.split(\",\", 1)})</span>\r\n                      </div>\r\n                      <div className=\"cartitemholderquantity\">\r\n                        <span>Quantity({item.quantity})</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"printComponent\">\r\n              <ReactToPrint\r\n                trigger={() => <PrintIcon className=\"PrintIcon\" />}\r\n                content={() => componentRef.current}\r\n              />{\" \"}\r\n              <p>\r\n                <span>Print</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Not Found\\NotFound.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\About\\About.js",["470","471","472","473","474"],"import React from \"react\";\r\nimport \"./aboutSection.css\";\r\nimport { Button, Typography, Avatar } from \"@material-ui/core\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport dicksmission from \"../../../images/dicks_mission.PNG\";\r\nconst About = () => {\r\n  return (\r\n    <div className=\"aboutSection\">\r\n      <div></div>\r\n      <div className=\"aboutSectionGradient\"></div>\r\n     \r\n      <div className=\"aboutSectionContainer\">\r\n      <Typography component=\"h1\">About Us</Typography>\r\n        <div className=\"header\">\r\n          {/* <image src={dicksmission} alt=\"\" /> */}\r\n        </div>\r\n        <div>\r\n          {/* <image src={dicksmission} alt=\"\" /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Helpuse\\Helpuse.js",["475","476","477","478"],"import {React,useState} from \"react\";\r\nimport \"./Helpuse.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Helpuse = () => {\r\n\r\nconst { user } = useSelector((state) => state.user);\r\n  return (\r\n    // <div className=\"helpuseContainer\">\r\n    //  <ReactPlayer url='https://youtu.be/2LFjBufoBz8' />\r\n    // </div>\r\n    <div className=\"player-wrapper\">\r\n      <ReactPlayer\r\n        className=\"react-player\"\r\n        url= {user && user.role==\"user\" ? \"https://www.youtube.com/watch?v=V7Zy23qiQOk\" : \"https://www.youtube.com/watch?v=E5QQME6si1Q\"}\r\n        playing= \"false\"\r\n        playIcon     \r\n        controls=\"true\"  \r\n        config={{\r\n            youtube: {\r\n              playerVars: { showinfo: 1 }\r\n            }          \r\n          }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Helpuse;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Admin\\Sidebar.js",["479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport logo from \"../../images/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport lockerroomlogo from \"../../images/lockerroomlogo.PNG\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { logout } from \"../../actions/userAction\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  async function logoutUser() {\r\n    dispatch(logout());\r\n    alert.success(\"Logout Successfully\");\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {/* <Link to=\"/admin/dashboard\">\r\n        <img src={lockerroomlogo} alt=\"\" />\r\n      </Link>\r\n      <Link to=\"/admin/dashboard\">\r\n        <p>\r\n          <DashboardIcon /> Dashboard\r\n        </p>\r\n      </Link>\r\n      {(user.role == \"volunteer\" || user.role == \"admin\") && (\r\n        <Link to=\"/admin/orders\">\r\n          <p>\r\n            <ListAltIcon />\r\n            Orders\r\n          </p>\r\n        </Link>\r\n      )}\r\n      {user.role == \"admin\" && (\r\n        <Link>\r\n          <TreeView\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ImportExportIcon />}\r\n          >\r\n            <TreeItem nodeId=\"1\" label=\"Items\">\r\n              <Link to=\"/admin/products\">\r\n                <TreeItem nodeId=\"2\" label=\"All\" icon={<PostAddIcon />} />\r\n              </Link>\r\n\r\n              <Link to=\"/admin/product\">\r\n                <TreeItem nodeId=\"3\" label=\"Create\" icon={<AddIcon />} />\r\n              </Link>\r\n            </TreeItem>\r\n          </TreeView>\r\n        </Link>\r\n      )}\r\n      {user.role == \"admin\" && (\r\n        <Link to=\"/admin/users\">\r\n          <p>\r\n            <PeopleIcon /> Users\r\n          </p>\r\n        </Link>\r\n      )}\r\n\r\n      <Link to=\"/admin/users\">\r\n        <p>\r\n          <PeopleIcon /> Users\r\n        </p>\r\n      </Link>\r\n\r\n      <Link to=\"/register\">\r\n        <p>\r\n          <PeopleIcon /> Add User\r\n        </p>\r\n      </Link>\r\n\r\n       */}\r\n     \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\actions\\orderAction.js",["496"],"import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  MY_ORDERS_REQUEST,\r\n  MY_ORDERS_SUCCESS,\r\n  MY_ORDERS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_SUCCESS,\r\n  ALL_ORDERS_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n  UPDATE_ORDER_FAIL,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  DELETE_ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nvar orderId;\r\n\r\n// Create Order\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n     //console.log(data);\r\n\r\n    orderId = data.order._id;\r\n\r\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n// My Orders\r\nexport const myOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/orders/me\");\r\n\r\n    dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MY_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Orders (admin)\r\nexport const getAllOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/admin/orders\");\r\n\r\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update Order\r\nexport const updateOrder = (id, order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/order/${id}`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Order\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\r\n\r\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get Order Details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n    //console.log(\"entered getorderdetail function\");\r\n    const { data } = await axios.get(`/api/v1/order/${id}`);\r\n    //console.log(\"data\",data);\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\MetaData.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\actions\\productAction.js",["497","498"],"import axios from \"axios\";\r\n\r\nimport {\r\n  ALL_PRODUCT_FAIL,\r\n  ALL_PRODUCT_REQUEST,\r\n  ALL_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_REQUEST,\r\n  ADMIN_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_FAIL,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  NEW_REVIEW_REQUEST,\r\n  NEW_REVIEW_SUCCESS,\r\n  NEW_REVIEW_FAIL,\r\n  ALL_REVIEW_REQUEST,\r\n  ALL_REVIEW_SUCCESS,\r\n  ALL_REVIEW_FAIL,\r\n  DELETE_REVIEW_REQUEST,\r\n  DELETE_REVIEW_SUCCESS,\r\n  DELETE_REVIEW_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\n\r\n\r\n\r\n// Get All Products\r\nexport const getProduct =\r\n  (keyword = \"\", currentPage = 2, category) =>\r\n  async (dispatch) => {\r\n    \r\n    try {\r\n      dispatch({ type: ALL_PRODUCT_REQUEST });\r\n\r\n      let link = \"\";\r\n      if (currentPage===1 & category==\"\") {\r\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}`;\r\n      }\r\n      else{\r\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&category=${category}`;\r\n      }\r\n\r\n      if (category==\"All\") {\r\n        link = `/api/v1/products`;\r\n      }\r\n      // if (currentPage==1 && category === category) {\r\n        \r\n      // }\r\n      \r\n\r\n      const { data } = await axios.get(link);\r\n\r\n      dispatch({\r\n        type: ALL_PRODUCT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ALL_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// Get All Products For Admin\r\nexport const getAdminProduct = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_PRODUCT_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/admin/products\");\r\n\r\n    dispatch({\r\n      type: ADMIN_PRODUCT_SUCCESS,\r\n      payload: data.products,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Create Product\r\nexport const createProduct = (productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/v1/admin/product/new`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NEW_PRODUCT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update Product\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/product/${id}`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Product\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_PRODUCT_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get Products Details\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/product/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// NEW REVIEW\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_REVIEW_REQUEST });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/v1/review`, reviewData, config);\r\n\r\n    dispatch({\r\n      type: NEW_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Reviews of a Product\r\nexport const getAllReviews = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\r\n\r\n    dispatch({\r\n      type: ALL_REVIEW_SUCCESS,\r\n      payload: data.reviews,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Review of a Product\r\nexport const deleteReviews = (reviewId, productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.delete(\r\n      `/api/v1/reviews?id=${reviewId}&productId=${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\layout\\Loader\\Loader.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\CheckoutSteps.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Cart\\CartItemCard.js",["499"],"import React from \"react\";\r\nimport \"./CartItemCard.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItemCard = ({ item, deleteCartItems }) => {\r\n  return (\r\n    <div className=\"CartItemCard\">\r\n      <button onClick={() => deleteCartItems(item.product, item)}>\r\n        <DeleteIcon />\r\n      </button>\r\n      <img src={item.image} alt=\"ssa\" />\r\n      <div>\r\n        {/* <Link to={`/product/${item.product}`}>{item.name}</Link> */}\r\n        <h4>{item.name}</h4>\r\n        {/* <span>{`Price: $${item.price}`}</span> */}\r\n        {/* <span>{`Price: $0`}</span> */}\r\n        <span>{`SubCategory: ${item.SubCategory}`}</span>\r\n        <span>{`Size: ${item.ProductSize}`}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItemCard;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Home\\ProductCard.js",["500","501","502","503","504","505","506","507"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { addItemsToCart } from \"../../actions/cartAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\r\n\r\nconst ProductCard = ({ product, history }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  const { success, error: reviewError } = useSelector(\r\n    (state) => state.newReview\r\n  );\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [requestForm, setrequestForm] = useState(false);\r\n  const options = {\r\n    value: product.ratings,\r\n    readOnly: true,\r\n    precision: 0.5,\r\n  };\r\n  const takeToRequestForm = () => {\r\n    setrequestForm(true);\r\n    //console.log(requestForm);\r\n    //history.push(\"/requestform\");\r\n    window.location.href = \"http://localhost:3000/requestform\";\r\n  };\r\n\r\n  const [SubCategory, setSubCategory] = useState(\r\n    Object.keys(product.hashmap)[0] || \"\"\r\n  );\r\n  const [ProductSize, setProductSize] = useState(0);\r\n\r\n  const increaseQuantity = () => {       \r\n    let maxstock = product.hashmap[SubCategory][ProductSize].stock;\r\n    // console.log(\"product Stock currently\",maxstock);\r\n    if (maxstock <= quantity) return;\r\n    const qty = quantity + 1;    \r\n    setQuantity(qty);\r\n  };\r\n\r\n  const decreaseQuantity = () => {    \r\n    if (1 >= quantity) return;\r\n    const qty = quantity - 1;\r\n    //console.log(\"decrease quantity to\", qty);\r\n    setQuantity(qty);\r\n  };\r\n\r\n  const handlesubcatChange = (e) => {\r\n    setSubCategory(e.target.value);\r\n  };\r\n\r\n  const handlesizeChange = (e) => {\r\n   \r\n      //console.log(product);\r\n      let k = product.hashmap[SubCategory][e.target.value];\r\n      if(k.stock < 1){\r\n        alert.error(\"Item Out of Stock\")\r\n      }\r\n      // debugger\r\n      setProductSize(e.target.value);\r\n    \r\n  };\r\n  const addToCartHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(product.hashmap[SubCategory][ProductSize].stock < 1){\r\n      alert.error(\"Item Not Available\")\r\n    }\r\n    else{\r\n      dispatch(addItemsToCart(product.id, quantity, SubCategory, product.hashmap[SubCategory][ProductSize].size));\r\n      alert.success(\"Item Added To Cart\");\r\n    }\r\n    // if (\r\n    //   // SubCategory.trim() === \"\" ||\r\n    //   ProductSize.size.trim() == \"\"\r\n    //   // SubCategory.trim() === \"SelectCategory\" ||\r\n    //   // ProductSize.trim() == \"selectsize\"\r\n    // ) {\r\n    //   alert.show(\"required Subcategory and Size field\");\r\n    // } else {\r\n      //console.log(\"clicked\");\r\n      \r\n    //}\r\n  };\r\n\r\n  return (\r\n    // <Link className=\"productCard\" to={`/product/${product._id}`}>\r\n    // <form\r\n    //   onSubmit={(e) => {\r\n    //     addToCartHandler(e);\r\n    //   }}\r\n    // >\r\n    <div className=\"productCard\">\r\n      <img src={product.url} alt={product.name} />\r\n\r\n      <div className=\"productCardDesc\">\r\n        <div className=\"productname\">\r\n          <p>{product.name}</p>\r\n        </div>\r\n        <div className=\"productCardSpan\">\r\n          <div className=\"detailsBlock-3-1-1\">\r\n            <button onClick={decreaseQuantity}>-</button>\r\n            <input readOnly type=\"number\" value={quantity} />\r\n            <button onClick={increaseQuantity}>+</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"category\">\r\n          <select\r\n            name=\"category\"\r\n            id=\"category\"\r\n            value={SubCategory}\r\n            onChange={(e) => {\r\n              handlesubcatChange(e);\r\n            }}\r\n            required\r\n          >\r\n            {Object.keys(product.hashmap).map((size) => (\r\n              <option value={size}>{size}</option>\r\n            ))}\r\n            {/* <option value=\"SelectCategory\">Select SubCategory</option>\r\n            <option value=\"Mens sizing\">Mens sizing</option>\r\n            <option value=\"Womens sizing\">Womens sizing</option>\r\n            <option value=\"Boys' sizing\">Boys' sizing</option>\r\n            <option value=\"Girls' sizin\">Girls' sizing</option>\r\n            <option value=\"Toddlers sizing\">Toddlers sizing</option> */}\r\n          </select>\r\n        </div>\r\n        <div className=\"size\">\r\n          <select\r\n            name=\"size\"\r\n            id=\"size\"\r\n            value={ProductSize}\r\n            onChange={(e) => {\r\n              handlesizeChange(e);\r\n            }}\r\n            required\r\n          >\r\n            {/* <option value=\"selectsize\">Select Size</option> */}\r\n\r\n            {product.hashmap[SubCategory].map((item, i) => (\r\n              <option key={item.size} value={i}>\r\n                {item.size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        {\r\n          // <div className=\"stock\">\r\n          //   <p>\r\n          //     Status:\r\n          //     <b\r\n          //       className={\r\n          //         product.hashmap[SubCategory][ProductSize].stock <= 0\r\n          //           ? \"redColor\"\r\n          //           : \"greenColor\"\r\n          //       }\r\n          //     >\r\n          //       {product.hashmap[SubCategory][ProductSize].stock < 1\r\n          //         ? \" Out Of Stock\"\r\n          //         : \" In Stock\"}\r\n          //     </b>\r\n          //     <br />\r\n          //   </p>\r\n          // </div>\r\n        }\r\n\r\n        <div className=\"addshopcart\">\r\n          <button\r\n            onClick={addToCartHandler}\r\n            // disabled={\r\n            //   product.hashmap[SubCategory][ProductSize].stock < 1\r\n            //     ? true\r\n            //     : false\r\n            // }\r\n          >\r\n            <AddShoppingCartIcon className=\"shoppingCartButton\"\r\n              // disabled={\r\n              //   product.hashmap[SubCategory][ProductSize].stock< 1\r\n              //     ? true\r\n              //     : false\r\n              // }\r\n            />\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // </form>\r\n\r\n    // </Link>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\Rahul Gupta\\git\\lockerroom345website\\lockerroom345website\\frontend\\src\\component\\Product\\ReviewCard.js",[],{"ruleId":"508","replacedBy":"509"},{"ruleId":"510","replacedBy":"511"},{"ruleId":"512","severity":1,"message":"513","line":2,"column":21,"nodeType":"514","messageId":"515","endLine":2,"endColumn":29},{"ruleId":"512","severity":1,"message":"516","line":20,"column":8,"nodeType":"514","messageId":"515","endLine":20,"endColumn":19},{"ruleId":"512","severity":1,"message":"517","line":33,"column":10,"nodeType":"514","messageId":"515","endLine":33,"endColumn":18},{"ruleId":"512","severity":1,"message":"518","line":34,"column":10,"nodeType":"514","messageId":"515","endLine":34,"endColumn":20},{"ruleId":"512","severity":1,"message":"519","line":47,"column":8,"nodeType":"514","messageId":"515","endLine":47,"endColumn":22},{"ruleId":"512","severity":1,"message":"520","line":51,"column":8,"nodeType":"514","messageId":"515","endLine":51,"endColumn":16},{"ruleId":"512","severity":1,"message":"521","line":62,"column":18,"nodeType":"514","messageId":"515","endLine":62,"endColumn":33},{"ruleId":"512","severity":1,"message":"522","line":63,"column":13,"nodeType":"514","messageId":"515","endLine":63,"endColumn":17},{"ruleId":"512","severity":1,"message":"523","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":15},{"ruleId":"512","severity":1,"message":"524","line":6,"column":20,"nodeType":"514","messageId":"515","endLine":6,"endColumn":24},{"ruleId":"512","severity":1,"message":"525","line":13,"column":8,"nodeType":"514","messageId":"515","endLine":13,"endColumn":22},{"ruleId":"512","severity":1,"message":"526","line":26,"column":7,"nodeType":"514","messageId":"515","endLine":26,"endColumn":17},{"ruleId":"512","severity":1,"message":"527","line":28,"column":7,"nodeType":"514","messageId":"515","endLine":28,"endColumn":14},{"ruleId":"528","severity":1,"message":"529","line":35,"column":22,"nodeType":"530","messageId":"531","endLine":35,"endColumn":24},{"ruleId":"512","severity":1,"message":"532","line":77,"column":9,"nodeType":"514","messageId":"515","endLine":77,"endColumn":18},{"ruleId":"533","severity":1,"message":"534","line":115,"column":25,"nodeType":"535","messageId":"536","endLine":115,"endColumn":27},{"ruleId":"533","severity":1,"message":"534","line":115,"column":49,"nodeType":"535","messageId":"536","endLine":115,"endColumn":51},{"ruleId":"533","severity":1,"message":"534","line":129,"column":24,"nodeType":"535","messageId":"536","endLine":129,"endColumn":26},{"ruleId":"533","severity":1,"message":"534","line":142,"column":24,"nodeType":"535","messageId":"536","endLine":142,"endColumn":26},{"ruleId":"512","severity":1,"message":"537","line":16,"column":8,"nodeType":"514","messageId":"515","endLine":16,"endColumn":16},{"ruleId":"512","severity":1,"message":"538","line":18,"column":8,"nodeType":"514","messageId":"515","endLine":18,"endColumn":15},{"ruleId":"512","severity":1,"message":"539","line":199,"column":7,"nodeType":"514","messageId":"515","endLine":199,"endColumn":17},{"ruleId":"528","severity":1,"message":"529","line":199,"column":37,"nodeType":"530","messageId":"531","endLine":199,"endColumn":39},{"ruleId":"528","severity":1,"message":"529","line":201,"column":27,"nodeType":"530","messageId":"531","endLine":201,"endColumn":29},{"ruleId":"512","severity":1,"message":"540","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"541","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":14},{"ruleId":"512","severity":1,"message":"542","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":21},{"ruleId":"512","severity":1,"message":"543","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":12},{"ruleId":"512","severity":1,"message":"544","line":17,"column":8,"nodeType":"514","messageId":"515","endLine":17,"endColumn":22},{"ruleId":"512","severity":1,"message":"545","line":18,"column":10,"nodeType":"514","messageId":"515","endLine":18,"endColumn":20},{"ruleId":"512","severity":1,"message":"546","line":20,"column":8,"nodeType":"514","messageId":"515","endLine":20,"endColumn":19},{"ruleId":"512","severity":1,"message":"547","line":23,"column":8,"nodeType":"514","messageId":"515","endLine":23,"endColumn":21},{"ruleId":"548","severity":1,"message":"549","line":27,"column":17,"nodeType":"550","messageId":"536","endLine":27,"endColumn":19},{"ruleId":"512","severity":1,"message":"551","line":54,"column":10,"nodeType":"514","messageId":"515","endLine":54,"endColumn":19},{"ruleId":"512","severity":1,"message":"552","line":54,"column":21,"nodeType":"514","messageId":"515","endLine":54,"endColumn":33},{"ruleId":"512","severity":1,"message":"553","line":75,"column":12,"nodeType":"514","messageId":"515","endLine":75,"endColumn":20},{"ruleId":"512","severity":1,"message":"554","line":7,"column":10,"nodeType":"514","messageId":"515","endLine":7,"endColumn":16},{"ruleId":"512","severity":1,"message":"537","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":16},{"ruleId":"512","severity":1,"message":"555","line":10,"column":8,"nodeType":"514","messageId":"515","endLine":10,"endColumn":18},{"ruleId":"512","severity":1,"message":"538","line":11,"column":8,"nodeType":"514","messageId":"515","endLine":11,"endColumn":15},{"ruleId":"512","severity":1,"message":"556","line":27,"column":11,"nodeType":"514","messageId":"515","endLine":27,"endColumn":16},{"ruleId":"512","severity":1,"message":"557","line":27,"column":19,"nodeType":"514","messageId":"515","endLine":27,"endColumn":26},{"ruleId":"512","severity":1,"message":"558","line":28,"column":9,"nodeType":"514","messageId":"515","endLine":28,"endColumn":27},{"ruleId":"512","severity":1,"message":"559","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":23},{"ruleId":"512","severity":1,"message":"560","line":10,"column":8,"nodeType":"514","messageId":"515","endLine":10,"endColumn":19},{"ruleId":"512","severity":1,"message":"561","line":12,"column":8,"nodeType":"514","messageId":"515","endLine":12,"endColumn":23},{"ruleId":"512","severity":1,"message":"538","line":13,"column":8,"nodeType":"514","messageId":"515","endLine":13,"endColumn":15},{"ruleId":"512","severity":1,"message":"562","line":16,"column":8,"nodeType":"514","messageId":"515","endLine":16,"endColumn":18},{"ruleId":"512","severity":1,"message":"563","line":29,"column":10,"nodeType":"514","messageId":"515","endLine":29,"endColumn":15},{"ruleId":"512","severity":1,"message":"564","line":29,"column":17,"nodeType":"514","messageId":"515","endLine":29,"endColumn":25},{"ruleId":"512","severity":1,"message":"565","line":30,"column":10,"nodeType":"514","messageId":"515","endLine":30,"endColumn":16},{"ruleId":"566","severity":1,"message":"567","line":72,"column":15,"nodeType":"568","messageId":"569","endLine":72,"endColumn":27},{"ruleId":"512","severity":1,"message":"537","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":16},{"ruleId":"512","severity":1,"message":"538","line":11,"column":8,"nodeType":"514","messageId":"515","endLine":11,"endColumn":15},{"ruleId":"512","severity":1,"message":"538","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":15},{"ruleId":"512","severity":1,"message":"559","line":12,"column":8,"nodeType":"514","messageId":"515","endLine":12,"endColumn":23},{"ruleId":"512","severity":1,"message":"561","line":15,"column":8,"nodeType":"514","messageId":"515","endLine":15,"endColumn":23},{"ruleId":"512","severity":1,"message":"538","line":16,"column":8,"nodeType":"514","messageId":"515","endLine":16,"endColumn":15},{"ruleId":"512","severity":1,"message":"570","line":44,"column":9,"nodeType":"514","messageId":"515","endLine":44,"endColumn":19},{"ruleId":"512","severity":1,"message":"538","line":16,"column":8,"nodeType":"514","messageId":"515","endLine":16,"endColumn":15},{"ruleId":"512","severity":1,"message":"541","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":14},{"ruleId":"512","severity":1,"message":"538","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"571","line":21,"column":10,"nodeType":"514","messageId":"515","endLine":21,"endColumn":23},{"ruleId":"512","severity":1,"message":"572","line":26,"column":11,"nodeType":"514","messageId":"515","endLine":26,"endColumn":23},{"ruleId":"533","severity":1,"message":"534","line":218,"column":58,"nodeType":"535","messageId":"536","endLine":218,"endColumn":60},{"ruleId":"512","severity":1,"message":"541","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":14},{"ruleId":"512","severity":1,"message":"573","line":6,"column":10,"nodeType":"514","messageId":"515","endLine":6,"endColumn":21},{"ruleId":"512","severity":1,"message":"574","line":6,"column":23,"nodeType":"514","messageId":"515","endLine":6,"endColumn":34},{"ruleId":"512","severity":1,"message":"540","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"575","line":10,"column":8,"nodeType":"514","messageId":"515","endLine":10,"endColumn":21},{"ruleId":"512","severity":1,"message":"538","line":13,"column":8,"nodeType":"514","messageId":"515","endLine":13,"endColumn":15},{"ruleId":"512","severity":1,"message":"576","line":14,"column":10,"nodeType":"514","messageId":"515","endLine":14,"endColumn":27},{"ruleId":"512","severity":1,"message":"577","line":18,"column":3,"nodeType":"514","messageId":"515","endLine":18,"endColumn":13},{"ruleId":"512","severity":1,"message":"578","line":19,"column":3,"nodeType":"514","messageId":"515","endLine":19,"endColumn":14},{"ruleId":"512","severity":1,"message":"579","line":26,"column":9,"nodeType":"514","messageId":"515","endLine":26,"endColumn":14},{"ruleId":"512","severity":1,"message":"580","line":28,"column":20,"nodeType":"514","messageId":"515","endLine":28,"endColumn":25},{"ruleId":"512","severity":1,"message":"581","line":28,"column":27,"nodeType":"514","messageId":"515","endLine":28,"endColumn":31},{"ruleId":"512","severity":1,"message":"582","line":31,"column":10,"nodeType":"514","messageId":"515","endLine":31,"endColumn":18},{"ruleId":"512","severity":1,"message":"583","line":31,"column":20,"nodeType":"514","messageId":"515","endLine":31,"endColumn":31},{"ruleId":"512","severity":1,"message":"584","line":38,"column":14,"nodeType":"514","messageId":"515","endLine":38,"endColumn":27},{"ruleId":"512","severity":1,"message":"585","line":39,"column":12,"nodeType":"514","messageId":"515","endLine":39,"endColumn":23},{"ruleId":"512","severity":1,"message":"586","line":40,"column":5,"nodeType":"514","messageId":"515","endLine":40,"endColumn":14},{"ruleId":"512","severity":1,"message":"587","line":50,"column":10,"nodeType":"514","messageId":"515","endLine":50,"endColumn":23},{"ruleId":"512","severity":1,"message":"588","line":50,"column":25,"nodeType":"514","messageId":"515","endLine":50,"endColumn":41},{"ruleId":"512","severity":1,"message":"589","line":14,"column":27,"nodeType":"514","messageId":"515","endLine":14,"endColumn":33},{"ruleId":"512","severity":1,"message":"590","line":14,"column":35,"nodeType":"514","messageId":"515","endLine":14,"endColumn":40},{"ruleId":"512","severity":1,"message":"591","line":14,"column":42,"nodeType":"514","messageId":"515","endLine":14,"endColumn":48},{"ruleId":"512","severity":1,"message":"592","line":14,"column":50,"nodeType":"514","messageId":"515","endLine":14,"endColumn":58},{"ruleId":"533","severity":1,"message":"593","line":42,"column":61,"nodeType":"535","messageId":"536","endLine":42,"endColumn":63},{"ruleId":"533","severity":1,"message":"593","line":42,"column":103,"nodeType":"535","messageId":"536","endLine":42,"endColumn":105},{"ruleId":"533","severity":1,"message":"593","line":42,"column":149,"nodeType":"535","messageId":"536","endLine":42,"endColumn":151},{"ruleId":"512","severity":1,"message":"594","line":32,"column":11,"nodeType":"514","messageId":"515","endLine":32,"endColumn":26},{"ruleId":"512","severity":1,"message":"595","line":47,"column":10,"nodeType":"514","messageId":"515","endLine":47,"endColumn":21},{"ruleId":"512","severity":1,"message":"596","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":17},{"ruleId":"512","severity":1,"message":"597","line":10,"column":8,"nodeType":"514","messageId":"515","endLine":10,"endColumn":14},{"ruleId":"512","severity":1,"message":"598","line":29,"column":10,"nodeType":"514","messageId":"515","endLine":29,"endColumn":15},{"ruleId":"512","severity":1,"message":"599","line":31,"column":10,"nodeType":"514","messageId":"515","endLine":31,"endColumn":14},{"ruleId":"512","severity":1,"message":"600","line":31,"column":16,"nodeType":"514","messageId":"515","endLine":31,"endColumn":23},{"ruleId":"512","severity":1,"message":"601","line":32,"column":10,"nodeType":"514","messageId":"515","endLine":32,"endColumn":17},{"ruleId":"512","severity":1,"message":"602","line":32,"column":19,"nodeType":"514","messageId":"515","endLine":32,"endColumn":29},{"ruleId":"512","severity":1,"message":"603","line":85,"column":9,"nodeType":"514","messageId":"515","endLine":85,"endColumn":21},{"ruleId":"604","severity":1,"message":"605","line":96,"column":6,"nodeType":"606","endLine":96,"endColumn":53,"suggestions":"607"},{"ruleId":"512","severity":1,"message":"608","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":14},{"ruleId":"512","severity":1,"message":"609","line":8,"column":8,"nodeType":"514","messageId":"515","endLine":8,"endColumn":14},{"ruleId":"512","severity":1,"message":"598","line":26,"column":10,"nodeType":"514","messageId":"515","endLine":26,"endColumn":15},{"ruleId":"512","severity":1,"message":"601","line":29,"column":10,"nodeType":"514","messageId":"515","endLine":29,"endColumn":17},{"ruleId":"512","severity":1,"message":"602","line":29,"column":19,"nodeType":"514","messageId":"515","endLine":29,"endColumn":29},{"ruleId":"512","severity":1,"message":"603","line":88,"column":9,"nodeType":"514","messageId":"515","endLine":88,"endColumn":21},{"ruleId":"604","severity":1,"message":"610","line":89,"column":6,"nodeType":"606","endLine":89,"endColumn":66,"suggestions":"611"},{"ruleId":"512","severity":1,"message":"541","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"612","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":23},{"ruleId":"512","severity":1,"message":"613","line":12,"column":8,"nodeType":"514","messageId":"515","endLine":12,"endColumn":14},{"ruleId":"512","severity":1,"message":"614","line":13,"column":8,"nodeType":"514","messageId":"515","endLine":13,"endColumn":18},{"ruleId":"512","severity":1,"message":"615","line":15,"column":8,"nodeType":"514","messageId":"515","endLine":15,"endColumn":20},{"ruleId":"512","severity":1,"message":"616","line":16,"column":8,"nodeType":"514","messageId":"515","endLine":16,"endColumn":16},{"ruleId":"512","severity":1,"message":"617","line":20,"column":8,"nodeType":"514","messageId":"515","endLine":20,"endColumn":9},{"ruleId":"512","severity":1,"message":"587","line":44,"column":10,"nodeType":"514","messageId":"515","endLine":44,"endColumn":23},{"ruleId":"512","severity":1,"message":"618","line":51,"column":9,"nodeType":"514","messageId":"515","endLine":51,"endColumn":23},{"ruleId":"512","severity":1,"message":"619","line":63,"column":9,"nodeType":"514","messageId":"515","endLine":63,"endColumn":27},{"ruleId":"512","severity":1,"message":"540","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"620","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":20},{"ruleId":"512","severity":1,"message":"621","line":8,"column":8,"nodeType":"514","messageId":"515","endLine":8,"endColumn":17},{"ruleId":"512","severity":1,"message":"622","line":10,"column":3,"nodeType":"514","messageId":"515","endLine":10,"endColumn":20},{"ruleId":"512","severity":1,"message":"623","line":11,"column":3,"nodeType":"514","messageId":"515","endLine":11,"endColumn":17},{"ruleId":"512","severity":1,"message":"624","line":12,"column":3,"nodeType":"514","messageId":"515","endLine":12,"endColumn":20},{"ruleId":"512","severity":1,"message":"625","line":13,"column":3,"nodeType":"514","messageId":"515","endLine":13,"endColumn":12},{"ruleId":"512","severity":1,"message":"626","line":14,"column":3,"nodeType":"514","messageId":"515","endLine":14,"endColumn":14},{"ruleId":"512","severity":1,"message":"627","line":19,"column":8,"nodeType":"514","messageId":"515","endLine":19,"endColumn":22},{"ruleId":"512","severity":1,"message":"628","line":20,"column":8,"nodeType":"514","messageId":"515","endLine":20,"endColumn":17},{"ruleId":"512","severity":1,"message":"629","line":21,"column":8,"nodeType":"514","messageId":"515","endLine":21,"endColumn":18},{"ruleId":"512","severity":1,"message":"630","line":23,"column":10,"nodeType":"514","messageId":"515","endLine":23,"endColumn":25},{"ruleId":"512","severity":1,"message":"631","line":23,"column":27,"nodeType":"514","messageId":"515","endLine":23,"endColumn":35},{"ruleId":"512","severity":1,"message":"632","line":23,"column":37,"nodeType":"514","messageId":"515","endLine":23,"endColumn":41},{"ruleId":"512","severity":1,"message":"633","line":23,"column":43,"nodeType":"514","messageId":"515","endLine":23,"endColumn":46},{"ruleId":"512","severity":1,"message":"634","line":24,"column":8,"nodeType":"514","messageId":"515","endLine":24,"endColumn":20},{"ruleId":"512","severity":1,"message":"635","line":25,"column":8,"nodeType":"514","messageId":"515","endLine":25,"endColumn":26},{"ruleId":"512","severity":1,"message":"581","line":38,"column":11,"nodeType":"514","messageId":"515","endLine":38,"endColumn":15},{"ruleId":"512","severity":1,"message":"513","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":35},{"ruleId":"512","severity":1,"message":"636","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":24},{"ruleId":"512","severity":1,"message":"572","line":12,"column":21,"nodeType":"514","messageId":"515","endLine":12,"endColumn":33},{"ruleId":"512","severity":1,"message":"581","line":6,"column":37,"nodeType":"514","messageId":"515","endLine":6,"endColumn":41},{"ruleId":"512","severity":1,"message":"541","line":6,"column":10,"nodeType":"514","messageId":"515","endLine":6,"endColumn":14},{"ruleId":"512","severity":1,"message":"636","line":10,"column":10,"nodeType":"514","messageId":"515","endLine":10,"endColumn":24},{"ruleId":"512","severity":1,"message":"578","line":13,"column":23,"nodeType":"514","messageId":"515","endLine":13,"endColumn":34},{"ruleId":"512","severity":1,"message":"637","line":21,"column":9,"nodeType":"514","messageId":"515","endLine":21,"endColumn":18},{"ruleId":"512","severity":1,"message":"638","line":25,"column":9,"nodeType":"514","messageId":"515","endLine":25,"endColumn":15},{"ruleId":"512","severity":1,"message":"639","line":114,"column":9,"nodeType":"514","messageId":"515","endLine":114,"endColumn":25},{"ruleId":"512","severity":1,"message":"541","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":14},{"ruleId":"512","severity":1,"message":"573","line":6,"column":10,"nodeType":"514","messageId":"515","endLine":6,"endColumn":21},{"ruleId":"512","severity":1,"message":"574","line":6,"column":23,"nodeType":"514","messageId":"515","endLine":6,"endColumn":34},{"ruleId":"512","severity":1,"message":"640","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":13},{"ruleId":"512","severity":1,"message":"641","line":6,"column":8,"nodeType":"514","messageId":"515","endLine":6,"endColumn":19},{"ruleId":"512","severity":1,"message":"642","line":8,"column":8,"nodeType":"514","messageId":"515","endLine":8,"endColumn":24},{"ruleId":"512","severity":1,"message":"643","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":18},{"ruleId":"512","severity":1,"message":"644","line":11,"column":8,"nodeType":"514","messageId":"515","endLine":11,"endColumn":34},{"ruleId":"512","severity":1,"message":"645","line":12,"column":10,"nodeType":"514","messageId":"515","endLine":12,"endColumn":17},{"ruleId":"512","severity":1,"message":"646","line":12,"column":19,"nodeType":"514","messageId":"515","endLine":12,"endColumn":24},{"ruleId":"512","severity":1,"message":"647","line":16,"column":8,"nodeType":"514","messageId":"515","endLine":16,"endColumn":25},{"ruleId":"512","severity":1,"message":"579","line":22,"column":9,"nodeType":"514","messageId":"515","endLine":22,"endColumn":14},{"ruleId":"512","severity":1,"message":"648","line":39,"column":7,"nodeType":"514","messageId":"515","endLine":39,"endColumn":16},{"ruleId":"512","severity":1,"message":"608","line":12,"column":8,"nodeType":"514","messageId":"515","endLine":12,"endColumn":14},{"ruleId":"512","severity":1,"message":"649","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"540","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"596","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":17},{"ruleId":"512","severity":1,"message":"650","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":16},{"ruleId":"512","severity":1,"message":"578","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":21},{"ruleId":"512","severity":1,"message":"651","line":5,"column":23,"nodeType":"514","messageId":"515","endLine":5,"endColumn":33},{"ruleId":"512","severity":1,"message":"573","line":6,"column":10,"nodeType":"514","messageId":"515","endLine":6,"endColumn":21},{"ruleId":"512","severity":1,"message":"574","line":6,"column":23,"nodeType":"514","messageId":"515","endLine":6,"endColumn":34},{"ruleId":"512","severity":1,"message":"652","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":14},{"ruleId":"512","severity":1,"message":"653","line":8,"column":10,"nodeType":"514","messageId":"515","endLine":8,"endColumn":18},{"ruleId":"512","severity":1,"message":"654","line":11,"column":8,"nodeType":"514","messageId":"515","endLine":11,"endColumn":17},{"ruleId":"512","severity":1,"message":"655","line":13,"column":8,"nodeType":"514","messageId":"515","endLine":13,"endColumn":15},{"ruleId":"656","severity":1,"message":"657","line":78,"column":9,"nodeType":"658","endLine":78,"endColumn":26},{"ruleId":"512","severity":1,"message":"543","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":12},{"ruleId":"659","severity":1,"message":"660","line":11,"column":8,"nodeType":"658","endLine":11,"endColumn":19},{"ruleId":"659","severity":1,"message":"660","line":12,"column":8,"nodeType":"658","endLine":12,"endColumn":19},{"ruleId":"659","severity":1,"message":"660","line":13,"column":8,"nodeType":"658","endLine":13,"endColumn":19},{"ruleId":"659","severity":1,"message":"660","line":24,"column":9,"nodeType":"658","endLine":24,"endColumn":20},{"ruleId":"659","severity":1,"message":"660","line":25,"column":9,"nodeType":"658","endLine":25,"endColumn":20},{"ruleId":"659","severity":1,"message":"660","line":26,"column":9,"nodeType":"658","endLine":26,"endColumn":20},{"ruleId":"659","severity":1,"message":"660","line":27,"column":9,"nodeType":"658","endLine":27,"endColumn":20},{"ruleId":"512","severity":1,"message":"541","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":14},{"ruleId":"604","severity":1,"message":"661","line":28,"column":6,"nodeType":"606","endLine":28,"endColumn":47,"suggestions":"662"},{"ruleId":"512","severity":1,"message":"554","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":16},{"ruleId":"512","severity":1,"message":"663","line":3,"column":30,"nodeType":"514","messageId":"515","endLine":3,"endColumn":36},{"ruleId":"512","severity":1,"message":"664","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":19},{"ruleId":"512","severity":1,"message":"665","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":21},{"ruleId":"512","severity":1,"message":"666","line":6,"column":8,"nodeType":"514","messageId":"515","endLine":6,"endColumn":20},{"ruleId":"512","severity":1,"message":"513","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":23},{"ruleId":"512","severity":1,"message":"554","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":16},{"ruleId":"512","severity":1,"message":"574","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":21},{"ruleId":"533","severity":1,"message":"534","line":17,"column":32,"nodeType":"535","messageId":"536","endLine":17,"endColumn":34},{"ruleId":"512","severity":1,"message":"543","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":12},{"ruleId":"512","severity":1,"message":"541","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"667","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":18},{"ruleId":"512","severity":1,"message":"668","line":5,"column":20,"nodeType":"514","messageId":"515","endLine":5,"endColumn":28},{"ruleId":"512","severity":1,"message":"669","line":6,"column":8,"nodeType":"514","messageId":"515","endLine":6,"endColumn":22},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":19},{"ruleId":"512","severity":1,"message":"670","line":8,"column":8,"nodeType":"514","messageId":"515","endLine":8,"endColumn":15},{"ruleId":"512","severity":1,"message":"671","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":24},{"ruleId":"512","severity":1,"message":"672","line":10,"column":8,"nodeType":"514","messageId":"515","endLine":10,"endColumn":19},{"ruleId":"512","severity":1,"message":"673","line":11,"column":8,"nodeType":"514","messageId":"515","endLine":11,"endColumn":21},{"ruleId":"512","severity":1,"message":"674","line":12,"column":8,"nodeType":"514","messageId":"515","endLine":12,"endColumn":18},{"ruleId":"512","severity":1,"message":"675","line":13,"column":8,"nodeType":"514","messageId":"515","endLine":13,"endColumn":22},{"ruleId":"512","severity":1,"message":"525","line":14,"column":8,"nodeType":"514","messageId":"515","endLine":14,"endColumn":22},{"ruleId":"512","severity":1,"message":"554","line":19,"column":10,"nodeType":"514","messageId":"515","endLine":19,"endColumn":16},{"ruleId":"512","severity":1,"message":"676","line":20,"column":8,"nodeType":"514","messageId":"515","endLine":20,"endColumn":21},{"ruleId":"512","severity":1,"message":"581","line":26,"column":11,"nodeType":"514","messageId":"515","endLine":26,"endColumn":15},{"ruleId":"512","severity":1,"message":"677","line":28,"column":18,"nodeType":"514","messageId":"515","endLine":28,"endColumn":28},{"ruleId":"512","severity":1,"message":"678","line":26,"column":5,"nodeType":"514","messageId":"515","endLine":26,"endColumn":12},{"ruleId":"533","severity":1,"message":"534","line":45,"column":37,"nodeType":"535","messageId":"536","endLine":45,"endColumn":39},{"ruleId":"533","severity":1,"message":"534","line":52,"column":19,"nodeType":"535","messageId":"536","endLine":52,"endColumn":21},{"ruleId":"512","severity":1,"message":"541","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"541","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":14},{"ruleId":"512","severity":1,"message":"679","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":16},{"ruleId":"512","severity":1,"message":"594","line":14,"column":11,"nodeType":"514","messageId":"515","endLine":14,"endColumn":26},{"ruleId":"512","severity":1,"message":"680","line":16,"column":11,"nodeType":"514","messageId":"515","endLine":16,"endColumn":18},{"ruleId":"512","severity":1,"message":"681","line":16,"column":27,"nodeType":"514","messageId":"515","endLine":16,"endColumn":38},{"ruleId":"512","severity":1,"message":"595","line":20,"column":10,"nodeType":"514","messageId":"515","endLine":20,"endColumn":21},{"ruleId":"512","severity":1,"message":"682","line":21,"column":9,"nodeType":"514","messageId":"515","endLine":21,"endColumn":16},{"ruleId":"512","severity":1,"message":"683","line":26,"column":9,"nodeType":"514","messageId":"515","endLine":26,"endColumn":26},"no-native-reassign",["684"],"no-negated-in-lhs",["685"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'UserOptions' is defined but never used.","'Elements' is defined but never used.","'loadStripe' is defined but never used.","'ProductReviews' is defined but never used.","'NotFound' is defined but never used.","'getStripeApiKey' is defined but never used.","'data' is assigned a value but never used.","'Sidebar' is defined but never used.","'Line' is defined but never used.","'lockerroomlogo' is defined but never used.","'outOfStock' is assigned a value but never used.","'instock' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'lineState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EditIcon' is defined but never used.","'SideBar' is defined but never used.","'stockarray' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'ReactNavbar' is defined but never used.","'logo' is defined but never used.","'Inventory2Icon' is defined but never used.","'lightGreen' is defined but never used.","'PostAddIcon' is defined but never used.","'PersonAddIcon' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'cartCount' is assigned a value but never used.","'setcartCount' is assigned a value but never used.","'products' is defined but never used.","'Button' is defined but never used.","'DeleteIcon' is defined but never used.","'order' is assigned a value but never used.","'loading' is assigned a value but never used.","'deleteOrderHandler' is assigned a value but never used.","'DescriptionIcon' is defined but never used.","'StorageIcon' is defined but never used.","'AttachMoneyIcon' is defined but never used.","'HeightIcon' is defined but never used.","'Stock' is assigned a value but never used.","'setStock' is assigned a value but never used.","'images' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'categories' is assigned a value but never used.","'submitHandler' is defined but never used.","'shippingInfo' is assigned a value but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'ApartmentIcon' is defined but never used.","'UPDATE_USER_RESET' is defined but never used.","'updateUser' is defined but never used.","'clearErrors' is defined but never used.","'alert' is assigned a value but never used.","'error' is assigned a value but never used.","'user' is assigned a value but never used.","'userinfo' is assigned a value but never used.","'setUserinfo' is assigned a value but never used.","'updateLoading' is assigned a value but never used.","'updateError' is assigned a value but never used.","'isUpdated' is assigned a value but never used.","'avatarPreview' is assigned a value but never used.","'setAvatarPreview' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","Expected '!==' and instead saw '!='.","'isAuthenticated' is assigned a value but never used.","'requestForm' is assigned a value but never used.","'CgMouse' is defined but never used.","'Donate' is defined but never used.","'price' is assigned a value but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'ratings' is assigned a value but never used.","'setRatings' is assigned a value but never used.","'priceHandler' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.","ArrayExpression",["686"],"'Header' is defined but never used.","'Slider' is defined but never used.","React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["687"],"'MailOutlineIcon' is defined but never used.","'WcIcon' is defined but never used.","'CreateIcon' is defined but never used.","'LockOpenIcon' is defined but never used.","'FaceIcon' is defined but never used.","'$' is defined but never used.","'registerSubmit' is assigned a value but never used.","'registerDataChange' is assigned a value but never used.","'ReactToPrint' is defined but never used.","'PrintIcon' is defined but never used.","'CardNumberElement' is defined but never used.","'CardCvcElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'useStripe' is defined but never used.","'useElements' is defined but never used.","'CreditCardIcon' is defined but never used.","'EventIcon' is defined but never used.","'VpnKeyIcon' is defined but never used.","'PDFDownloadLink' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'pdf' is defined but never used.","'ConfirmOrder' is defined but never used.","'RequestFormReplica' is defined but never used.","'addItemsToCart' is defined but never used.","'orderInfo' is assigned a value but never used.","'payBtn' is assigned a value but never used.","'proceedToPayment' is assigned a value but never used.","'store' is defined but never used.","'PinDropIcon' is defined but never used.","'LocationCityIcon' is defined but never used.","'PublicIcon' is defined but never used.","'TransferWithinAStationIcon' is defined but never used.","'Country' is defined but never used.","'State' is defined but never used.","'LocalShippingIcon' is defined but never used.","'orderDate' is assigned a value but never used.","'Fragment' is defined but never used.","'MetaData' is defined but never used.","'getProduct' is defined but never used.","'Loader' is defined but never used.","'useAlert' is defined but never used.","'donateimg' is defined but never used.","'Payment' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.",["688"],"'Avatar' is defined but never used.","'YouTubeIcon' is defined but never used.","'InstagramIcon' is defined but never used.","'dicksmission' is defined but never used.","'TreeView' is defined but never used.","'TreeItem' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'AddIcon' is defined but never used.","'ImportExportIcon' is defined but never used.","'ListAltIcon' is defined but never used.","'DashboardIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'RateReviewIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'logoutUser' is defined but never used.","'orderId' is assigned a value but never used.","'Rating' is defined but never used.","'success' is assigned a value but never used.","'reviewError' is assigned a value but never used.","'options' is assigned a value but never used.","'takeToRequestForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},"Update the dependencies array to be: [dispatch, currentPage, category, error, alert, keyword]",{"range":"695","text":"696"},"Update the dependencies array to be: [dispatch, error, alert, history, isAuthenticated, redirect, user.role]",{"range":"697","text":"698"},"Update the dependencies array to be: [dispatch, alert, error, match.params.id, order]",{"range":"699","text":"700"},[2692,2739],"[dispatch, currentPage, category, error, alert, keyword]",[2694,2754],"[dispatch, error, alert, history, isAuthenticated, redirect, user.role]",[1014,1055],"[dispatch, alert, error, match.params.id, order]"]